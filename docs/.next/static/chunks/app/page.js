/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fxiaoqi%2Fworkspace%2Fui-library%2Fdocs%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fxiaoqi%2Fworkspace%2Fui-library%2Fdocs%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \***********************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ4aWFvcWklMkZ3b3Jrc3BhY2UlMkZ1aS1saWJyYXJ5JTJGZG9jcyUyRmFwcCUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsc0pBQXlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NDJkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy94aWFvcWkvd29ya3NwYWNlL3VpLWxpYnJhcnkvZG9jcy9hcHAvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fxiaoqi%2Fworkspace%2Fui-library%2Fdocs%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function (global, factory) {\n     true ? module.exports = factory() :\n    0;\n})(this, (function () { 'use strict';\n\n    // Matches the scheme of a URL, eg \"http://\"\n    const schemeRegex = /^[\\w+.-]+:\\/\\//;\n    /**\n     * Matches the parts of a URL:\n     * 1. Scheme, including \":\", guaranteed.\n     * 2. User/password, including \"@\", optional.\n     * 3. Host, guaranteed.\n     * 4. Port, including \":\", optional.\n     * 5. Path, including \"/\", optional.\n     * 6. Query, including \"?\", optional.\n     * 7. Hash, including \"#\", optional.\n     */\n    const urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n    /**\n     * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n     * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n     *\n     * 1. Host, optional.\n     * 2. Path, which may include \"/\", guaranteed.\n     * 3. Query, including \"?\", optional.\n     * 4. Hash, including \"#\", optional.\n     */\n    const fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n    function isAbsoluteUrl(input) {\n        return schemeRegex.test(input);\n    }\n    function isSchemeRelativeUrl(input) {\n        return input.startsWith('//');\n    }\n    function isAbsolutePath(input) {\n        return input.startsWith('/');\n    }\n    function isFileUrl(input) {\n        return input.startsWith('file:');\n    }\n    function isRelative(input) {\n        return /^[.?#]/.test(input);\n    }\n    function parseAbsoluteUrl(input) {\n        const match = urlRegex.exec(input);\n        return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');\n    }\n    function parseFileUrl(input) {\n        const match = fileRegex.exec(input);\n        const path = match[2];\n        return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');\n    }\n    function makeUrl(scheme, user, host, port, path, query, hash) {\n        return {\n            scheme,\n            user,\n            host,\n            port,\n            path,\n            query,\n            hash,\n            type: 7 /* Absolute */,\n        };\n    }\n    function parseUrl(input) {\n        if (isSchemeRelativeUrl(input)) {\n            const url = parseAbsoluteUrl('http:' + input);\n            url.scheme = '';\n            url.type = 6 /* SchemeRelative */;\n            return url;\n        }\n        if (isAbsolutePath(input)) {\n            const url = parseAbsoluteUrl('http://foo.com' + input);\n            url.scheme = '';\n            url.host = '';\n            url.type = 5 /* AbsolutePath */;\n            return url;\n        }\n        if (isFileUrl(input))\n            return parseFileUrl(input);\n        if (isAbsoluteUrl(input))\n            return parseAbsoluteUrl(input);\n        const url = parseAbsoluteUrl('http://foo.com/' + input);\n        url.scheme = '';\n        url.host = '';\n        url.type = input\n            ? input.startsWith('?')\n                ? 3 /* Query */\n                : input.startsWith('#')\n                    ? 2 /* Hash */\n                    : 4 /* RelativePath */\n            : 1 /* Empty */;\n        return url;\n    }\n    function stripPathFilename(path) {\n        // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n        // paths. It's not a file, so we can't strip it.\n        if (path.endsWith('/..'))\n            return path;\n        const index = path.lastIndexOf('/');\n        return path.slice(0, index + 1);\n    }\n    function mergePaths(url, base) {\n        normalizePath(base, base.type);\n        // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n        // path).\n        if (url.path === '/') {\n            url.path = base.path;\n        }\n        else {\n            // Resolution happens relative to the base path's directory, not the file.\n            url.path = stripPathFilename(base.path) + url.path;\n        }\n    }\n    /**\n     * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n     * \"foo/.\". We need to normalize to a standard representation.\n     */\n    function normalizePath(url, type) {\n        const rel = type <= 4 /* RelativePath */;\n        const pieces = url.path.split('/');\n        // We need to preserve the first piece always, so that we output a leading slash. The item at\n        // pieces[0] is an empty string.\n        let pointer = 1;\n        // Positive is the number of real directories we've output, used for popping a parent directory.\n        // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n        let positive = 0;\n        // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n        // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n        // real directory, we won't need to append, unless the other conditions happen again.\n        let addTrailingSlash = false;\n        for (let i = 1; i < pieces.length; i++) {\n            const piece = pieces[i];\n            // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n            if (!piece) {\n                addTrailingSlash = true;\n                continue;\n            }\n            // If we encounter a real directory, then we don't need to append anymore.\n            addTrailingSlash = false;\n            // A current directory, which we can always drop.\n            if (piece === '.')\n                continue;\n            // A parent directory, we need to see if there are any real directories we can pop. Else, we\n            // have an excess of parents, and we'll need to keep the \"..\".\n            if (piece === '..') {\n                if (positive) {\n                    addTrailingSlash = true;\n                    positive--;\n                    pointer--;\n                }\n                else if (rel) {\n                    // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n                    // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n                    pieces[pointer++] = piece;\n                }\n                continue;\n            }\n            // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n            // any popped or dropped directories.\n            pieces[pointer++] = piece;\n            positive++;\n        }\n        let path = '';\n        for (let i = 1; i < pointer; i++) {\n            path += '/' + pieces[i];\n        }\n        if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n            path += '/';\n        }\n        url.path = path;\n    }\n    /**\n     * Attempts to resolve `input` URL/path relative to `base`.\n     */\n    function resolve(input, base) {\n        if (!input && !base)\n            return '';\n        const url = parseUrl(input);\n        let inputType = url.type;\n        if (base && inputType !== 7 /* Absolute */) {\n            const baseUrl = parseUrl(base);\n            const baseType = baseUrl.type;\n            switch (inputType) {\n                case 1 /* Empty */:\n                    url.hash = baseUrl.hash;\n                // fall through\n                case 2 /* Hash */:\n                    url.query = baseUrl.query;\n                // fall through\n                case 3 /* Query */:\n                case 4 /* RelativePath */:\n                    mergePaths(url, baseUrl);\n                // fall through\n                case 5 /* AbsolutePath */:\n                    // The host, user, and port are joined, you can't copy one without the others.\n                    url.user = baseUrl.user;\n                    url.host = baseUrl.host;\n                    url.port = baseUrl.port;\n                // fall through\n                case 6 /* SchemeRelative */:\n                    // The input doesn't have a schema at least, so we need to copy at least that over.\n                    url.scheme = baseUrl.scheme;\n            }\n            if (baseType > inputType)\n                inputType = baseType;\n        }\n        normalizePath(url, inputType);\n        const queryHash = url.query + url.hash;\n        switch (inputType) {\n            // This is impossible, because of the empty checks at the start of the function.\n            // case UrlType.Empty:\n            case 2 /* Hash */:\n            case 3 /* Query */:\n                return queryHash;\n            case 4 /* RelativePath */: {\n                // The first char is always a \"/\", and we need it to be relative.\n                const path = url.path.slice(1);\n                if (!path)\n                    return queryHash || '.';\n                if (isRelative(base || input) && !isRelative(path)) {\n                    // If base started with a leading \".\", or there is no base and input started with a \".\",\n                    // then we need to ensure that the relative path starts with a \".\". We don't know if\n                    // relative starts with a \"..\", though, so check before prepending.\n                    return './' + path + queryHash;\n                }\n                return path + queryHash;\n            }\n            case 5 /* AbsolutePath */:\n                return url.path + queryHash;\n            default:\n                return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n        }\n    }\n\n    return resolve;\n\n}));\n//# sourceMappingURL=resolve-uri.umd.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lines-and-columns/build/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/lines-and-columns/build/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9saW5lcy1hbmQtY29sdW1ucy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQjtBQUNsQix1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHVCQUF1QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHVCQUF1QjtBQUN2QixrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xpbmVzLWFuZC1jb2x1bW5zL2J1aWxkL2luZGV4LmpzP2Q5MGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5MaW5lc0FuZENvbHVtbnMgPSB2b2lkIDA7XG52YXIgTEYgPSAnXFxuJztcbnZhciBDUiA9ICdcXHInO1xudmFyIExpbmVzQW5kQ29sdW1ucyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBMaW5lc0FuZENvbHVtbnMoc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuc3RyaW5nID0gc3RyaW5nO1xuICAgICAgICB2YXIgb2Zmc2V0cyA9IFswXTtcbiAgICAgICAgZm9yICh2YXIgb2Zmc2V0ID0gMDsgb2Zmc2V0IDwgc3RyaW5nLmxlbmd0aDspIHtcbiAgICAgICAgICAgIHN3aXRjaCAoc3RyaW5nW29mZnNldF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIExGOlxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQgKz0gTEYubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBvZmZzZXRzLnB1c2gob2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBDUjpcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ICs9IENSLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmluZ1tvZmZzZXRdID09PSBMRikge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ICs9IExGLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBvZmZzZXRzLnB1c2gob2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0Kys7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMub2Zmc2V0cyA9IG9mZnNldHM7XG4gICAgfVxuICAgIExpbmVzQW5kQ29sdW1ucy5wcm90b3R5cGUubG9jYXRpb25Gb3JJbmRleCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPCAwIHx8IGluZGV4ID4gdGhpcy5zdHJpbmcubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGluZSA9IDA7XG4gICAgICAgIHZhciBvZmZzZXRzID0gdGhpcy5vZmZzZXRzO1xuICAgICAgICB3aGlsZSAob2Zmc2V0c1tsaW5lICsgMV0gPD0gaW5kZXgpIHtcbiAgICAgICAgICAgIGxpbmUrKztcbiAgICAgICAgfVxuICAgICAgICB2YXIgY29sdW1uID0gaW5kZXggLSBvZmZzZXRzW2xpbmVdO1xuICAgICAgICByZXR1cm4geyBsaW5lOiBsaW5lLCBjb2x1bW46IGNvbHVtbiB9O1xuICAgIH07XG4gICAgTGluZXNBbmRDb2x1bW5zLnByb3RvdHlwZS5pbmRleEZvckxvY2F0aW9uID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICAgIHZhciBsaW5lID0gbG9jYXRpb24ubGluZSwgY29sdW1uID0gbG9jYXRpb24uY29sdW1uO1xuICAgICAgICBpZiAobGluZSA8IDAgfHwgbGluZSA+PSB0aGlzLm9mZnNldHMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29sdW1uIDwgMCB8fCBjb2x1bW4gPiB0aGlzLmxlbmd0aE9mTGluZShsaW5lKSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMub2Zmc2V0c1tsaW5lXSArIGNvbHVtbjtcbiAgICB9O1xuICAgIExpbmVzQW5kQ29sdW1ucy5wcm90b3R5cGUubGVuZ3RoT2ZMaW5lID0gZnVuY3Rpb24gKGxpbmUpIHtcbiAgICAgICAgdmFyIG9mZnNldCA9IHRoaXMub2Zmc2V0c1tsaW5lXTtcbiAgICAgICAgdmFyIG5leHRPZmZzZXQgPSBsaW5lID09PSB0aGlzLm9mZnNldHMubGVuZ3RoIC0gMVxuICAgICAgICAgICAgPyB0aGlzLnN0cmluZy5sZW5ndGhcbiAgICAgICAgICAgIDogdGhpcy5vZmZzZXRzW2xpbmUgKyAxXTtcbiAgICAgICAgcmV0dXJuIG5leHRPZmZzZXQgLSBvZmZzZXQ7XG4gICAgfTtcbiAgICByZXR1cm4gTGluZXNBbmRDb2x1bW5zO1xufSgpKTtcbmV4cG9ydHMuTGluZXNBbmRDb2x1bW5zID0gTGluZXNBbmRDb2x1bW5zO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBMaW5lc0FuZENvbHVtbnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lines-and-columns/build/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/Icon.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Icon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\n\nconst Icon = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c = (param, ref)=>{\n    let { color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, iconNode, ...rest } = param;\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n        ref,\n        ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide\", className),\n        ...!children && !(0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.hasA11yProp)(rest) && {\n            \"aria-hidden\": \"true\"\n        },\n        ...rest\n    }, [\n        ...iconNode.map((param)=>{\n            let [tag, attrs] = param;\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs);\n        }),\n        ...Array.isArray(children) ? children : [\n            children\n        ]\n    ]);\n});\n_c1 = Icon;\n //# sourceMappingURL=Icon.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Icon$forwardRef\");\n$RefreshReg$(_c1, \"Icon\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBLE1BQU1BLHFCQUFPQyxpREFBVUEsTUFDckIsUUFXRUM7UUFWQSxFQUNFQyxRQUFRLGdCQUNSQyxPQUFPLElBQ1BDLGNBQWMsR0FDZEMsbUJBQUEsRUFDQUMsWUFBWSxJQUNaQyxRQUFBLEVBQ0FDLFFBQUEsRUFDQSxHQUFHQyxNQUFBO3lCQUlMQyxvREFBYUEsQ0FDWCxPQUNBO1FBQ0VUO1FBQ0EsR0FBR1UsNkRBQUE7UUFDSEMsT0FBT1Q7UUFDUFUsUUFBUVY7UUFDUlcsUUFBUVo7UUFDUkUsYUFBYUMsc0JBQXVCVSxPQUFPWCxlQUFlLEtBQU1XLE9BQU9aLFFBQVFDO1FBQy9FRSxXQUFXVSxrRUFBWUEsQ0FBQyxVQUFVVjtRQUNsQyxHQUFJLENBQUNDLFlBQVksQ0FBQ1UsaUVBQVdBLENBQUNSLFNBQVM7WUFBRSxlQUFlO1FBQU87UUFDL0QsR0FBR0EsSUFBQTtJQUNMLEdBQ0E7V0FDS0QsU0FBU1UsR0FBQSxDQUFJO2dCQUFDLENBQUNDLEtBQUtDLE1BQVc7aUNBQUFWLG9EQUFhQSxDQUFDUyxLQUFLQzs7V0FDakRDLE1BQU1DLE9BQUEsQ0FBUWYsWUFBWUEsV0FBVztZQUFDQTtTQUFRO0tBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9JY29uLnRzP2FkYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCwgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWZhdWx0QXR0cmlidXRlcyBmcm9tICcuL2RlZmF1bHRBdHRyaWJ1dGVzJztcbmltcG9ydCB7IEljb25Ob2RlLCBMdWNpZGVQcm9wcyB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgbWVyZ2VDbGFzc2VzLCBoYXNBMTF5UHJvcCB9IGZyb20gJ0BsdWNpZGUvc2hhcmVkJztcblxuaW50ZXJmYWNlIEljb25Db21wb25lbnRQcm9wcyBleHRlbmRzIEx1Y2lkZVByb3BzIHtcbiAgaWNvbk5vZGU6IEljb25Ob2RlO1xufVxuXG4vKipcbiAqIEx1Y2lkZSBpY29uIGNvbXBvbmVudFxuICpcbiAqIEBjb21wb25lbnQgSWNvblxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvcHMuY29sb3IgLSBUaGUgY29sb3Igb2YgdGhlIGljb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBwcm9wcy5zaXplIC0gVGhlIHNpemUgb2YgdGhlIGljb25cbiAqIEBwYXJhbSB7bnVtYmVyfSBwcm9wcy5zdHJva2VXaWR0aCAtIFRoZSBzdHJva2Ugd2lkdGggb2YgdGhlIGljb25cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gcHJvcHMuYWJzb2x1dGVTdHJva2VXaWR0aCAtIFdoZXRoZXIgdG8gdXNlIGFic29sdXRlIHN0cm9rZSB3aWR0aFxuICogQHBhcmFtIHtzdHJpbmd9IHByb3BzLmNsYXNzTmFtZSAtIFRoZSBjbGFzcyBuYW1lIG9mIHRoZSBpY29uXG4gKiBAcGFyYW0ge0ljb25Ob2RlfSBwcm9wcy5jaGlsZHJlbiAtIFRoZSBjaGlsZHJlbiBvZiB0aGUgaWNvblxuICogQHBhcmFtIHtJY29uTm9kZX0gcHJvcHMuaWNvbk5vZGUgLSBUaGUgaWNvbiBub2RlIG9mIHRoZSBpY29uXG4gKlxuICogQHJldHVybnMge0ZvcndhcmRSZWZFeG90aWNDb21wb25lbnR9IEx1Y2lkZUljb25cbiAqL1xuY29uc3QgSWNvbiA9IGZvcndhcmRSZWY8U1ZHU1ZHRWxlbWVudCwgSWNvbkNvbXBvbmVudFByb3BzPihcbiAgKFxuICAgIHtcbiAgICAgIGNvbG9yID0gJ2N1cnJlbnRDb2xvcicsXG4gICAgICBzaXplID0gMjQsXG4gICAgICBzdHJva2VXaWR0aCA9IDIsXG4gICAgICBhYnNvbHV0ZVN0cm9rZVdpZHRoLFxuICAgICAgY2xhc3NOYW1lID0gJycsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGljb25Ob2RlLFxuICAgICAgLi4ucmVzdFxuICAgIH0sXG4gICAgcmVmLFxuICApID0+XG4gICAgY3JlYXRlRWxlbWVudChcbiAgICAgICdzdmcnLFxuICAgICAge1xuICAgICAgICByZWYsXG4gICAgICAgIC4uLmRlZmF1bHRBdHRyaWJ1dGVzLFxuICAgICAgICB3aWR0aDogc2l6ZSxcbiAgICAgICAgaGVpZ2h0OiBzaXplLFxuICAgICAgICBzdHJva2U6IGNvbG9yLFxuICAgICAgICBzdHJva2VXaWR0aDogYWJzb2x1dGVTdHJva2VXaWR0aCA/IChOdW1iZXIoc3Ryb2tlV2lkdGgpICogMjQpIC8gTnVtYmVyKHNpemUpIDogc3Ryb2tlV2lkdGgsXG4gICAgICAgIGNsYXNzTmFtZTogbWVyZ2VDbGFzc2VzKCdsdWNpZGUnLCBjbGFzc05hbWUpLFxuICAgICAgICAuLi4oIWNoaWxkcmVuICYmICFoYXNBMTF5UHJvcChyZXN0KSAmJiB7ICdhcmlhLWhpZGRlbic6ICd0cnVlJyB9KSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgIH0sXG4gICAgICBbXG4gICAgICAgIC4uLmljb25Ob2RlLm1hcCgoW3RhZywgYXR0cnNdKSA9PiBjcmVhdGVFbGVtZW50KHRhZywgYXR0cnMpKSxcbiAgICAgICAgLi4uKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSxcbiAgICAgIF0sXG4gICAgKSxcbik7XG5cbmV4cG9ydCBkZWZhdWx0IEljb247XG4iXSwibmFtZXMiOlsiSWNvbiIsImZvcndhcmRSZWYiLCJyZWYiLCJjb2xvciIsInNpemUiLCJzdHJva2VXaWR0aCIsImFic29sdXRlU3Ryb2tlV2lkdGgiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsImljb25Ob2RlIiwicmVzdCIsImNyZWF0ZUVsZW1lbnQiLCJkZWZhdWx0QXR0cmlidXRlcyIsIndpZHRoIiwiaGVpZ2h0Iiwic3Ryb2tlIiwiTnVtYmVyIiwibWVyZ2VDbGFzc2VzIiwiaGFzQTExeVByb3AiLCJtYXAiLCJ0YWciLCJhdHRycyIsIkFycmF5IiwiaXNBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ createLucideIcon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\");\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\n\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((param, ref)=>{\n        let { className, ...props } = param;\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Icon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n            ref,\n            iconNode,\n            className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide-\".concat((0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toKebabCase)((0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toPascalCase)(iconName))), \"lucide-\".concat(iconName), className),\n            ...props\n        });\n    });\n    Component.displayName = (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toPascalCase)(iconName);\n    return Component;\n};\n //# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBV00sTUFBQUEsbUJBQW1CLENBQUNDLFVBQWtCQztJQUMxQyxNQUFNQywwQkFBWUMsaURBQVVBLENBQTZCLFFBQTBCQztZQUF6QixFQUFFQyxTQUFXLEtBQUdDLE9BQVM7NkJBQ2pGQyxvREFBYUEsQ0FBQ0MsZ0RBQUlBLEVBQUU7WUFDbEJKO1lBQ0FIO1lBQ0FJLFdBQVdJLGtFQUFZQSxDQUNyQixVQUE2QyxPQUFuQ0MsaUVBQVdBLENBQUNDLGtFQUFZQSxDQUFDWCxhQUNuQyxVQUFrQixPQUFSQSxXQUNWSztZQUVGLEdBQUdDLEtBQUE7UUFDSjs7SUFHT0osVUFBQVUsV0FBQSxHQUFjRCxrRUFBWUEsQ0FBQ1g7SUFFOUIsT0FBQUU7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL2NyZWF0ZUx1Y2lkZUljb24udHM/MDQ4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbGVtZW50LCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWVyZ2VDbGFzc2VzLCB0b0tlYmFiQ2FzZSwgdG9QYXNjYWxDYXNlIH0gZnJvbSAnQGx1Y2lkZS9zaGFyZWQnO1xuaW1wb3J0IHsgSWNvbk5vZGUsIEx1Y2lkZVByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgSWNvbiBmcm9tICcuL0ljb24nO1xuXG4vKipcbiAqIENyZWF0ZSBhIEx1Y2lkZSBpY29uIGNvbXBvbmVudFxuICogQHBhcmFtIHtzdHJpbmd9IGljb25OYW1lXG4gKiBAcGFyYW0ge2FycmF5fSBpY29uTm9kZVxuICogQHJldHVybnMge0ZvcndhcmRSZWZFeG90aWNDb21wb25lbnR9IEx1Y2lkZUljb25cbiAqL1xuY29uc3QgY3JlYXRlTHVjaWRlSWNvbiA9IChpY29uTmFtZTogc3RyaW5nLCBpY29uTm9kZTogSWNvbk5vZGUpID0+IHtcbiAgY29uc3QgQ29tcG9uZW50ID0gZm9yd2FyZFJlZjxTVkdTVkdFbGVtZW50LCBMdWNpZGVQcm9wcz4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+XG4gICAgY3JlYXRlRWxlbWVudChJY29uLCB7XG4gICAgICByZWYsXG4gICAgICBpY29uTm9kZSxcbiAgICAgIGNsYXNzTmFtZTogbWVyZ2VDbGFzc2VzKFxuICAgICAgICBgbHVjaWRlLSR7dG9LZWJhYkNhc2UodG9QYXNjYWxDYXNlKGljb25OYW1lKSl9YCxcbiAgICAgICAgYGx1Y2lkZS0ke2ljb25OYW1lfWAsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICksXG4gICAgICAuLi5wcm9wcyxcbiAgICB9KSxcbiAgKTtcblxuICBDb21wb25lbnQuZGlzcGxheU5hbWUgPSB0b1Bhc2NhbENhc2UoaWNvbk5hbWUpO1xuXG4gIHJldHVybiBDb21wb25lbnQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVMdWNpZGVJY29uO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUx1Y2lkZUljb24iLCJpY29uTmFtZSIsImljb25Ob2RlIiwiQ29tcG9uZW50IiwiZm9yd2FyZFJlZiIsInJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwiY3JlYXRlRWxlbWVudCIsIkljb24iLCJtZXJnZUNsYXNzZXMiLCJ0b0tlYmFiQ2FzZSIsInRvUGFzY2FsQ2FzZSIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ defaultAttributes; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\n //# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQUEsSUFBZUEsb0JBQUE7SUFDYkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsU0FBUztJQUNUQyxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsYUFBYTtJQUNiQyxlQUFlO0lBQ2ZDLGdCQUFnQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL2RlZmF1bHRBdHRyaWJ1dGVzLnRzPzM3MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICB4bWxuczogJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyxcbiAgd2lkdGg6IDI0LFxuICBoZWlnaHQ6IDI0LFxuICB2aWV3Qm94OiAnMCAwIDI0IDI0JyxcbiAgZmlsbDogJ25vbmUnLFxuICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICBzdHJva2VXaWR0aDogMixcbiAgc3Ryb2tlTGluZWNhcDogJ3JvdW5kJyxcbiAgc3Ryb2tlTGluZWpvaW46ICdyb3VuZCcsXG59O1xuIl0sIm5hbWVzIjpbImRlZmF1bHRBdHRyaWJ1dGVzIiwieG1sbnMiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/code.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/code.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Code; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst __iconNode = [\n    [\n        \"path\",\n        {\n            d: \"m16 18 6-6-6-6\",\n            key: \"eg8j8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 6-6 6 6 6\",\n            key: \"ppft3o\"\n        }\n    ]\n];\nconst Code = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"code\", __iconNode);\n //# sourceMappingURL=code.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFHTyxNQUFNQSxhQUF1QjtJQUNsQztRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUFrQkMsS0FBSztRQUFBO0tBQVM7SUFDOUM7UUFBQztRQUFRO1lBQUVELEdBQUc7WUFBZ0JDLEtBQUs7UUFBVTtLQUFBO0NBQy9DO0FBYU0sTUFBQUMsT0FBT0MsZ0VBQWdCQSxDQUFDLFFBQVFKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvY29kZS50cz8xZTg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuaW1wb3J0IHsgSWNvbk5vZGUgfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBfX2ljb25Ob2RlOiBJY29uTm9kZSA9IFtcbiAgWydwYXRoJywgeyBkOiAnbTE2IDE4IDYtNi02LTYnLCBrZXk6ICdlZzhqOCcgfV0sXG4gIFsncGF0aCcsIHsgZDogJ204IDYtNiA2IDYgNicsIGtleTogJ3BwZnQzbycgfV0sXG5dO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgQ29kZVxuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4Y0dGMGFDQmtQU0p0TVRZZ01UZ2dOaTAyTFRZdE5pSWdMejRLSUNBOGNHRjBhQ0JrUFNKdE9DQTJMVFlnTmlBMklEWWlJQzgrQ2p3dmMzWm5QZ289KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9jb2RlXG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgQ29kZSA9IGNyZWF0ZUx1Y2lkZUljb24oJ2NvZGUnLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IGRlZmF1bHQgQ29kZTtcbiJdLCJuYW1lcyI6WyJfX2ljb25Ob2RlIiwiZCIsImtleSIsIkNvZGUiLCJjcmVhdGVMdWNpZGVJY29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/code.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/copy.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/copy.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Copy; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst __iconNode = [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n];\nconst Copy = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"copy\", __iconNode);\n //# sourceMappingURL=copy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY29weS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFHTyxNQUFNQSxhQUF1QjtJQUNsQztRQUFDO1FBQVE7WUFBRUMsT0FBTztZQUFNQyxRQUFRO1lBQU1DLEdBQUc7WUFBS0MsR0FBRztZQUFLQyxJQUFJO1lBQUtDLElBQUk7WUFBS0MsS0FBSztRQUFBO0tBQVU7SUFDdkY7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBMkRELEtBQUs7UUFBVTtLQUFBO0NBQzFGO0FBYU0sTUFBQUUsT0FBT0MsZ0VBQWdCQSxDQUFDLFFBQVFWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvY29weS50cz9hZjlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuaW1wb3J0IHsgSWNvbk5vZGUgfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBfX2ljb25Ob2RlOiBJY29uTm9kZSA9IFtcbiAgWydyZWN0JywgeyB3aWR0aDogJzE0JywgaGVpZ2h0OiAnMTQnLCB4OiAnOCcsIHk6ICc4Jywgcng6ICcyJywgcnk6ICcyJywga2V5OiAnMTdqeWVhJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTQgMTZjLTEuMSAwLTItLjktMi0yVjRjMC0xLjEuOS0yIDItMmgxMGMxLjEgMCAyIC45IDIgMicsIGtleTogJ3ppeDl1ZicgfV0sXG5dO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgQ29weVxuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4Y21WamRDQjNhV1IwYUQwaU1UUWlJR2hsYVdkb2REMGlNVFFpSUhnOUlqZ2lJSGs5SWpnaUlISjRQU0l5SWlCeWVUMGlNaUlnTHo0S0lDQThjR0YwYUNCa1BTSk5OQ0F4Tm1NdE1TNHhJREF0TWkwdU9TMHlMVEpXTkdNd0xURXVNUzQ1TFRJZ01pMHlhREV3WXpFdU1TQXdJRElnTGprZ01pQXlJaUF2UGdvOEwzTjJaejRLKSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9jb3B5XG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgQ29weSA9IGNyZWF0ZUx1Y2lkZUljb24oJ2NvcHknLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IGRlZmF1bHQgQ29weTtcbiJdLCJuYW1lcyI6WyJfX2ljb25Ob2RlIiwid2lkdGgiLCJoZWlnaHQiLCJ4IiwieSIsInJ4IiwicnkiLCJrZXkiLCJkIiwiQ29weSIsImNyZWF0ZUx1Y2lkZUljb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/copy.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/eye.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/eye.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Eye; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst __iconNode = [\n    [\n        \"path\",\n        {\n            d: \"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0\",\n            key: \"1nclc0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ]\n];\nconst Eye = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"eye\", __iconNode);\n //# sourceMappingURL=eye.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvZXllLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUdPLE1BQU1BLGFBQXVCO0lBQ2xDO1FBQ0U7UUFDQTtZQUNFQyxHQUFHO1lBQ0hDLEtBQUs7UUFBQTtLQUVUO0lBQ0E7UUFBQztRQUFVO1lBQUVDLElBQUk7WUFBTUMsSUFBSTtZQUFNQyxHQUFHO1lBQUtILEtBQUs7UUFBVTtLQUFBO0NBQzFEO0FBYU0sTUFBQUksTUFBTUMsZ0VBQWdCQSxDQUFDLE9BQU9QIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaWNvbnMvZXllLnRzPzhjYjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5pbXBvcnQgeyBJY29uTm9kZSB9IGZyb20gJy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IF9faWNvbk5vZGU6IEljb25Ob2RlID0gW1xuICBbXG4gICAgJ3BhdGgnLFxuICAgIHtcbiAgICAgIGQ6ICdNMi4wNjIgMTIuMzQ4YTEgMSAwIDAgMSAwLS42OTYgMTAuNzUgMTAuNzUgMCAwIDEgMTkuODc2IDAgMSAxIDAgMCAxIDAgLjY5NiAxMC43NSAxMC43NSAwIDAgMS0xOS44NzYgMCcsXG4gICAgICBrZXk6ICcxbmNsYzAnLFxuICAgIH0sXG4gIF0sXG4gIFsnY2lyY2xlJywgeyBjeDogJzEyJywgY3k6ICcxMicsIHI6ICczJywga2V5OiAnMXY3enJkJyB9XSxcbl07XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBFeWVcbiAqIEBkZXNjcmlwdGlvbiBMdWNpZGUgU1ZHIGljb24gY29tcG9uZW50LCByZW5kZXJzIFNWRyBFbGVtZW50IHdpdGggY2hpbGRyZW4uXG4gKlxuICogQHByZXZpZXcgIVtpbWddKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklnb2dJSGRwWkhSb1BTSXlOQ0lLSUNCb1pXbG5hSFE5SWpJMElnb2dJSFpwWlhkQ2IzZzlJakFnTUNBeU5DQXlOQ0lLSUNCbWFXeHNQU0p1YjI1bElnb2dJSE4wY205clpUMGlJekF3TUNJZ2MzUjViR1U5SW1KaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdJR0p2Y21SbGNpMXlZV1JwZFhNNklESndlQ0lLSUNCemRISnZhMlV0ZDJsa2RHZzlJaklpQ2lBZ2MzUnliMnRsTFd4cGJtVmpZWEE5SW5KdmRXNWtJZ29nSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlDajRLSUNBOGNHRjBhQ0JrUFNKTk1pNHdOaklnTVRJdU16UTRZVEVnTVNBd0lEQWdNU0F3TFM0Mk9UWWdNVEF1TnpVZ01UQXVOelVnTUNBd0lERWdNVGt1T0RjMklEQWdNU0F4SURBZ01DQXhJREFnTGpZNU5pQXhNQzQzTlNBeE1DNDNOU0F3SURBZ01TMHhPUzQ0TnpZZ01DSWdMejRLSUNBOFkybHlZMnhsSUdONFBTSXhNaUlnWTNrOUlqRXlJaUJ5UFNJeklpQXZQZ284TDNOMlp6NEspIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL2V5ZVxuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IEV5ZSA9IGNyZWF0ZUx1Y2lkZUljb24oJ2V5ZScsIF9faWNvbk5vZGUpO1xuXG5leHBvcnQgZGVmYXVsdCBFeWU7XG4iXSwibmFtZXMiOlsiX19pY29uTm9kZSIsImQiLCJrZXkiLCJjeCIsImN5IiwiciIsIkV5ZSIsImNyZWF0ZUx1Y2lkZUljb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/eye.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/shared/src/utils.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasA11yProp: function() { return /* binding */ hasA11yProp; },\n/* harmony export */   mergeClasses: function() { return /* binding */ mergeClasses; },\n/* harmony export */   toCamelCase: function() { return /* binding */ toCamelCase; },\n/* harmony export */   toKebabCase: function() { return /* binding */ toKebabCase; },\n/* harmony export */   toPascalCase: function() { return /* binding */ toPascalCase; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string)=>string.replace(/^([A-Z])|[\\s-_]+(\\w)/g, (match, p1, p2)=>p2 ? p2.toUpperCase() : p1.toLowerCase());\nconst toPascalCase = (string)=>{\n    const camelCase = toCamelCase(string);\n    return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = function() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    return classes.filter((className, index, array)=>{\n        return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n    }).join(\" \").trim();\n};\nconst hasA11yProp = (props)=>{\n    for(const prop in props){\n        if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n            return true;\n        }\n    }\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vc2hhcmVkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0lBUWEsTUFBQUEsY0FBYyxDQUFDQyxTQUMxQkEsT0FBT0MsT0FBQSxDQUFRLHNCQUFzQixTQUFTQyxXQUFZO0FBUS9DLE1BQUFDLGNBQWMsQ0FBbUJILFNBQzVDQSxPQUFPQyxPQUFBLENBQVEseUJBQXlCLENBQUNHLE9BQU9DLElBQUlDLEtBQ2xEQSxLQUFLQSxHQUFHQyxXQUFBLEtBQWdCRixHQUFHSCxXQUFZO0FBUzlCLE1BQUFNLGVBQWUsQ0FBbUJSO0lBQ3ZDLE1BQUFTLFlBQVlOLFlBQVlIO0lBRXRCLE9BQUFTLFVBQVVDLE1BQUEsQ0FBTyxHQUFHSCxXQUFBLEtBQWdCRSxVQUFVRSxLQUFBLENBQU07QUFDOUQ7QUFRYSxNQUFBQyxlQUFlO3FDQUEyQ0M7UUFBQUE7O1dBQ3JFQSxRQUNHQyxNQUFBLENBQU8sQ0FBQ0MsV0FBV0MsT0FBT0M7UUFFdkIsT0FBQUMsUUFBUUgsY0FDUEEsVUFBcUJJLElBQUEsT0FBVyxNQUNqQ0YsTUFBTUcsT0FBUSxDQUFBTCxlQUFlQztJQUVqQyxHQUNDSyxJQUFBLENBQUssS0FDTEYsSUFBSzs7QUFRRyxNQUFBRyxjQUFjLENBQUNDO0lBQzFCLFVBQVdDLFFBQVFELE1BQU87UUFDeEIsSUFBSUMsS0FBS0MsVUFBVyxhQUFZRCxTQUFTLFVBQVVBLFNBQVMsU0FBUztZQUM1RDtRQUFBO0lBQ1Q7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc2hhcmVkL3NyYy91dGlscy50cz82N2U4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhbWVsVG9QYXNjYWwgfSBmcm9tICcuL3V0aWxpdHktdHlwZXMnO1xuXG4vKipcbiAqIENvbnZlcnRzIHN0cmluZyB0byBrZWJhYiBjYXNlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ30gQSBrZWJhYml6ZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBjb25zdCB0b0tlYmFiQ2FzZSA9IChzdHJpbmc6IHN0cmluZykgPT5cbiAgc3RyaW5nLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XG5cbi8qKlxuICogQ29udmVydHMgc3RyaW5nIHRvIGNhbWVsIGNhc2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIGNhbWVsaXplZCBzdHJpbmdcbiAqL1xuZXhwb3J0IGNvbnN0IHRvQ2FtZWxDYXNlID0gPFQgZXh0ZW5kcyBzdHJpbmc+KHN0cmluZzogVCkgPT5cbiAgc3RyaW5nLnJlcGxhY2UoL14oW0EtWl0pfFtcXHMtX10rKFxcdykvZywgKG1hdGNoLCBwMSwgcDIpID0+XG4gICAgcDIgPyBwMi50b1VwcGVyQ2FzZSgpIDogcDEudG9Mb3dlckNhc2UoKSxcbiAgKTtcblxuLyoqXG4gKiBDb252ZXJ0cyBzdHJpbmcgdG8gcGFzY2FsIGNhc2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIHBhc2NhbGl6ZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBjb25zdCB0b1Bhc2NhbENhc2UgPSA8VCBleHRlbmRzIHN0cmluZz4oc3RyaW5nOiBUKTogQ2FtZWxUb1Bhc2NhbDxUPiA9PiB7XG4gIGNvbnN0IGNhbWVsQ2FzZSA9IHRvQ2FtZWxDYXNlKHN0cmluZyk7XG5cbiAgcmV0dXJuIChjYW1lbENhc2UuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBjYW1lbENhc2Uuc2xpY2UoMSkpIGFzIENhbWVsVG9QYXNjYWw8VD47XG59O1xuXG4vKipcbiAqIE1lcmdlcyBjbGFzc2VzIGludG8gYSBzaW5nbGUgc3RyaW5nXG4gKlxuICogQHBhcmFtIHthcnJheX0gY2xhc3Nlc1xuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgY2xhc3Nlc1xuICovXG5leHBvcnQgY29uc3QgbWVyZ2VDbGFzc2VzID0gPENsYXNzVHlwZSA9IHN0cmluZyB8IHVuZGVmaW5lZCB8IG51bGw+KC4uLmNsYXNzZXM6IENsYXNzVHlwZVtdKSA9PlxuICBjbGFzc2VzXG4gICAgLmZpbHRlcigoY2xhc3NOYW1lLCBpbmRleCwgYXJyYXkpID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIEJvb2xlYW4oY2xhc3NOYW1lKSAmJlxuICAgICAgICAoY2xhc3NOYW1lIGFzIHN0cmluZykudHJpbSgpICE9PSAnJyAmJlxuICAgICAgICBhcnJheS5pbmRleE9mKGNsYXNzTmFtZSkgPT09IGluZGV4XG4gICAgICApO1xuICAgIH0pXG4gICAgLmpvaW4oJyAnKVxuICAgIC50cmltKCk7XG5cbi8qKlxuICogQ2hlY2sgaWYgYSBjb21wb25lbnQgaGFzIGFuIGFjY2Vzc2liaWxpdHkgcHJvcFxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wc1xuICogQHJldHVybnMge2Jvb2xlYW59IFdoZXRoZXIgdGhlIGNvbXBvbmVudCBoYXMgYW4gYWNjZXNzaWJpbGl0eSBwcm9wXG4gKi9cbmV4cG9ydCBjb25zdCBoYXNBMTF5UHJvcCA9IChwcm9wczogUmVjb3JkPHN0cmluZywgYW55PikgPT4ge1xuICBmb3IgKGNvbnN0IHByb3AgaW4gcHJvcHMpIHtcbiAgICBpZiAocHJvcC5zdGFydHNXaXRoKCdhcmlhLScpIHx8IHByb3AgPT09ICdyb2xlJyB8fCBwcm9wID09PSAndGl0bGUnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbn07XG4iXSwibmFtZXMiOlsidG9LZWJhYkNhc2UiLCJzdHJpbmciLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJ0b0NhbWVsQ2FzZSIsIm1hdGNoIiwicDEiLCJwMiIsInRvVXBwZXJDYXNlIiwidG9QYXNjYWxDYXNlIiwiY2FtZWxDYXNlIiwiY2hhckF0Iiwic2xpY2UiLCJtZXJnZUNsYXNzZXMiLCJjbGFzc2VzIiwiZmlsdGVyIiwiY2xhc3NOYW1lIiwiaW5kZXgiLCJhcnJheSIsIkJvb2xlYW4iLCJ0cmltIiwiaW5kZXhPZiIsImpvaW4iLCJoYXNBMTF5UHJvcCIsInByb3BzIiwicHJvcCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvYnVmZmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sa0JBQWtCLGFBQWEsd0JBQXdCLDBCQUEwQiw4QkFBOEIsU0FBUyxTQUFTLHVEQUF1RCx5RUFBeUUsdUJBQXVCLElBQUksS0FBSyxVQUFVLHFCQUFxQix3QkFBd0Isd0JBQXdCLG9CQUFvQixlQUFlLFVBQVUsa0VBQWtFLHFCQUFxQixjQUFjLG9CQUFvQixZQUFZLHVCQUF1QixpQkFBaUIsV0FBVyxXQUFXLGtCQUFrQiw0QkFBNEIsa0JBQWtCLHdCQUF3QixNQUFNLGlCQUFpQixXQUFXLFdBQVcsZ0NBQWdDLFFBQVEsZ0JBQWdCLE1BQU0sUUFBUSxJQUFJLE1BQU0sK0ZBQStGLGlCQUFpQixnQkFBZ0IsYUFBYSxVQUFVLGdEQUFnRCxhQUFhLFVBQVUseUVBQXlFLGdCQUFnQixhQUFhLFNBQVMsNEJBQTRCLGtEQUFrRCw0QkFBNEIsTUFBTSxTQUFTLFlBQVksSUFBSSxNQUFNLHFEQUFxRCwyQkFBMkIsa0JBQWtCLDBCQUEwQixNQUFNLGVBQWUsVUFBVSxTQUFTLFlBQVksa0JBQWtCLElBQUksTUFBTSxxQ0FBcUMsVUFBVSxTQUFTLGdDQUFnQyxlQUFlLHFCQUFxQiwyQ0FBMkMsbUJBQW1CLG9CQUFvQjtBQUM5ckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixhQUFhLCtHQUErRyxnQkFBZ0Isd0JBQXdCLHVCQUF1QixpQkFBaUIsZUFBZSwrQ0FBK0MsaUdBQWlHLGtLQUFrSyw2QkFBNkIsSUFBSSx3QkFBd0IsT0FBTyxlQUFlLFlBQVksOENBQThDLDJCQUEyQixvQkFBb0IsU0FBUyxjQUFjLGlEQUFpRCwrQkFBK0IsMkNBQTJDLG9CQUFvQixFQUFFLGlEQUFpRCwrQkFBK0IsMkNBQTJDLHdCQUF3QixFQUFFLHlCQUF5QixRQUFRLHVFQUF1RSx3QkFBd0IsMENBQTBDLFNBQVMsdUJBQXVCLHdCQUF3Qix3QkFBd0IsMEZBQTBGLHNCQUFzQixtQkFBbUIscUJBQXFCLHFCQUFxQix3QkFBd0IsdUJBQXVCLDBCQUEwQix3QkFBd0IsWUFBWSxtSkFBbUosbUVBQW1FLDhCQUE4Qix5SEFBeUgsOEJBQThCLHdCQUF3Qiw2RkFBNkYsNkJBQTZCLG1CQUFtQiwwQkFBMEIsb0JBQW9CLGNBQWMscUdBQXFHLHdEQUF3RCxtSkFBbUosNEJBQTRCLG9CQUFvQiw2REFBNkQseUNBQXlDLHVCQUF1Qix3QkFBd0IsOERBQThELGFBQWEsd0VBQXdFLHNCQUFzQixjQUFjLFNBQVMsdUJBQXVCLGtCQUFrQiw2RUFBNkUsdUJBQXVCLDZCQUE2QixxQkFBcUIsd0JBQXdCLGNBQWMsd0NBQXdDLCtCQUErQix1QkFBdUIsbUNBQW1DLHVCQUF1Qix5QkFBeUIsZ0NBQWdDLFNBQVMsMEJBQTBCLDRDQUE0Qyx3QkFBd0Isc0JBQXNCLG1CQUFtQixVQUFVLGVBQWUsU0FBUywwQkFBMEIsdUNBQXVDLHNCQUFzQixZQUFZLElBQUksTUFBTSxjQUFjLFNBQVMsZ0NBQWdDLHdCQUF3Qiw2REFBNkQsMEJBQTBCLDZEQUE2RCxNQUFNLGlDQUFpQyxvQkFBb0IsdUJBQXVCLHNCQUFzQixLQUFLLHdCQUF3QiwwQ0FBMEMsU0FBUyx1QkFBdUIsdUJBQXVCLDBCQUEwQixzQkFBc0IsaUJBQWlCLFNBQVMsZ0JBQWdCLFNBQVMseUJBQXlCLHNEQUFzRCx1QkFBdUIsd0JBQXdCLDZDQUE2Qyw4QkFBOEIsb0JBQW9CLFNBQVMsMkdBQTJHLFdBQVcsdUJBQXVCLFVBQVUsSUFBSSx3QkFBd0IscUNBQXFDLDBEQUEwRCxxQ0FBcUMsbUVBQW1FLG1FQUFtRSw2Q0FBNkMsNkZBQTZGLGtCQUFrQixlQUFlLGVBQWUsNEJBQTRCLElBQUksS0FBSyxnQkFBZ0IsT0FBTyxPQUFPLE9BQU8sZ0JBQWdCLGdCQUFnQixVQUFVLHlDQUF5QyxnQ0FBZ0Msb0pBQW9KLHVCQUF1QixtQ0FBbUMsc0JBQXNCLG1FQUFtRSxpQkFBaUIsdUJBQXVCLE1BQU0sa0JBQWtCLElBQUksUUFBUSxXQUFXLEtBQUssZ0JBQWdCLDRCQUE0QixRQUFRLFFBQVEsV0FBVyxLQUFLLFdBQVcsNkJBQTZCLGlCQUFpQix3QkFBd0IsbUVBQW1FLFlBQVksWUFBWSxVQUFVLHlCQUF5Qix1QkFBdUIsZ0JBQWdCLHFEQUFxRCxvQkFBb0Isd0JBQXdCLDRIQUE0SCxlQUFlLDhDQUE4QyxzQkFBc0IsWUFBWSxNQUFNLEVBQUUsVUFBVSwrQ0FBK0Msb0RBQW9ELCtEQUErRCx1QkFBdUIsNENBQTRDLGNBQWMsa0NBQWtDLHVCQUF1QixTQUFTLDZCQUE2Qiw2QkFBNkIsWUFBWSx1QkFBdUIsSUFBSSxrQkFBa0IsU0FBUyxpQ0FBaUMsY0FBYyxTQUFTLFNBQVMsT0FBTyxPQUFPLFNBQVMsU0FBUyxlQUFlLFlBQVksVUFBVSxvQ0FBb0Msa0RBQWtELHdDQUF3Qyx1REFBdUQsMENBQTBDLGtGQUFrRix5REFBeUQsdUJBQXVCLFNBQVMsZ0NBQWdDLHFCQUFxQixXQUFXLFVBQVUsT0FBTywwQ0FBMEMsa0JBQWtCLFlBQVksa0VBQWtFLFlBQVksSUFBSSxNQUFNLGlCQUFpQixhQUFhLDBDQUEwQyxrQkFBa0IsWUFBWSxrRUFBa0UsWUFBWSxJQUFJLE1BQU0saUJBQWlCLG1CQUFtQixhQUFhLDBDQUEwQyxrQkFBa0IsWUFBWSxrRUFBa0UsWUFBWSxJQUFJLE1BQU0saUJBQWlCLG1CQUFtQixtQkFBbUIsbUJBQW1CLGFBQWEsOENBQThDLGtCQUFrQixrQkFBa0IsbURBQW1ELDJDQUEyQywwREFBMEQsMkNBQTJDLHdFQUF3RSx3QkFBd0IsbUNBQW1DLDRDQUE0QyxTQUFTLDBCQUEwQix1Q0FBdUMsRUFBRSxrQkFBa0IsNEJBQTRCLHdCQUF3QixNQUFNLDZDQUE2QyxxREFBcUQsNkJBQTZCLHVDQUF1Qyx3QkFBd0Isa0hBQWtILGtCQUFrQixJQUFJLGtCQUFrQixlQUFlLGtCQUFrQixJQUFJLGtCQUFrQixjQUFjLHdDQUF3QywyQ0FBMkMsZUFBZSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsT0FBTyxPQUFPLE9BQU8sT0FBTyxxQkFBcUIsVUFBVSxVQUFVLG9CQUFvQixzQkFBc0IsbUJBQW1CLFlBQVksSUFBSSxLQUFLLGdCQUFnQixPQUFPLE9BQU8sT0FBTyxnQkFBZ0IsZ0JBQWdCLFVBQVUseUNBQXlDLHlCQUF5Qix3QkFBd0IsSUFBSSxJQUFJLHNCQUFzQixhQUFhLHVCQUF1QixjQUFjLEtBQUssbUJBQW1CLGlCQUFpQixvQkFBb0IsZ0JBQWdCLGNBQWMsa0JBQWtCLGFBQWEsU0FBUyxjQUFjLHdCQUF3QixtQkFBbUIsdUJBQXVCLGlCQUFpQixTQUFTLCtCQUErQiw2QkFBNkIsUUFBUSxxREFBcUQsTUFBTSxnREFBZ0QsS0FBSyxxREFBcUQsaUNBQWlDLDREQUE0RCxpQ0FBaUMsUUFBUSxlQUFlLGVBQWUsa0JBQWtCLDBCQUEwQiwyREFBMkQsMkJBQTJCLFNBQVMsSUFBSSxLQUFLLEtBQUssTUFBTSxtQkFBbUIsVUFBVSxZQUFZLEtBQUssNEJBQTRCLE1BQU0sTUFBTSxTQUFTLFFBQVEsSUFBSSxLQUFLLHFDQUFxQyxjQUFjLHdCQUF3QixLQUFLLGlCQUFpQixPQUFPLEtBQUssZUFBZSxRQUFRLEtBQUssS0FBSyxXQUFXLFlBQVksSUFBSSxLQUFLLDRCQUE0QixRQUFRLE9BQU8sZUFBZSxTQUFTLG1EQUFtRCxpQ0FBaUMsaURBQWlELDhDQUE4Qyx5REFBeUQsK0NBQStDLDJCQUEyQixlQUFlLGlCQUFpQixPQUFPLElBQUksS0FBSyxZQUFZLFFBQVEsS0FBSyxlQUFlLFVBQVUsTUFBTSxZQUFZLElBQUksS0FBSyxtQ0FBbUMsMkJBQTJCLFNBQVMsU0FBUyw0QkFBNEIsbURBQW1ELDZCQUE2Qix5Q0FBeUMsOEJBQThCLDJCQUEyQiw4QkFBOEIsMENBQTBDLDRCQUE0QixzREFBc0QsK0NBQStDLGtCQUFrQixTQUFTLGNBQWMsSUFBSSw0Q0FBNEMsSUFBSSxjQUFjLElBQUkscUJBQXFCLFFBQVEsZ0JBQWdCLFFBQVEsMEJBQTBCLEtBQUssSUFBSSxhQUFhLEtBQUssMkZBQTJGLG9CQUFvQiwwQkFBMEIsMENBQTBDLCtEQUErRCxlQUFlLFlBQVksTUFBTSxFQUFFLFVBQVUsc0NBQXNDLG9EQUFvRCwwQ0FBMEMseURBQXlELDRDQUE0QyxpRkFBaUYseURBQXlELHVCQUF1QixVQUFVLDBDQUEwQyxPQUFPLG1FQUFtRSw0QkFBNEIsd0JBQXdCLDBCQUEwQixLQUFLLHNDQUFzQywwQkFBMEIsdUJBQXVCLFNBQVMsUUFBUSxXQUFXLFdBQVcsV0FBVyxnQ0FBZ0MsV0FBVyxZQUFZLFVBQVUsaUJBQWlCLElBQUksTUFBTSxnQkFBZ0Isa0JBQWtCLGlCQUFpQixVQUFVLEtBQUssTUFBTSxnQkFBZ0IsU0FBUyxpQ0FBaUMsNEJBQTRCLCtCQUErQixLQUFLLE1BQU0sZ0JBQWdCLFNBQVMsU0FBUyxnREFBZ0QsdUNBQXVDLHVCQUF1QixPQUFPLGFBQWEsUUFBUSxJQUFJLGlCQUFpQixTQUFTLDBCQUEwQixlQUFlLFVBQVUsS0FBSyxnQ0FBZ0MsV0FBVyxrQ0FBa0MsZUFBZSxTQUFTLDJDQUEyQyxTQUFTLFFBQVEsV0FBVyxxREFBcUQsU0FBUywyQkFBMkIsU0FBUyx1QkFBdUIsWUFBWSxJQUFJLEtBQUssaUNBQWlDLFNBQVMsNEJBQTRCLFNBQVMsdUJBQXVCLFlBQVksSUFBSSxLQUFLLDZCQUE2QixTQUFTLHlCQUF5QixlQUFlLGVBQWUsb0JBQW9CLFNBQVMsWUFBWSxJQUFJLEtBQUssV0FBVyxTQUFTLDZCQUE2QixtQkFBbUIsU0FBUyxZQUFZLFdBQVcsTUFBTSx3Q0FBd0MsU0FBUywyQ0FBMkMsa0JBQWtCLE1BQU0sc0JBQXNCLFFBQVEsS0FBSyxXQUFXLGFBQWEsSUFBSSxRQUFRLEtBQUssV0FBVyxhQUFhLElBQUksV0FBVyx5QkFBeUIsMENBQTBDLFVBQVUsNEJBQTRCLDJEQUEyRCx1RUFBdUUsdURBQXVELFFBQVEsUUFBUSxtQ0FBbUMsY0FBYyxRQUFRLFFBQVEsdUJBQXVCLGVBQWUsVUFBVSx1REFBdUQsUUFBUSxRQUFRLE9BQU8sNkJBQTZCLGtCQUFrQixRQUFRLHFCQUFxQixpQkFBaUIsVUFBVSxtREFBbUQsUUFBUSxtQ0FBbUMsZ0JBQWdCLHlEQUF5RCxRQUFRLG1DQUFtQyw2QkFBNkIseURBQXlELFFBQVEsbUNBQW1DLDZCQUE2Qix5REFBeUQsUUFBUSxtQ0FBbUMsK0RBQStELHlEQUF5RCxRQUFRLG1DQUFtQyxnRUFBZ0UscURBQXFELFFBQVEsUUFBUSxtQ0FBbUMsY0FBYyxRQUFRLFFBQVEsdUJBQXVCLGVBQWUsT0FBTywyQkFBMkIsVUFBVSxxREFBcUQsUUFBUSxRQUFRLG1DQUFtQyxRQUFRLFFBQVEsa0JBQWtCLHFCQUFxQixpQkFBaUIsT0FBTywyQkFBMkIsVUFBVSxpREFBaUQsUUFBUSxtQ0FBbUMsaUNBQWlDLDBCQUEwQix1REFBdUQsUUFBUSxtQ0FBbUMsMkJBQTJCLCtCQUErQix1REFBdUQsUUFBUSxtQ0FBbUMsMkJBQTJCLCtCQUErQix1REFBdUQsUUFBUSxtQ0FBbUMseURBQXlELHVEQUF1RCxRQUFRLG1DQUFtQyx5REFBeUQsdURBQXVELFFBQVEsbUNBQW1DLGlDQUFpQyx1REFBdUQsUUFBUSxtQ0FBbUMsa0NBQWtDLHlEQUF5RCxRQUFRLG1DQUFtQyxpQ0FBaUMseURBQXlELFFBQVEsbUNBQW1DLGtDQUFrQywrQkFBK0IsMEZBQTBGLHNFQUFzRSwyREFBMkQsMkRBQTJELEtBQUssUUFBUSxRQUFRLE9BQU8sd0JBQXdCLHlCQUF5QixRQUFRLFFBQVEsY0FBYyx1QkFBdUIsa0JBQWtCLFlBQVksMkRBQTJELEtBQUssUUFBUSxRQUFRLE9BQU8sd0JBQXdCLHlCQUF5QixVQUFVLFFBQVEsZ0JBQWdCLHdCQUF3QixrQkFBa0IsWUFBWSx1REFBdUQsS0FBSyxRQUFRLGlDQUFpQyxjQUFjLFlBQVksNkRBQTZELEtBQUssUUFBUSxtQ0FBbUMsY0FBYyxnQkFBZ0IsWUFBWSw2REFBNkQsS0FBSyxRQUFRLG1DQUFtQyxjQUFjLGdCQUFnQixZQUFZLDZEQUE2RCxLQUFLLFFBQVEsd0NBQXdDLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGNBQWMsWUFBWSw2REFBNkQsS0FBSyxRQUFRLHdDQUF3QyxlQUFlLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLFlBQVkseURBQXlELEtBQUssUUFBUSxPQUFPLHdCQUF3Qiw0QkFBNEIsUUFBUSxRQUFRLFFBQVEsY0FBYyx1QkFBdUIsZ0NBQWdDLElBQUkseUJBQXlCLFlBQVkseURBQXlELEtBQUssUUFBUSxPQUFPLHdCQUF3Qiw0QkFBNEIsVUFBVSxRQUFRLFFBQVEsZ0JBQWdCLHdCQUF3QixnQ0FBZ0MsSUFBSSx5QkFBeUIsWUFBWSxxREFBcUQsS0FBSyxRQUFRLG9DQUFvQyxpQkFBaUIsY0FBYyxZQUFZLDJEQUEyRCxLQUFLLFFBQVEsd0NBQXdDLGNBQWMsZ0JBQWdCLFlBQVksMkRBQTJELEtBQUssUUFBUSx3Q0FBd0MsY0FBYyxnQkFBZ0IsWUFBWSwyREFBMkQsS0FBSyxRQUFRLGtEQUFrRCxjQUFjLGdCQUFnQixpQkFBaUIsaUJBQWlCLFlBQVksMkRBQTJELEtBQUssUUFBUSxrREFBa0Qsd0JBQXdCLGVBQWUsaUJBQWlCLGdCQUFnQixnQkFBZ0IsWUFBWSxtQ0FBbUMsMkRBQTJELGtEQUFrRCwrQkFBK0IsS0FBSyxRQUFRLE9BQU8saUVBQWlFLHNCQUFzQixXQUFXLDJEQUEyRCxvQ0FBb0MsMkRBQTJELHFDQUFxQyxnQ0FBZ0MsS0FBSyxRQUFRLE9BQU8sbUVBQW1FLHNCQUFzQixXQUFXLDZEQUE2RCxxQ0FBcUMsNkRBQTZELHNDQUFzQyw2Q0FBNkMsMEVBQTBFLFVBQVUsMkJBQTJCLDBCQUEwQixVQUFVLGdCQUFnQixrQkFBa0IsMENBQTBDLFFBQVEsa0RBQWtELGtFQUFrRSx1REFBdUQsK0JBQStCLG1CQUFtQixlQUFlLFVBQVUsa0VBQWtFLHVCQUF1Qiw0QkFBNEIsY0FBYyxLQUFLLEtBQUssa0JBQWtCLEtBQUssc0RBQXNELFVBQVUsNkNBQTZDLHdCQUF3Qix3QkFBd0IsSUFBSSxJQUFJLGNBQWMsNkJBQTZCLElBQUksY0FBYyx1Q0FBdUMsaURBQWlELCtDQUErQyw0Q0FBNEMsaUJBQWlCLHNCQUFzQixvQ0FBb0MsTUFBTSw2QkFBNkIsUUFBUSw4QkFBOEIsWUFBWSxzQ0FBc0MsMkNBQTJDLFNBQVMsWUFBWSxRQUFRLGtDQUFrQyxVQUFVLE1BQU0sd0JBQXdCLFFBQVEsSUFBSSxLQUFLLFdBQVcsS0FBSyw0Q0FBNEMsZUFBZSxVQUFVLHlFQUF5RSxRQUFRLE1BQU0sS0FBSyxrQkFBa0IsYUFBYSwwQkFBMEIsd0JBQXdCLGtCQUFrQix5QkFBeUIsdUJBQXVCLHNCQUFzQixRQUFRLFNBQVMsMEJBQTBCLGNBQWMsTUFBTSxlQUFlLFdBQVcsU0FBUyxZQUFZLElBQUksS0FBSyxrQkFBa0IscUJBQXFCLE9BQU8sWUFBWSxpQ0FBaUMsU0FBUyxpQkFBaUIsaUNBQWlDLFNBQVMsSUFBSSxTQUFTLFlBQVksaUNBQWlDLElBQUksU0FBUyw4QkFBOEIsV0FBVyxpQ0FBaUMsT0FBTyxVQUFVLGtCQUFrQixVQUFVLGdCQUFnQixrQkFBa0IsMEJBQTBCLGlCQUFpQixrQkFBa0IsdUNBQXVDLG1CQUFtQixrQkFBa0Isb0RBQW9ELEtBQUssdUNBQXVDLFNBQVMseUJBQXlCLFNBQVMsWUFBWSxXQUFXLEtBQUssNEJBQTRCLFNBQVMsNkJBQTZCLFVBQVUsU0FBUyxZQUFZLFdBQVcsS0FBSyxrQkFBa0Isa0JBQWtCLE9BQU8sUUFBUSxVQUFVLFVBQVUsU0FBUywwQkFBMEIscUNBQXFDLDZCQUE2QixZQUFZLElBQUksS0FBSyxvQ0FBb0MsWUFBWSxTQUFTLHlCQUF5QiwyR0FBMkcsd0JBQXdCLGFBQWEsaUJBQWlCLHlCQUF5QixxQkFBcUIsWUFBWSxLQUFLLEtBQUssV0FBVyxZQUFZLEtBQUssS0FBSyxrQkFBa0IsU0FBUyxHQUFHO0FBQ3p4dkI7QUFDQSwyQkFBMkIsUUFBUSxjQUFjLGVBQWUsV0FBVyxTQUFTLGNBQWMsYUFBYSxhQUFhLEtBQUssY0FBYyxPQUFPLEtBQUssS0FBSyxJQUFJLDJCQUEyQixjQUFjLE9BQU8sS0FBSyxLQUFLLElBQUksMkJBQTJCLFVBQVUsTUFBTSxlQUFlLCtCQUErQixLQUFLLGtCQUFrQixNQUFNLGtDQUFrQyw4QkFBOEIsVUFBVSxjQUFjLGVBQWUsV0FBVywrQ0FBK0MsY0FBYyxhQUFhLDRCQUE0QixjQUFjLDJCQUEyQixlQUFlLElBQUksS0FBSyxtQ0FBbUMsMkJBQTJCLElBQUksS0FBSyxXQUFXLE9BQU8sS0FBSyxxQkFBcUIsV0FBVyxJQUFJLEtBQUssV0FBVyxJQUFJLElBQUksZ0JBQWdCLHdCQUF3QixNQUFNLEtBQUssa0NBQWtDLEtBQUssS0FBSyxLQUFLLGdDQUFnQyxTQUFTLEtBQUssS0FBSyxJQUFJLGdDQUFnQyxtQkFBbUIsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssOEJBQThCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2J1ZmZlci9pbmRleC5qcz9hZWQyIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXs2NzU6ZnVuY3Rpb24oZSxyKXtcInVzZSBzdHJpY3RcIjtyLmJ5dGVMZW5ndGg9Ynl0ZUxlbmd0aDtyLnRvQnl0ZUFycmF5PXRvQnl0ZUFycmF5O3IuZnJvbUJ5dGVBcnJheT1mcm9tQnl0ZUFycmF5O3ZhciB0PVtdO3ZhciBmPVtdO3ZhciBuPXR5cGVvZiBVaW50OEFycmF5IT09XCJ1bmRlZmluZWRcIj9VaW50OEFycmF5OkFycmF5O3ZhciBpPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiO2Zvcih2YXIgbz0wLHU9aS5sZW5ndGg7bzx1Oysrbyl7dFtvXT1pW29dO2ZbaS5jaGFyQ29kZUF0KG8pXT1vfWZbXCItXCIuY2hhckNvZGVBdCgwKV09NjI7ZltcIl9cIi5jaGFyQ29kZUF0KDApXT02MztmdW5jdGlvbiBnZXRMZW5zKGUpe3ZhciByPWUubGVuZ3RoO2lmKHIlND4wKXt0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0XCIpfXZhciB0PWUuaW5kZXhPZihcIj1cIik7aWYodD09PS0xKXQ9cjt2YXIgZj10PT09cj8wOjQtdCU0O3JldHVyblt0LGZdfWZ1bmN0aW9uIGJ5dGVMZW5ndGgoZSl7dmFyIHI9Z2V0TGVucyhlKTt2YXIgdD1yWzBdO3ZhciBmPXJbMV07cmV0dXJuKHQrZikqMy80LWZ9ZnVuY3Rpb24gX2J5dGVMZW5ndGgoZSxyLHQpe3JldHVybihyK3QpKjMvNC10fWZ1bmN0aW9uIHRvQnl0ZUFycmF5KGUpe3ZhciByO3ZhciB0PWdldExlbnMoZSk7dmFyIGk9dFswXTt2YXIgbz10WzFdO3ZhciB1PW5ldyBuKF9ieXRlTGVuZ3RoKGUsaSxvKSk7dmFyIGE9MDt2YXIgcz1vPjA/aS00Omk7dmFyIGg7Zm9yKGg9MDtoPHM7aCs9NCl7cj1mW2UuY2hhckNvZGVBdChoKV08PDE4fGZbZS5jaGFyQ29kZUF0KGgrMSldPDwxMnxmW2UuY2hhckNvZGVBdChoKzIpXTw8NnxmW2UuY2hhckNvZGVBdChoKzMpXTt1W2ErK109cj4+MTYmMjU1O3VbYSsrXT1yPj44JjI1NTt1W2ErK109ciYyNTV9aWYobz09PTIpe3I9ZltlLmNoYXJDb2RlQXQoaCldPDwyfGZbZS5jaGFyQ29kZUF0KGgrMSldPj40O3VbYSsrXT1yJjI1NX1pZihvPT09MSl7cj1mW2UuY2hhckNvZGVBdChoKV08PDEwfGZbZS5jaGFyQ29kZUF0KGgrMSldPDw0fGZbZS5jaGFyQ29kZUF0KGgrMildPj4yO3VbYSsrXT1yPj44JjI1NTt1W2ErK109ciYyNTV9cmV0dXJuIHV9ZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0KGUpe3JldHVybiB0W2U+PjE4JjYzXSt0W2U+PjEyJjYzXSt0W2U+PjYmNjNdK3RbZSY2M119ZnVuY3Rpb24gZW5jb2RlQ2h1bmsoZSxyLHQpe3ZhciBmO3ZhciBuPVtdO2Zvcih2YXIgaT1yO2k8dDtpKz0zKXtmPShlW2ldPDwxNiYxNjcxMTY4MCkrKGVbaSsxXTw8OCY2NTI4MCkrKGVbaSsyXSYyNTUpO24ucHVzaCh0cmlwbGV0VG9CYXNlNjQoZikpfXJldHVybiBuLmpvaW4oXCJcIil9ZnVuY3Rpb24gZnJvbUJ5dGVBcnJheShlKXt2YXIgcjt2YXIgZj1lLmxlbmd0aDt2YXIgbj1mJTM7dmFyIGk9W107dmFyIG89MTYzODM7Zm9yKHZhciB1PTAsYT1mLW47dTxhO3UrPW8pe2kucHVzaChlbmNvZGVDaHVuayhlLHUsdStvPmE/YTp1K28pKX1pZihuPT09MSl7cj1lW2YtMV07aS5wdXNoKHRbcj4+Ml0rdFtyPDw0JjYzXStcIj09XCIpfWVsc2UgaWYobj09PTIpe3I9KGVbZi0yXTw8OCkrZVtmLTFdO2kucHVzaCh0W3I+PjEwXSt0W3I+PjQmNjNdK3Rbcjw8MiY2M10rXCI9XCIpfXJldHVybiBpLmpvaW4oXCJcIil9fSw3MjpmdW5jdGlvbihlLHIsdCl7XCJ1c2Ugc3RyaWN0XCI7XG4vKiFcbiAqIFRoZSBidWZmZXIgbW9kdWxlIGZyb20gbm9kZS5qcywgZm9yIHRoZSBicm93c2VyLlxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmc+XG4gKiBAbGljZW5zZSAgTUlUXG4gKi92YXIgZj10KDY3NSk7dmFyIG49dCg3ODMpO3ZhciBpPXR5cGVvZiBTeW1ib2w9PT1cImZ1bmN0aW9uXCImJnR5cGVvZiBTeW1ib2wuZm9yPT09XCJmdW5jdGlvblwiP1N5bWJvbC5mb3IoXCJub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbVwiKTpudWxsO3IuQnVmZmVyPUJ1ZmZlcjtyLlNsb3dCdWZmZXI9U2xvd0J1ZmZlcjtyLklOU1BFQ1RfTUFYX0JZVEVTPTUwO3ZhciBvPTIxNDc0ODM2NDc7ci5rTWF4TGVuZ3RoPW87QnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQ9dHlwZWRBcnJheVN1cHBvcnQoKTtpZighQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQmJnR5cGVvZiBjb25zb2xlIT09XCJ1bmRlZmluZWRcIiYmdHlwZW9mIGNvbnNvbGUuZXJyb3I9PT1cImZ1bmN0aW9uXCIpe2NvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgbGFja3MgdHlwZWQgYXJyYXkgKFVpbnQ4QXJyYXkpIHN1cHBvcnQgd2hpY2ggaXMgcmVxdWlyZWQgYnkgXCIrXCJgYnVmZmVyYCB2NS54LiBVc2UgYGJ1ZmZlcmAgdjQueCBpZiB5b3UgcmVxdWlyZSBvbGQgYnJvd3NlciBzdXBwb3J0LlwiKX1mdW5jdGlvbiB0eXBlZEFycmF5U3VwcG9ydCgpe3RyeXt2YXIgZT1uZXcgVWludDhBcnJheSgxKTt2YXIgcj17Zm9vOmZ1bmN0aW9uKCl7cmV0dXJuIDQyfX07T2JqZWN0LnNldFByb3RvdHlwZU9mKHIsVWludDhBcnJheS5wcm90b3R5cGUpO09iamVjdC5zZXRQcm90b3R5cGVPZihlLHIpO3JldHVybiBlLmZvbygpPT09NDJ9Y2F0Y2goZSl7cmV0dXJuIGZhbHNlfX1PYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLnByb3RvdHlwZSxcInBhcmVudFwiLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7aWYoIUJ1ZmZlci5pc0J1ZmZlcih0aGlzKSlyZXR1cm4gdW5kZWZpbmVkO3JldHVybiB0aGlzLmJ1ZmZlcn19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLnByb3RvdHlwZSxcIm9mZnNldFwiLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7aWYoIUJ1ZmZlci5pc0J1ZmZlcih0aGlzKSlyZXR1cm4gdW5kZWZpbmVkO3JldHVybiB0aGlzLmJ5dGVPZmZzZXR9fSk7ZnVuY3Rpb24gY3JlYXRlQnVmZmVyKGUpe2lmKGU+byl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBcIicrZSsnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwic2l6ZVwiJyl9dmFyIHI9bmV3IFVpbnQ4QXJyYXkoZSk7T2JqZWN0LnNldFByb3RvdHlwZU9mKHIsQnVmZmVyLnByb3RvdHlwZSk7cmV0dXJuIHJ9ZnVuY3Rpb24gQnVmZmVyKGUscix0KXtpZih0eXBlb2YgZT09PVwibnVtYmVyXCIpe2lmKHR5cGVvZiByPT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIHN0cmluZy4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKX1yZXR1cm4gYWxsb2NVbnNhZmUoZSl9cmV0dXJuIGZyb20oZSxyLHQpfUJ1ZmZlci5wb29sU2l6ZT04MTkyO2Z1bmN0aW9uIGZyb20oZSxyLHQpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7cmV0dXJuIGZyb21TdHJpbmcoZSxyKX1pZihBcnJheUJ1ZmZlci5pc1ZpZXcoZSkpe3JldHVybiBmcm9tQXJyYXlMaWtlKGUpfWlmKGU9PW51bGwpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBcIitcIm9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiBlKX1pZihpc0luc3RhbmNlKGUsQXJyYXlCdWZmZXIpfHxlJiZpc0luc3RhbmNlKGUuYnVmZmVyLEFycmF5QnVmZmVyKSl7cmV0dXJuIGZyb21BcnJheUJ1ZmZlcihlLHIsdCl9aWYodHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyIT09XCJ1bmRlZmluZWRcIiYmKGlzSW5zdGFuY2UoZSxTaGFyZWRBcnJheUJ1ZmZlcil8fGUmJmlzSW5zdGFuY2UoZS5idWZmZXIsU2hhcmVkQXJyYXlCdWZmZXIpKSl7cmV0dXJuIGZyb21BcnJheUJ1ZmZlcihlLHIsdCl9aWYodHlwZW9mIGU9PT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJ2YWx1ZVwiIGFyZ3VtZW50IG11c3Qgbm90IGJlIG9mIHR5cGUgbnVtYmVyLiBSZWNlaXZlZCB0eXBlIG51bWJlcicpfXZhciBmPWUudmFsdWVPZiYmZS52YWx1ZU9mKCk7aWYoZiE9bnVsbCYmZiE9PWUpe3JldHVybiBCdWZmZXIuZnJvbShmLHIsdCl9dmFyIG49ZnJvbU9iamVjdChlKTtpZihuKXJldHVybiBuO2lmKHR5cGVvZiBTeW1ib2whPT1cInVuZGVmaW5lZFwiJiZTeW1ib2wudG9QcmltaXRpdmUhPW51bGwmJnR5cGVvZiBlW1N5bWJvbC50b1ByaW1pdGl2ZV09PT1cImZ1bmN0aW9uXCIpe3JldHVybiBCdWZmZXIuZnJvbShlW1N5bWJvbC50b1ByaW1pdGl2ZV0oXCJzdHJpbmdcIikscix0KX10aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgXCIrXCJvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSl9QnVmZmVyLmZyb209ZnVuY3Rpb24oZSxyLHQpe3JldHVybiBmcm9tKGUscix0KX07T2JqZWN0LnNldFByb3RvdHlwZU9mKEJ1ZmZlci5wcm90b3R5cGUsVWludDhBcnJheS5wcm90b3R5cGUpO09iamVjdC5zZXRQcm90b3R5cGVPZihCdWZmZXIsVWludDhBcnJheSk7ZnVuY3Rpb24gYXNzZXJ0U2l6ZShlKXtpZih0eXBlb2YgZSE9PVwibnVtYmVyXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1wic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXInKX1lbHNlIGlmKGU8MCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBcIicrZSsnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwic2l6ZVwiJyl9fWZ1bmN0aW9uIGFsbG9jKGUscix0KXthc3NlcnRTaXplKGUpO2lmKGU8PTApe3JldHVybiBjcmVhdGVCdWZmZXIoZSl9aWYociE9PXVuZGVmaW5lZCl7cmV0dXJuIHR5cGVvZiB0PT09XCJzdHJpbmdcIj9jcmVhdGVCdWZmZXIoZSkuZmlsbChyLHQpOmNyZWF0ZUJ1ZmZlcihlKS5maWxsKHIpfXJldHVybiBjcmVhdGVCdWZmZXIoZSl9QnVmZmVyLmFsbG9jPWZ1bmN0aW9uKGUscix0KXtyZXR1cm4gYWxsb2MoZSxyLHQpfTtmdW5jdGlvbiBhbGxvY1Vuc2FmZShlKXthc3NlcnRTaXplKGUpO3JldHVybiBjcmVhdGVCdWZmZXIoZTwwPzA6Y2hlY2tlZChlKXwwKX1CdWZmZXIuYWxsb2NVbnNhZmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGFsbG9jVW5zYWZlKGUpfTtCdWZmZXIuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKGUpe3JldHVybiBhbGxvY1Vuc2FmZShlKX07ZnVuY3Rpb24gZnJvbVN0cmluZyhlLHIpe2lmKHR5cGVvZiByIT09XCJzdHJpbmdcInx8cj09PVwiXCIpe3I9XCJ1dGY4XCJ9aWYoIUJ1ZmZlci5pc0VuY29kaW5nKHIpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrcil9dmFyIHQ9Ynl0ZUxlbmd0aChlLHIpfDA7dmFyIGY9Y3JlYXRlQnVmZmVyKHQpO3ZhciBuPWYud3JpdGUoZSxyKTtpZihuIT09dCl7Zj1mLnNsaWNlKDAsbil9cmV0dXJuIGZ9ZnVuY3Rpb24gZnJvbUFycmF5TGlrZShlKXt2YXIgcj1lLmxlbmd0aDwwPzA6Y2hlY2tlZChlLmxlbmd0aCl8MDt2YXIgdD1jcmVhdGVCdWZmZXIocik7Zm9yKHZhciBmPTA7ZjxyO2YrPTEpe3RbZl09ZVtmXSYyNTV9cmV0dXJuIHR9ZnVuY3Rpb24gZnJvbUFycmF5QnVmZmVyKGUscix0KXtpZihyPDB8fGUuYnl0ZUxlbmd0aDxyKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJvZmZzZXRcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKX1pZihlLmJ5dGVMZW5ndGg8cisodHx8MCkpe3Rocm93IG5ldyBSYW5nZUVycm9yKCdcImxlbmd0aFwiIGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kcycpfXZhciBmO2lmKHI9PT11bmRlZmluZWQmJnQ9PT11bmRlZmluZWQpe2Y9bmV3IFVpbnQ4QXJyYXkoZSl9ZWxzZSBpZih0PT09dW5kZWZpbmVkKXtmPW5ldyBVaW50OEFycmF5KGUscil9ZWxzZXtmPW5ldyBVaW50OEFycmF5KGUscix0KX1PYmplY3Quc2V0UHJvdG90eXBlT2YoZixCdWZmZXIucHJvdG90eXBlKTtyZXR1cm4gZn1mdW5jdGlvbiBmcm9tT2JqZWN0KGUpe2lmKEJ1ZmZlci5pc0J1ZmZlcihlKSl7dmFyIHI9Y2hlY2tlZChlLmxlbmd0aCl8MDt2YXIgdD1jcmVhdGVCdWZmZXIocik7aWYodC5sZW5ndGg9PT0wKXtyZXR1cm4gdH1lLmNvcHkodCwwLDAscik7cmV0dXJuIHR9aWYoZS5sZW5ndGghPT11bmRlZmluZWQpe2lmKHR5cGVvZiBlLmxlbmd0aCE9PVwibnVtYmVyXCJ8fG51bWJlcklzTmFOKGUubGVuZ3RoKSl7cmV0dXJuIGNyZWF0ZUJ1ZmZlcigwKX1yZXR1cm4gZnJvbUFycmF5TGlrZShlKX1pZihlLnR5cGU9PT1cIkJ1ZmZlclwiJiZBcnJheS5pc0FycmF5KGUuZGF0YSkpe3JldHVybiBmcm9tQXJyYXlMaWtlKGUuZGF0YSl9fWZ1bmN0aW9uIGNoZWNrZWQoZSl7aWYoZT49byl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtIFwiK1wic2l6ZTogMHhcIitvLnRvU3RyaW5nKDE2KStcIiBieXRlc1wiKX1yZXR1cm4gZXwwfWZ1bmN0aW9uIFNsb3dCdWZmZXIoZSl7aWYoK2UhPWUpe2U9MH1yZXR1cm4gQnVmZmVyLmFsbG9jKCtlKX1CdWZmZXIuaXNCdWZmZXI9ZnVuY3Rpb24gaXNCdWZmZXIoZSl7cmV0dXJuIGUhPW51bGwmJmUuX2lzQnVmZmVyPT09dHJ1ZSYmZSE9PUJ1ZmZlci5wcm90b3R5cGV9O0J1ZmZlci5jb21wYXJlPWZ1bmN0aW9uIGNvbXBhcmUoZSxyKXtpZihpc0luc3RhbmNlKGUsVWludDhBcnJheSkpZT1CdWZmZXIuZnJvbShlLGUub2Zmc2V0LGUuYnl0ZUxlbmd0aCk7aWYoaXNJbnN0YW5jZShyLFVpbnQ4QXJyYXkpKXI9QnVmZmVyLmZyb20ocixyLm9mZnNldCxyLmJ5dGVMZW5ndGgpO2lmKCFCdWZmZXIuaXNCdWZmZXIoZSl8fCFCdWZmZXIuaXNCdWZmZXIocikpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImJ1ZjFcIiwgXCJidWYyXCIgYXJndW1lbnRzIG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXknKX1pZihlPT09cilyZXR1cm4gMDt2YXIgdD1lLmxlbmd0aDt2YXIgZj1yLmxlbmd0aDtmb3IodmFyIG49MCxpPU1hdGgubWluKHQsZik7bjxpOysrbil7aWYoZVtuXSE9PXJbbl0pe3Q9ZVtuXTtmPXJbbl07YnJlYWt9fWlmKHQ8ZilyZXR1cm4tMTtpZihmPHQpcmV0dXJuIDE7cmV0dXJuIDB9O0J1ZmZlci5pc0VuY29kaW5nPWZ1bmN0aW9uIGlzRW5jb2RpbmcoZSl7c3dpdGNoKFN0cmluZyhlKS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiB0cnVlO2RlZmF1bHQ6cmV0dXJuIGZhbHNlfX07QnVmZmVyLmNvbmNhdD1mdW5jdGlvbiBjb25jYXQoZSxyKXtpZighQXJyYXkuaXNBcnJheShlKSl7dGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0XCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJyl9aWYoZS5sZW5ndGg9PT0wKXtyZXR1cm4gQnVmZmVyLmFsbG9jKDApfXZhciB0O2lmKHI9PT11bmRlZmluZWQpe3I9MDtmb3IodD0wO3Q8ZS5sZW5ndGg7Kyt0KXtyKz1lW3RdLmxlbmd0aH19dmFyIGY9QnVmZmVyLmFsbG9jVW5zYWZlKHIpO3ZhciBuPTA7Zm9yKHQ9MDt0PGUubGVuZ3RoOysrdCl7dmFyIGk9ZVt0XTtpZihpc0luc3RhbmNlKGksVWludDhBcnJheSkpe2k9QnVmZmVyLmZyb20oaSl9aWYoIUJ1ZmZlci5pc0J1ZmZlcihpKSl7dGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0XCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJyl9aS5jb3B5KGYsbik7bis9aS5sZW5ndGh9cmV0dXJuIGZ9O2Z1bmN0aW9uIGJ5dGVMZW5ndGgoZSxyKXtpZihCdWZmZXIuaXNCdWZmZXIoZSkpe3JldHVybiBlLmxlbmd0aH1pZihBcnJheUJ1ZmZlci5pc1ZpZXcoZSl8fGlzSW5zdGFuY2UoZSxBcnJheUJ1ZmZlcikpe3JldHVybiBlLmJ5dGVMZW5ndGh9aWYodHlwZW9mIGUhPT1cInN0cmluZ1wiKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJzdHJpbmdcIiBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBvciBBcnJheUJ1ZmZlci4gJytcIlJlY2VpdmVkIHR5cGUgXCIrdHlwZW9mIGUpfXZhciB0PWUubGVuZ3RoO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGg+MiYmYXJndW1lbnRzWzJdPT09dHJ1ZTtpZighZiYmdD09PTApcmV0dXJuIDA7dmFyIG49ZmFsc2U7Zm9yKDs7KXtzd2l0Y2gocil7Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gdDtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm4gdXRmOFRvQnl0ZXMoZSkubGVuZ3RoO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiB0KjI7Y2FzZVwiaGV4XCI6cmV0dXJuIHQ+Pj4xO2Nhc2VcImJhc2U2NFwiOnJldHVybiBiYXNlNjRUb0J5dGVzKGUpLmxlbmd0aDtkZWZhdWx0OmlmKG4pe3JldHVybiBmPy0xOnV0ZjhUb0J5dGVzKGUpLmxlbmd0aH1yPShcIlwiK3IpLnRvTG93ZXJDYXNlKCk7bj10cnVlfX19QnVmZmVyLmJ5dGVMZW5ndGg9Ynl0ZUxlbmd0aDtmdW5jdGlvbiBzbG93VG9TdHJpbmcoZSxyLHQpe3ZhciBmPWZhbHNlO2lmKHI9PT11bmRlZmluZWR8fHI8MCl7cj0wfWlmKHI+dGhpcy5sZW5ndGgpe3JldHVyblwiXCJ9aWYodD09PXVuZGVmaW5lZHx8dD50aGlzLmxlbmd0aCl7dD10aGlzLmxlbmd0aH1pZih0PD0wKXtyZXR1cm5cIlwifXQ+Pj49MDtyPj4+PTA7aWYodDw9cil7cmV0dXJuXCJcIn1pZighZSllPVwidXRmOFwiO3doaWxlKHRydWUpe3N3aXRjaChlKXtjYXNlXCJoZXhcIjpyZXR1cm4gaGV4U2xpY2UodGhpcyxyLHQpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiB1dGY4U2xpY2UodGhpcyxyLHQpO2Nhc2VcImFzY2lpXCI6cmV0dXJuIGFzY2lpU2xpY2UodGhpcyxyLHQpO2Nhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVybiBsYXRpbjFTbGljZSh0aGlzLHIsdCk7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIGJhc2U2NFNsaWNlKHRoaXMscix0KTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gdXRmMTZsZVNsaWNlKHRoaXMscix0KTtkZWZhdWx0OmlmKGYpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2UpO2U9KGUrXCJcIikudG9Mb3dlckNhc2UoKTtmPXRydWV9fX1CdWZmZXIucHJvdG90eXBlLl9pc0J1ZmZlcj10cnVlO2Z1bmN0aW9uIHN3YXAoZSxyLHQpe3ZhciBmPWVbcl07ZVtyXT1lW3RdO2VbdF09Zn1CdWZmZXIucHJvdG90eXBlLnN3YXAxNj1mdW5jdGlvbiBzd2FwMTYoKXt2YXIgZT10aGlzLmxlbmd0aDtpZihlJTIhPT0wKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzXCIpfWZvcih2YXIgcj0wO3I8ZTtyKz0yKXtzd2FwKHRoaXMscixyKzEpfXJldHVybiB0aGlzfTtCdWZmZXIucHJvdG90eXBlLnN3YXAzMj1mdW5jdGlvbiBzd2FwMzIoKXt2YXIgZT10aGlzLmxlbmd0aDtpZihlJTQhPT0wKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzXCIpfWZvcih2YXIgcj0wO3I8ZTtyKz00KXtzd2FwKHRoaXMscixyKzMpO3N3YXAodGhpcyxyKzEscisyKX1yZXR1cm4gdGhpc307QnVmZmVyLnByb3RvdHlwZS5zd2FwNjQ9ZnVuY3Rpb24gc3dhcDY0KCl7dmFyIGU9dGhpcy5sZW5ndGg7aWYoZSU4IT09MCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNjQtYml0c1wiKX1mb3IodmFyIHI9MDtyPGU7cis9OCl7c3dhcCh0aGlzLHIscis3KTtzd2FwKHRoaXMscisxLHIrNik7c3dhcCh0aGlzLHIrMixyKzUpO3N3YXAodGhpcyxyKzMscis0KX1yZXR1cm4gdGhpc307QnVmZmVyLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbiB0b1N0cmluZygpe3ZhciBlPXRoaXMubGVuZ3RoO2lmKGU9PT0wKXJldHVyblwiXCI7aWYoYXJndW1lbnRzLmxlbmd0aD09PTApcmV0dXJuIHV0ZjhTbGljZSh0aGlzLDAsZSk7cmV0dXJuIHNsb3dUb1N0cmluZy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O0J1ZmZlci5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmc9QnVmZmVyLnByb3RvdHlwZS50b1N0cmluZztCdWZmZXIucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbiBlcXVhbHMoZSl7aWYoIUJ1ZmZlci5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlclwiKTtpZih0aGlzPT09ZSlyZXR1cm4gdHJ1ZTtyZXR1cm4gQnVmZmVyLmNvbXBhcmUodGhpcyxlKT09PTB9O0J1ZmZlci5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbiBpbnNwZWN0KCl7dmFyIGU9XCJcIjt2YXIgdD1yLklOU1BFQ1RfTUFYX0JZVEVTO2U9dGhpcy50b1N0cmluZyhcImhleFwiLDAsdCkucmVwbGFjZSgvKC57Mn0pL2csXCIkMSBcIikudHJpbSgpO2lmKHRoaXMubGVuZ3RoPnQpZSs9XCIgLi4uIFwiO3JldHVyblwiPEJ1ZmZlciBcIitlK1wiPlwifTtpZihpKXtCdWZmZXIucHJvdG90eXBlW2ldPUJ1ZmZlci5wcm90b3R5cGUuaW5zcGVjdH1CdWZmZXIucHJvdG90eXBlLmNvbXBhcmU9ZnVuY3Rpb24gY29tcGFyZShlLHIsdCxmLG4pe2lmKGlzSW5zdGFuY2UoZSxVaW50OEFycmF5KSl7ZT1CdWZmZXIuZnJvbShlLGUub2Zmc2V0LGUuYnl0ZUxlbmd0aCl9aWYoIUJ1ZmZlci5pc0J1ZmZlcihlKSl7dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidGFyZ2V0XCIgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheS4gJytcIlJlY2VpdmVkIHR5cGUgXCIrdHlwZW9mIGUpfWlmKHI9PT11bmRlZmluZWQpe3I9MH1pZih0PT09dW5kZWZpbmVkKXt0PWU/ZS5sZW5ndGg6MH1pZihmPT09dW5kZWZpbmVkKXtmPTB9aWYobj09PXVuZGVmaW5lZCl7bj10aGlzLmxlbmd0aH1pZihyPDB8fHQ+ZS5sZW5ndGh8fGY8MHx8bj50aGlzLmxlbmd0aCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJvdXQgb2YgcmFuZ2UgaW5kZXhcIil9aWYoZj49biYmcj49dCl7cmV0dXJuIDB9aWYoZj49bil7cmV0dXJuLTF9aWYocj49dCl7cmV0dXJuIDF9cj4+Pj0wO3Q+Pj49MDtmPj4+PTA7bj4+Pj0wO2lmKHRoaXM9PT1lKXJldHVybiAwO3ZhciBpPW4tZjt2YXIgbz10LXI7dmFyIHU9TWF0aC5taW4oaSxvKTt2YXIgYT10aGlzLnNsaWNlKGYsbik7dmFyIHM9ZS5zbGljZShyLHQpO2Zvcih2YXIgaD0wO2g8dTsrK2gpe2lmKGFbaF0hPT1zW2hdKXtpPWFbaF07bz1zW2hdO2JyZWFrfX1pZihpPG8pcmV0dXJuLTE7aWYobzxpKXJldHVybiAxO3JldHVybiAwfTtmdW5jdGlvbiBiaWRpcmVjdGlvbmFsSW5kZXhPZihlLHIsdCxmLG4pe2lmKGUubGVuZ3RoPT09MClyZXR1cm4tMTtpZih0eXBlb2YgdD09PVwic3RyaW5nXCIpe2Y9dDt0PTB9ZWxzZSBpZih0PjIxNDc0ODM2NDcpe3Q9MjE0NzQ4MzY0N31lbHNlIGlmKHQ8LTIxNDc0ODM2NDgpe3Q9LTIxNDc0ODM2NDh9dD0rdDtpZihudW1iZXJJc05hTih0KSl7dD1uPzA6ZS5sZW5ndGgtMX1pZih0PDApdD1lLmxlbmd0aCt0O2lmKHQ+PWUubGVuZ3RoKXtpZihuKXJldHVybi0xO2Vsc2UgdD1lLmxlbmd0aC0xfWVsc2UgaWYodDwwKXtpZihuKXQ9MDtlbHNlIHJldHVybi0xfWlmKHR5cGVvZiByPT09XCJzdHJpbmdcIil7cj1CdWZmZXIuZnJvbShyLGYpfWlmKEJ1ZmZlci5pc0J1ZmZlcihyKSl7aWYoci5sZW5ndGg9PT0wKXtyZXR1cm4tMX1yZXR1cm4gYXJyYXlJbmRleE9mKGUscix0LGYsbil9ZWxzZSBpZih0eXBlb2Ygcj09PVwibnVtYmVyXCIpe3I9ciYyNTU7aWYodHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2Y9PT1cImZ1bmN0aW9uXCIpe2lmKG4pe3JldHVybiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoZSxyLHQpfWVsc2V7cmV0dXJuIFVpbnQ4QXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwoZSxyLHQpfX1yZXR1cm4gYXJyYXlJbmRleE9mKGUsW3JdLHQsZixuKX10aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyXCIpfWZ1bmN0aW9uIGFycmF5SW5kZXhPZihlLHIsdCxmLG4pe3ZhciBpPTE7dmFyIG89ZS5sZW5ndGg7dmFyIHU9ci5sZW5ndGg7aWYoZiE9PXVuZGVmaW5lZCl7Zj1TdHJpbmcoZikudG9Mb3dlckNhc2UoKTtpZihmPT09XCJ1Y3MyXCJ8fGY9PT1cInVjcy0yXCJ8fGY9PT1cInV0ZjE2bGVcInx8Zj09PVwidXRmLTE2bGVcIil7aWYoZS5sZW5ndGg8Mnx8ci5sZW5ndGg8Mil7cmV0dXJuLTF9aT0yO28vPTI7dS89Mjt0Lz0yfX1mdW5jdGlvbiByZWFkKGUscil7aWYoaT09PTEpe3JldHVybiBlW3JdfWVsc2V7cmV0dXJuIGUucmVhZFVJbnQxNkJFKHIqaSl9fXZhciBhO2lmKG4pe3ZhciBzPS0xO2ZvcihhPXQ7YTxvO2ErKyl7aWYocmVhZChlLGEpPT09cmVhZChyLHM9PT0tMT8wOmEtcykpe2lmKHM9PT0tMSlzPWE7aWYoYS1zKzE9PT11KXJldHVybiBzKml9ZWxzZXtpZihzIT09LTEpYS09YS1zO3M9LTF9fX1lbHNle2lmKHQrdT5vKXQ9by11O2ZvcihhPXQ7YT49MDthLS0pe3ZhciBoPXRydWU7Zm9yKHZhciBjPTA7Yzx1O2MrKyl7aWYocmVhZChlLGErYykhPT1yZWFkKHIsYykpe2g9ZmFsc2U7YnJlYWt9fWlmKGgpcmV0dXJuIGF9fXJldHVybi0xfUJ1ZmZlci5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24gaW5jbHVkZXMoZSxyLHQpe3JldHVybiB0aGlzLmluZGV4T2YoZSxyLHQpIT09LTF9O0J1ZmZlci5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbiBpbmRleE9mKGUscix0KXtyZXR1cm4gYmlkaXJlY3Rpb25hbEluZGV4T2YodGhpcyxlLHIsdCx0cnVlKX07QnVmZmVyLnByb3RvdHlwZS5sYXN0SW5kZXhPZj1mdW5jdGlvbiBsYXN0SW5kZXhPZihlLHIsdCl7cmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsZSxyLHQsZmFsc2UpfTtmdW5jdGlvbiBoZXhXcml0ZShlLHIsdCxmKXt0PU51bWJlcih0KXx8MDt2YXIgbj1lLmxlbmd0aC10O2lmKCFmKXtmPW59ZWxzZXtmPU51bWJlcihmKTtpZihmPm4pe2Y9bn19dmFyIGk9ci5sZW5ndGg7aWYoZj5pLzIpe2Y9aS8yfWZvcih2YXIgbz0wO288ZjsrK28pe3ZhciB1PXBhcnNlSW50KHIuc3Vic3RyKG8qMiwyKSwxNik7aWYobnVtYmVySXNOYU4odSkpcmV0dXJuIG87ZVt0K29dPXV9cmV0dXJuIG99ZnVuY3Rpb24gdXRmOFdyaXRlKGUscix0LGYpe3JldHVybiBibGl0QnVmZmVyKHV0ZjhUb0J5dGVzKHIsZS5sZW5ndGgtdCksZSx0LGYpfWZ1bmN0aW9uIGFzY2lpV3JpdGUoZSxyLHQsZil7cmV0dXJuIGJsaXRCdWZmZXIoYXNjaWlUb0J5dGVzKHIpLGUsdCxmKX1mdW5jdGlvbiBsYXRpbjFXcml0ZShlLHIsdCxmKXtyZXR1cm4gYXNjaWlXcml0ZShlLHIsdCxmKX1mdW5jdGlvbiBiYXNlNjRXcml0ZShlLHIsdCxmKXtyZXR1cm4gYmxpdEJ1ZmZlcihiYXNlNjRUb0J5dGVzKHIpLGUsdCxmKX1mdW5jdGlvbiB1Y3MyV3JpdGUoZSxyLHQsZil7cmV0dXJuIGJsaXRCdWZmZXIodXRmMTZsZVRvQnl0ZXMocixlLmxlbmd0aC10KSxlLHQsZil9QnVmZmVyLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbiB3cml0ZShlLHIsdCxmKXtpZihyPT09dW5kZWZpbmVkKXtmPVwidXRmOFwiO3Q9dGhpcy5sZW5ndGg7cj0wfWVsc2UgaWYodD09PXVuZGVmaW5lZCYmdHlwZW9mIHI9PT1cInN0cmluZ1wiKXtmPXI7dD10aGlzLmxlbmd0aDtyPTB9ZWxzZSBpZihpc0Zpbml0ZShyKSl7cj1yPj4+MDtpZihpc0Zpbml0ZSh0KSl7dD10Pj4+MDtpZihmPT09dW5kZWZpbmVkKWY9XCJ1dGY4XCJ9ZWxzZXtmPXQ7dD11bmRlZmluZWR9fWVsc2V7dGhyb3cgbmV3IEVycm9yKFwiQnVmZmVyLndyaXRlKHN0cmluZywgZW5jb2RpbmcsIG9mZnNldFssIGxlbmd0aF0pIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWRcIil9dmFyIG49dGhpcy5sZW5ndGgtcjtpZih0PT09dW5kZWZpbmVkfHx0Pm4pdD1uO2lmKGUubGVuZ3RoPjAmJih0PDB8fHI8MCl8fHI+dGhpcy5sZW5ndGgpe3Rocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byB3cml0ZSBvdXRzaWRlIGJ1ZmZlciBib3VuZHNcIil9aWYoIWYpZj1cInV0ZjhcIjt2YXIgaT1mYWxzZTtmb3IoOzspe3N3aXRjaChmKXtjYXNlXCJoZXhcIjpyZXR1cm4gaGV4V3JpdGUodGhpcyxlLHIsdCk7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIHV0ZjhXcml0ZSh0aGlzLGUscix0KTtjYXNlXCJhc2NpaVwiOnJldHVybiBhc2NpaVdyaXRlKHRoaXMsZSxyLHQpO2Nhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVybiBsYXRpbjFXcml0ZSh0aGlzLGUscix0KTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gYmFzZTY0V3JpdGUodGhpcyxlLHIsdCk7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIHVjczJXcml0ZSh0aGlzLGUscix0KTtkZWZhdWx0OmlmKGkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2YpO2Y9KFwiXCIrZikudG9Mb3dlckNhc2UoKTtpPXRydWV9fX07QnVmZmVyLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24gdG9KU09OKCl7cmV0dXJue3R5cGU6XCJCdWZmZXJcIixkYXRhOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2Fycnx8dGhpcywwKX19O2Z1bmN0aW9uIGJhc2U2NFNsaWNlKGUscix0KXtpZihyPT09MCYmdD09PWUubGVuZ3RoKXtyZXR1cm4gZi5mcm9tQnl0ZUFycmF5KGUpfWVsc2V7cmV0dXJuIGYuZnJvbUJ5dGVBcnJheShlLnNsaWNlKHIsdCkpfX1mdW5jdGlvbiB1dGY4U2xpY2UoZSxyLHQpe3Q9TWF0aC5taW4oZS5sZW5ndGgsdCk7dmFyIGY9W107dmFyIG49cjt3aGlsZShuPHQpe3ZhciBpPWVbbl07dmFyIG89bnVsbDt2YXIgdT1pPjIzOT80Omk+MjIzPzM6aT4xOTE/MjoxO2lmKG4rdTw9dCl7dmFyIGEscyxoLGM7c3dpdGNoKHUpe2Nhc2UgMTppZihpPDEyOCl7bz1pfWJyZWFrO2Nhc2UgMjphPWVbbisxXTtpZigoYSYxOTIpPT09MTI4KXtjPShpJjMxKTw8NnxhJjYzO2lmKGM+MTI3KXtvPWN9fWJyZWFrO2Nhc2UgMzphPWVbbisxXTtzPWVbbisyXTtpZigoYSYxOTIpPT09MTI4JiYocyYxOTIpPT09MTI4KXtjPShpJjE1KTw8MTJ8KGEmNjMpPDw2fHMmNjM7aWYoYz4yMDQ3JiYoYzw1NTI5Nnx8Yz41NzM0Mykpe289Y319YnJlYWs7Y2FzZSA0OmE9ZVtuKzFdO3M9ZVtuKzJdO2g9ZVtuKzNdO2lmKChhJjE5Mik9PT0xMjgmJihzJjE5Mik9PT0xMjgmJihoJjE5Mik9PT0xMjgpe2M9KGkmMTUpPDwxOHwoYSY2Myk8PDEyfChzJjYzKTw8NnxoJjYzO2lmKGM+NjU1MzUmJmM8MTExNDExMil7bz1jfX19fWlmKG89PT1udWxsKXtvPTY1NTMzO3U9MX1lbHNlIGlmKG8+NjU1MzUpe28tPTY1NTM2O2YucHVzaChvPj4+MTAmMTAyM3w1NTI5Nik7bz01NjMyMHxvJjEwMjN9Zi5wdXNoKG8pO24rPXV9cmV0dXJuIGRlY29kZUNvZGVQb2ludHNBcnJheShmKX12YXIgdT00MDk2O2Z1bmN0aW9uIGRlY29kZUNvZGVQb2ludHNBcnJheShlKXt2YXIgcj1lLmxlbmd0aDtpZihyPD11KXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsZSl9dmFyIHQ9XCJcIjt2YXIgZj0wO3doaWxlKGY8cil7dCs9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsZS5zbGljZShmLGYrPXUpKX1yZXR1cm4gdH1mdW5jdGlvbiBhc2NpaVNsaWNlKGUscix0KXt2YXIgZj1cIlwiO3Q9TWF0aC5taW4oZS5sZW5ndGgsdCk7Zm9yKHZhciBuPXI7bjx0Oysrbil7Zis9U3RyaW5nLmZyb21DaGFyQ29kZShlW25dJjEyNyl9cmV0dXJuIGZ9ZnVuY3Rpb24gbGF0aW4xU2xpY2UoZSxyLHQpe3ZhciBmPVwiXCI7dD1NYXRoLm1pbihlLmxlbmd0aCx0KTtmb3IodmFyIG49cjtuPHQ7KytuKXtmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGVbbl0pfXJldHVybiBmfWZ1bmN0aW9uIGhleFNsaWNlKGUscix0KXt2YXIgZj1lLmxlbmd0aDtpZighcnx8cjwwKXI9MDtpZighdHx8dDwwfHx0PmYpdD1mO3ZhciBuPVwiXCI7Zm9yKHZhciBpPXI7aTx0OysraSl7bis9c1tlW2ldXX1yZXR1cm4gbn1mdW5jdGlvbiB1dGYxNmxlU2xpY2UoZSxyLHQpe3ZhciBmPWUuc2xpY2Uocix0KTt2YXIgbj1cIlwiO2Zvcih2YXIgaT0wO2k8Zi5sZW5ndGg7aSs9Mil7bis9U3RyaW5nLmZyb21DaGFyQ29kZShmW2ldK2ZbaSsxXSoyNTYpfXJldHVybiBufUJ1ZmZlci5wcm90b3R5cGUuc2xpY2U9ZnVuY3Rpb24gc2xpY2UoZSxyKXt2YXIgdD10aGlzLmxlbmd0aDtlPX5+ZTtyPXI9PT11bmRlZmluZWQ/dDp+fnI7aWYoZTwwKXtlKz10O2lmKGU8MCllPTB9ZWxzZSBpZihlPnQpe2U9dH1pZihyPDApe3IrPXQ7aWYocjwwKXI9MH1lbHNlIGlmKHI+dCl7cj10fWlmKHI8ZSlyPWU7dmFyIGY9dGhpcy5zdWJhcnJheShlLHIpO09iamVjdC5zZXRQcm90b3R5cGVPZihmLEJ1ZmZlci5wcm90b3R5cGUpO3JldHVybiBmfTtmdW5jdGlvbiBjaGVja09mZnNldChlLHIsdCl7aWYoZSUxIT09MHx8ZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwib2Zmc2V0IGlzIG5vdCB1aW50XCIpO2lmKGUrcj50KXRocm93IG5ldyBSYW5nZUVycm9yKFwiVHJ5aW5nIHRvIGFjY2VzcyBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKX1CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50TEU9ZnVuY3Rpb24gcmVhZFVJbnRMRShlLHIsdCl7ZT1lPj4+MDtyPXI+Pj4wO2lmKCF0KWNoZWNrT2Zmc2V0KGUscix0aGlzLmxlbmd0aCk7dmFyIGY9dGhpc1tlXTt2YXIgbj0xO3ZhciBpPTA7d2hpbGUoKytpPHImJihuKj0yNTYpKXtmKz10aGlzW2UraV0qbn1yZXR1cm4gZn07QnVmZmVyLnByb3RvdHlwZS5yZWFkVUludEJFPWZ1bmN0aW9uIHJlYWRVSW50QkUoZSxyLHQpe2U9ZT4+PjA7cj1yPj4+MDtpZighdCl7Y2hlY2tPZmZzZXQoZSxyLHRoaXMubGVuZ3RoKX12YXIgZj10aGlzW2UrLS1yXTt2YXIgbj0xO3doaWxlKHI+MCYmKG4qPTI1Nikpe2YrPXRoaXNbZSstLXJdKm59cmV0dXJuIGZ9O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uIHJlYWRVSW50OChlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSwxLHRoaXMubGVuZ3RoKTtyZXR1cm4gdGhpc1tlXX07QnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDE2TEU9ZnVuY3Rpb24gcmVhZFVJbnQxNkxFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDIsdGhpcy5sZW5ndGgpO3JldHVybiB0aGlzW2VdfHRoaXNbZSsxXTw8OH07QnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDE2QkU9ZnVuY3Rpb24gcmVhZFVJbnQxNkJFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDIsdGhpcy5sZW5ndGgpO3JldHVybiB0aGlzW2VdPDw4fHRoaXNbZSsxXX07QnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDMyTEU9ZnVuY3Rpb24gcmVhZFVJbnQzMkxFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDQsdGhpcy5sZW5ndGgpO3JldHVybih0aGlzW2VdfHRoaXNbZSsxXTw8OHx0aGlzW2UrMl08PDE2KSt0aGlzW2UrM10qMTY3NzcyMTZ9O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWZ1bmN0aW9uIHJlYWRVSW50MzJCRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSw0LHRoaXMubGVuZ3RoKTtyZXR1cm4gdGhpc1tlXSoxNjc3NzIxNisodGhpc1tlKzFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdKX07QnVmZmVyLnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24gcmVhZEludExFKGUscix0KXtlPWU+Pj4wO3I9cj4+PjA7aWYoIXQpY2hlY2tPZmZzZXQoZSxyLHRoaXMubGVuZ3RoKTt2YXIgZj10aGlzW2VdO3ZhciBuPTE7dmFyIGk9MDt3aGlsZSgrK2k8ciYmKG4qPTI1Nikpe2YrPXRoaXNbZStpXSpufW4qPTEyODtpZihmPj1uKWYtPU1hdGgucG93KDIsOCpyKTtyZXR1cm4gZn07QnVmZmVyLnByb3RvdHlwZS5yZWFkSW50QkU9ZnVuY3Rpb24gcmVhZEludEJFKGUscix0KXtlPWU+Pj4wO3I9cj4+PjA7aWYoIXQpY2hlY2tPZmZzZXQoZSxyLHRoaXMubGVuZ3RoKTt2YXIgZj1yO3ZhciBuPTE7dmFyIGk9dGhpc1tlKy0tZl07d2hpbGUoZj4wJiYobio9MjU2KSl7aSs9dGhpc1tlKy0tZl0qbn1uKj0xMjg7aWYoaT49bilpLT1NYXRoLnBvdygyLDgqcik7cmV0dXJuIGl9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludDg9ZnVuY3Rpb24gcmVhZEludDgoZSxyKXtlPWU+Pj4wO2lmKCFyKWNoZWNrT2Zmc2V0KGUsMSx0aGlzLmxlbmd0aCk7aWYoISh0aGlzW2VdJjEyOCkpcmV0dXJuIHRoaXNbZV07cmV0dXJuKDI1NS10aGlzW2VdKzEpKi0xfTtCdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkxFPWZ1bmN0aW9uIHJlYWRJbnQxNkxFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDIsdGhpcy5sZW5ndGgpO3ZhciB0PXRoaXNbZV18dGhpc1tlKzFdPDw4O3JldHVybiB0JjMyNzY4P3R8NDI5NDkwMTc2MDp0fTtCdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkJFPWZ1bmN0aW9uIHJlYWRJbnQxNkJFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDIsdGhpcy5sZW5ndGgpO3ZhciB0PXRoaXNbZSsxXXx0aGlzW2VdPDw4O3JldHVybiB0JjMyNzY4P3R8NDI5NDkwMTc2MDp0fTtCdWZmZXIucHJvdG90eXBlLnJlYWRJbnQzMkxFPWZ1bmN0aW9uIHJlYWRJbnQzMkxFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDQsdGhpcy5sZW5ndGgpO3JldHVybiB0aGlzW2VdfHRoaXNbZSsxXTw8OHx0aGlzW2UrMl08PDE2fHRoaXNbZSszXTw8MjR9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24gcmVhZEludDMyQkUoZSxyKXtlPWU+Pj4wO2lmKCFyKWNoZWNrT2Zmc2V0KGUsNCx0aGlzLmxlbmd0aCk7cmV0dXJuIHRoaXNbZV08PDI0fHRoaXNbZSsxXTw8MTZ8dGhpc1tlKzJdPDw4fHRoaXNbZSszXX07QnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRMRT1mdW5jdGlvbiByZWFkRmxvYXRMRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSw0LHRoaXMubGVuZ3RoKTtyZXR1cm4gbi5yZWFkKHRoaXMsZSx0cnVlLDIzLDQpfTtCdWZmZXIucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uIHJlYWRGbG9hdEJFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDQsdGhpcy5sZW5ndGgpO3JldHVybiBuLnJlYWQodGhpcyxlLGZhbHNlLDIzLDQpfTtCdWZmZXIucHJvdG90eXBlLnJlYWREb3VibGVMRT1mdW5jdGlvbiByZWFkRG91YmxlTEUoZSxyKXtlPWU+Pj4wO2lmKCFyKWNoZWNrT2Zmc2V0KGUsOCx0aGlzLmxlbmd0aCk7cmV0dXJuIG4ucmVhZCh0aGlzLGUsdHJ1ZSw1Miw4KX07QnVmZmVyLnByb3RvdHlwZS5yZWFkRG91YmxlQkU9ZnVuY3Rpb24gcmVhZERvdWJsZUJFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDgsdGhpcy5sZW5ndGgpO3JldHVybiBuLnJlYWQodGhpcyxlLGZhbHNlLDUyLDgpfTtmdW5jdGlvbiBjaGVja0ludChlLHIsdCxmLG4saSl7aWYoIUJ1ZmZlci5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImJ1ZmZlclwiIGFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXIgaW5zdGFuY2UnKTtpZihyPm58fHI8aSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJ2YWx1ZVwiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKTtpZih0K2Y+ZS5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIil9QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnRMRT1mdW5jdGlvbiB3cml0ZVVJbnRMRShlLHIsdCxmKXtlPStlO3I9cj4+PjA7dD10Pj4+MDtpZighZil7dmFyIG49TWF0aC5wb3coMiw4KnQpLTE7Y2hlY2tJbnQodGhpcyxlLHIsdCxuLDApfXZhciBpPTE7dmFyIG89MDt0aGlzW3JdPWUmMjU1O3doaWxlKCsrbzx0JiYoaSo9MjU2KSl7dGhpc1tyK29dPWUvaSYyNTV9cmV0dXJuIHIrdH07QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnRCRT1mdW5jdGlvbiB3cml0ZVVJbnRCRShlLHIsdCxmKXtlPStlO3I9cj4+PjA7dD10Pj4+MDtpZighZil7dmFyIG49TWF0aC5wb3coMiw4KnQpLTE7Y2hlY2tJbnQodGhpcyxlLHIsdCxuLDApfXZhciBpPXQtMTt2YXIgbz0xO3RoaXNbcitpXT1lJjI1NTt3aGlsZSgtLWk+PTAmJihvKj0yNTYpKXt0aGlzW3IraV09ZS9vJjI1NX1yZXR1cm4gcit0fTtCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDg9ZnVuY3Rpb24gd3JpdGVVSW50OChlLHIsdCl7ZT0rZTtyPXI+Pj4wO2lmKCF0KWNoZWNrSW50KHRoaXMsZSxyLDEsMjU1LDApO3RoaXNbcl09ZSYyNTU7cmV0dXJuIHIrMX07QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFPWZ1bmN0aW9uIHdyaXRlVUludDE2TEUoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciwyLDY1NTM1LDApO3RoaXNbcl09ZSYyNTU7dGhpc1tyKzFdPWU+Pj44O3JldHVybiByKzJ9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbiB3cml0ZVVJbnQxNkJFKGUscix0KXtlPStlO3I9cj4+PjA7aWYoIXQpY2hlY2tJbnQodGhpcyxlLHIsMiw2NTUzNSwwKTt0aGlzW3JdPWU+Pj44O3RoaXNbcisxXT1lJjI1NTtyZXR1cm4gcisyfTtCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyTEU9ZnVuY3Rpb24gd3JpdGVVSW50MzJMRShlLHIsdCl7ZT0rZTtyPXI+Pj4wO2lmKCF0KWNoZWNrSW50KHRoaXMsZSxyLDQsNDI5NDk2NzI5NSwwKTt0aGlzW3IrM109ZT4+PjI0O3RoaXNbcisyXT1lPj4+MTY7dGhpc1tyKzFdPWU+Pj44O3RoaXNbcl09ZSYyNTU7cmV0dXJuIHIrNH07QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFPWZ1bmN0aW9uIHdyaXRlVUludDMyQkUoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciw0LDQyOTQ5NjcyOTUsMCk7dGhpc1tyXT1lPj4+MjQ7dGhpc1tyKzFdPWU+Pj4xNjt0aGlzW3IrMl09ZT4+Pjg7dGhpc1tyKzNdPWUmMjU1O3JldHVybiByKzR9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbiB3cml0ZUludExFKGUscix0LGYpe2U9K2U7cj1yPj4+MDtpZighZil7dmFyIG49TWF0aC5wb3coMiw4KnQtMSk7Y2hlY2tJbnQodGhpcyxlLHIsdCxuLTEsLW4pfXZhciBpPTA7dmFyIG89MTt2YXIgdT0wO3RoaXNbcl09ZSYyNTU7d2hpbGUoKytpPHQmJihvKj0yNTYpKXtpZihlPDAmJnU9PT0wJiZ0aGlzW3IraS0xXSE9PTApe3U9MX10aGlzW3IraV09KGUvbz4+MCktdSYyNTV9cmV0dXJuIHIrdH07QnVmZmVyLnByb3RvdHlwZS53cml0ZUludEJFPWZ1bmN0aW9uIHdyaXRlSW50QkUoZSxyLHQsZil7ZT0rZTtyPXI+Pj4wO2lmKCFmKXt2YXIgbj1NYXRoLnBvdygyLDgqdC0xKTtjaGVja0ludCh0aGlzLGUscix0LG4tMSwtbil9dmFyIGk9dC0xO3ZhciBvPTE7dmFyIHU9MDt0aGlzW3IraV09ZSYyNTU7d2hpbGUoLS1pPj0wJiYobyo9MjU2KSl7aWYoZTwwJiZ1PT09MCYmdGhpc1tyK2krMV0hPT0wKXt1PTF9dGhpc1tyK2ldPShlL28+PjApLXUmMjU1fXJldHVybiByK3R9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQ4PWZ1bmN0aW9uIHdyaXRlSW50OChlLHIsdCl7ZT0rZTtyPXI+Pj4wO2lmKCF0KWNoZWNrSW50KHRoaXMsZSxyLDEsMTI3LC0xMjgpO2lmKGU8MCllPTI1NStlKzE7dGhpc1tyXT1lJjI1NTtyZXR1cm4gcisxfTtCdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZMRT1mdW5jdGlvbiB3cml0ZUludDE2TEUoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciwyLDMyNzY3LC0zMjc2OCk7dGhpc1tyXT1lJjI1NTt0aGlzW3IrMV09ZT4+Pjg7cmV0dXJuIHIrMn07QnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2QkU9ZnVuY3Rpb24gd3JpdGVJbnQxNkJFKGUscix0KXtlPStlO3I9cj4+PjA7aWYoIXQpY2hlY2tJbnQodGhpcyxlLHIsMiwzMjc2NywtMzI3NjgpO3RoaXNbcl09ZT4+Pjg7dGhpc1tyKzFdPWUmMjU1O3JldHVybiByKzJ9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uIHdyaXRlSW50MzJMRShlLHIsdCl7ZT0rZTtyPXI+Pj4wO2lmKCF0KWNoZWNrSW50KHRoaXMsZSxyLDQsMjE0NzQ4MzY0NywtMjE0NzQ4MzY0OCk7dGhpc1tyXT1lJjI1NTt0aGlzW3IrMV09ZT4+Pjg7dGhpc1tyKzJdPWU+Pj4xNjt0aGlzW3IrM109ZT4+PjI0O3JldHVybiByKzR9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQzMkJFPWZ1bmN0aW9uIHdyaXRlSW50MzJCRShlLHIsdCl7ZT0rZTtyPXI+Pj4wO2lmKCF0KWNoZWNrSW50KHRoaXMsZSxyLDQsMjE0NzQ4MzY0NywtMjE0NzQ4MzY0OCk7aWYoZTwwKWU9NDI5NDk2NzI5NStlKzE7dGhpc1tyXT1lPj4+MjQ7dGhpc1tyKzFdPWU+Pj4xNjt0aGlzW3IrMl09ZT4+Pjg7dGhpc1tyKzNdPWUmMjU1O3JldHVybiByKzR9O2Z1bmN0aW9uIGNoZWNrSUVFRTc1NChlLHIsdCxmLG4saSl7aWYodCtmPmUubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiB3cml0ZUZsb2F0KGUscix0LGYsaSl7cj0rcjt0PXQ+Pj4wO2lmKCFpKXtjaGVja0lFRUU3NTQoZSxyLHQsNCwzNDAyODIzNDY2Mzg1Mjg4NmUyMiwtMzQwMjgyMzQ2NjM4NTI4ODZlMjIpfW4ud3JpdGUoZSxyLHQsZiwyMyw0KTtyZXR1cm4gdCs0fUJ1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdExFPWZ1bmN0aW9uIHdyaXRlRmxvYXRMRShlLHIsdCl7cmV0dXJuIHdyaXRlRmxvYXQodGhpcyxlLHIsdHJ1ZSx0KX07QnVmZmVyLnByb3RvdHlwZS53cml0ZUZsb2F0QkU9ZnVuY3Rpb24gd3JpdGVGbG9hdEJFKGUscix0KXtyZXR1cm4gd3JpdGVGbG9hdCh0aGlzLGUscixmYWxzZSx0KX07ZnVuY3Rpb24gd3JpdGVEb3VibGUoZSxyLHQsZixpKXtyPStyO3Q9dD4+PjA7aWYoIWkpe2NoZWNrSUVFRTc1NChlLHIsdCw4LDE3OTc2OTMxMzQ4NjIzMTU3ZTI5MiwtMTc5NzY5MzEzNDg2MjMxNTdlMjkyKX1uLndyaXRlKGUscix0LGYsNTIsOCk7cmV0dXJuIHQrOH1CdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlTEU9ZnVuY3Rpb24gd3JpdGVEb3VibGVMRShlLHIsdCl7cmV0dXJuIHdyaXRlRG91YmxlKHRoaXMsZSxyLHRydWUsdCl9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVEb3VibGVCRT1mdW5jdGlvbiB3cml0ZURvdWJsZUJFKGUscix0KXtyZXR1cm4gd3JpdGVEb3VibGUodGhpcyxlLHIsZmFsc2UsdCl9O0J1ZmZlci5wcm90b3R5cGUuY29weT1mdW5jdGlvbiBjb3B5KGUscix0LGYpe2lmKCFCdWZmZXIuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHNob3VsZCBiZSBhIEJ1ZmZlclwiKTtpZighdCl0PTA7aWYoIWYmJmYhPT0wKWY9dGhpcy5sZW5ndGg7aWYocj49ZS5sZW5ndGgpcj1lLmxlbmd0aDtpZighcilyPTA7aWYoZj4wJiZmPHQpZj10O2lmKGY9PT10KXJldHVybiAwO2lmKGUubGVuZ3RoPT09MHx8dGhpcy5sZW5ndGg9PT0wKXJldHVybiAwO2lmKHI8MCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJ0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzXCIpfWlmKHQ8MHx8dD49dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIik7aWYoZjwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwic291cmNlRW5kIG91dCBvZiBib3VuZHNcIik7aWYoZj50aGlzLmxlbmd0aClmPXRoaXMubGVuZ3RoO2lmKGUubGVuZ3RoLXI8Zi10KXtmPWUubGVuZ3RoLXIrdH12YXIgbj1mLXQ7aWYodGhpcz09PWUmJnR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5jb3B5V2l0aGluPT09XCJmdW5jdGlvblwiKXt0aGlzLmNvcHlXaXRoaW4ocix0LGYpfWVsc2UgaWYodGhpcz09PWUmJnQ8ciYmcjxmKXtmb3IodmFyIGk9bi0xO2k+PTA7LS1pKXtlW2krcl09dGhpc1tpK3RdfX1lbHNle1VpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKGUsdGhpcy5zdWJhcnJheSh0LGYpLHIpfXJldHVybiBufTtCdWZmZXIucHJvdG90eXBlLmZpbGw9ZnVuY3Rpb24gZmlsbChlLHIsdCxmKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe2lmKHR5cGVvZiByPT09XCJzdHJpbmdcIil7Zj1yO3I9MDt0PXRoaXMubGVuZ3RofWVsc2UgaWYodHlwZW9mIHQ9PT1cInN0cmluZ1wiKXtmPXQ7dD10aGlzLmxlbmd0aH1pZihmIT09dW5kZWZpbmVkJiZ0eXBlb2YgZiE9PVwic3RyaW5nXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJlbmNvZGluZyBtdXN0IGJlIGEgc3RyaW5nXCIpfWlmKHR5cGVvZiBmPT09XCJzdHJpbmdcIiYmIUJ1ZmZlci5pc0VuY29kaW5nKGYpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrZil9aWYoZS5sZW5ndGg9PT0xKXt2YXIgbj1lLmNoYXJDb2RlQXQoMCk7aWYoZj09PVwidXRmOFwiJiZuPDEyOHx8Zj09PVwibGF0aW4xXCIpe2U9bn19fWVsc2UgaWYodHlwZW9mIGU9PT1cIm51bWJlclwiKXtlPWUmMjU1fWVsc2UgaWYodHlwZW9mIGU9PT1cImJvb2xlYW5cIil7ZT1OdW1iZXIoZSl9aWYocjwwfHx0aGlzLmxlbmd0aDxyfHx0aGlzLmxlbmd0aDx0KXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKX1pZih0PD1yKXtyZXR1cm4gdGhpc31yPXI+Pj4wO3Q9dD09PXVuZGVmaW5lZD90aGlzLmxlbmd0aDp0Pj4+MDtpZighZSllPTA7dmFyIGk7aWYodHlwZW9mIGU9PT1cIm51bWJlclwiKXtmb3IoaT1yO2k8dDsrK2kpe3RoaXNbaV09ZX19ZWxzZXt2YXIgbz1CdWZmZXIuaXNCdWZmZXIoZSk/ZTpCdWZmZXIuZnJvbShlLGYpO3ZhciB1PW8ubGVuZ3RoO2lmKHU9PT0wKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIGFyZ3VtZW50IFwidmFsdWVcIicpfWZvcihpPTA7aTx0LXI7KytpKXt0aGlzW2krcl09b1tpJXVdfX1yZXR1cm4gdGhpc307dmFyIGE9L1teKy8wLTlBLVphLXotX10vZztmdW5jdGlvbiBiYXNlNjRjbGVhbihlKXtlPWUuc3BsaXQoXCI9XCIpWzBdO2U9ZS50cmltKCkucmVwbGFjZShhLFwiXCIpO2lmKGUubGVuZ3RoPDIpcmV0dXJuXCJcIjt3aGlsZShlLmxlbmd0aCU0IT09MCl7ZT1lK1wiPVwifXJldHVybiBlfWZ1bmN0aW9uIHV0ZjhUb0J5dGVzKGUscil7cj1yfHxJbmZpbml0eTt2YXIgdDt2YXIgZj1lLmxlbmd0aDt2YXIgbj1udWxsO3ZhciBpPVtdO2Zvcih2YXIgbz0wO288ZjsrK28pe3Q9ZS5jaGFyQ29kZUF0KG8pO2lmKHQ+NTUyOTUmJnQ8NTczNDQpe2lmKCFuKXtpZih0PjU2MzE5KXtpZigoci09Myk+LTEpaS5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1lbHNlIGlmKG8rMT09PWYpe2lmKChyLT0zKT4tMSlpLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfW49dDtjb250aW51ZX1pZih0PDU2MzIwKXtpZigoci09Myk+LTEpaS5wdXNoKDIzOSwxOTEsMTg5KTtuPXQ7Y29udGludWV9dD0obi01NTI5Njw8MTB8dC01NjMyMCkrNjU1MzZ9ZWxzZSBpZihuKXtpZigoci09Myk+LTEpaS5wdXNoKDIzOSwxOTEsMTg5KX1uPW51bGw7aWYodDwxMjgpe2lmKChyLT0xKTwwKWJyZWFrO2kucHVzaCh0KX1lbHNlIGlmKHQ8MjA0OCl7aWYoKHItPTIpPDApYnJlYWs7aS5wdXNoKHQ+PjZ8MTkyLHQmNjN8MTI4KX1lbHNlIGlmKHQ8NjU1MzYpe2lmKChyLT0zKTwwKWJyZWFrO2kucHVzaCh0Pj4xMnwyMjQsdD4+NiY2M3wxMjgsdCY2M3wxMjgpfWVsc2UgaWYodDwxMTE0MTEyKXtpZigoci09NCk8MClicmVhaztpLnB1c2godD4+MTh8MjQwLHQ+PjEyJjYzfDEyOCx0Pj42JjYzfDEyOCx0JjYzfDEyOCl9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvZGUgcG9pbnRcIil9fXJldHVybiBpfWZ1bmN0aW9uIGFzY2lpVG9CeXRlcyhlKXt2YXIgcj1bXTtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoOysrdCl7ci5wdXNoKGUuY2hhckNvZGVBdCh0KSYyNTUpfXJldHVybiByfWZ1bmN0aW9uIHV0ZjE2bGVUb0J5dGVzKGUscil7dmFyIHQsZixuO3ZhciBpPVtdO2Zvcih2YXIgbz0wO288ZS5sZW5ndGg7KytvKXtpZigoci09Mik8MClicmVhazt0PWUuY2hhckNvZGVBdChvKTtmPXQ+Pjg7bj10JTI1NjtpLnB1c2gobik7aS5wdXNoKGYpfXJldHVybiBpfWZ1bmN0aW9uIGJhc2U2NFRvQnl0ZXMoZSl7cmV0dXJuIGYudG9CeXRlQXJyYXkoYmFzZTY0Y2xlYW4oZSkpfWZ1bmN0aW9uIGJsaXRCdWZmZXIoZSxyLHQsZil7Zm9yKHZhciBuPTA7bjxmOysrbil7aWYobit0Pj1yLmxlbmd0aHx8bj49ZS5sZW5ndGgpYnJlYWs7cltuK3RdPWVbbl19cmV0dXJuIG59ZnVuY3Rpb24gaXNJbnN0YW5jZShlLHIpe3JldHVybiBlIGluc3RhbmNlb2Ygcnx8ZSE9bnVsbCYmZS5jb25zdHJ1Y3RvciE9bnVsbCYmZS5jb25zdHJ1Y3Rvci5uYW1lIT1udWxsJiZlLmNvbnN0cnVjdG9yLm5hbWU9PT1yLm5hbWV9ZnVuY3Rpb24gbnVtYmVySXNOYU4oZSl7cmV0dXJuIGUhPT1lfXZhciBzPWZ1bmN0aW9uKCl7dmFyIGU9XCIwMTIzNDU2Nzg5YWJjZGVmXCI7dmFyIHI9bmV3IEFycmF5KDI1Nik7Zm9yKHZhciB0PTA7dDwxNjsrK3Qpe3ZhciBmPXQqMTY7Zm9yKHZhciBuPTA7bjwxNjsrK24pe3JbZituXT1lW3RdK2Vbbl19fXJldHVybiByfSgpfSw3ODM6ZnVuY3Rpb24oZSxyKXtcbi8qISBpZWVlNzU0LiBCU0QtMy1DbGF1c2UgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG5yLnJlYWQ9ZnVuY3Rpb24oZSxyLHQsZixuKXt2YXIgaSxvO3ZhciB1PW4qOC1mLTE7dmFyIGE9KDE8PHUpLTE7dmFyIHM9YT4+MTt2YXIgaD0tNzt2YXIgYz10P24tMTowO3ZhciBsPXQ/LTE6MTt2YXIgcD1lW3IrY107Yys9bDtpPXAmKDE8PC1oKS0xO3A+Pj0taDtoKz11O2Zvcig7aD4wO2k9aSoyNTYrZVtyK2NdLGMrPWwsaC09OCl7fW89aSYoMTw8LWgpLTE7aT4+PS1oO2grPWY7Zm9yKDtoPjA7bz1vKjI1NitlW3IrY10sYys9bCxoLT04KXt9aWYoaT09PTApe2k9MS1zfWVsc2UgaWYoaT09PWEpe3JldHVybiBvP05hTjoocD8tMToxKSpJbmZpbml0eX1lbHNle289bytNYXRoLnBvdygyLGYpO2k9aS1zfXJldHVybihwPy0xOjEpKm8qTWF0aC5wb3coMixpLWYpfTtyLndyaXRlPWZ1bmN0aW9uKGUscix0LGYsbixpKXt2YXIgbyx1LGE7dmFyIHM9aSo4LW4tMTt2YXIgaD0oMTw8cyktMTt2YXIgYz1oPj4xO3ZhciBsPW49PT0yMz9NYXRoLnBvdygyLC0yNCktTWF0aC5wb3coMiwtNzcpOjA7dmFyIHA9Zj8wOmktMTt2YXIgeT1mPzE6LTE7dmFyIGc9cjwwfHxyPT09MCYmMS9yPDA/MTowO3I9TWF0aC5hYnMocik7aWYoaXNOYU4ocil8fHI9PT1JbmZpbml0eSl7dT1pc05hTihyKT8xOjA7bz1ofWVsc2V7bz1NYXRoLmZsb29yKE1hdGgubG9nKHIpL01hdGguTE4yKTtpZihyKihhPU1hdGgucG93KDIsLW8pKTwxKXtvLS07YSo9Mn1pZihvK2M+PTEpe3IrPWwvYX1lbHNle3IrPWwqTWF0aC5wb3coMiwxLWMpfWlmKHIqYT49Mil7bysrO2EvPTJ9aWYobytjPj1oKXt1PTA7bz1ofWVsc2UgaWYobytjPj0xKXt1PShyKmEtMSkqTWF0aC5wb3coMixuKTtvPW8rY31lbHNle3U9cipNYXRoLnBvdygyLGMtMSkqTWF0aC5wb3coMixuKTtvPTB9fWZvcig7bj49ODtlW3QrcF09dSYyNTUscCs9eSx1Lz0yNTYsbi09OCl7fW89bzw8bnx1O3MrPW47Zm9yKDtzPjA7ZVt0K3BdPW8mMjU1LHArPXksby89MjU2LHMtPTgpe31lW3QrcC15XXw9ZyoxMjh9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyh0KXt2YXIgZj1yW3RdO2lmKGYhPT11bmRlZmluZWQpe3JldHVybiBmLmV4cG9ydHN9dmFyIG49clt0XT17ZXhwb3J0czp7fX07dmFyIGk9dHJ1ZTt0cnl7ZVt0XShuLG4uZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtpPWZhbHNlfWZpbmFsbHl7aWYoaSlkZWxldGUgclt0XX1yZXR1cm4gbi5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgdD1fX25jY3dwY2tfcmVxdWlyZV9fKDcyKTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/CJSImportProcessor.js":
/*!*************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/CJSImportProcessor.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CJSImportProcessor; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/getImportExportSpecifierInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getImportExportSpecifierInfo.js\");\n/* harmony import */ var _util_getNonTypeIdentifiers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/getNonTypeIdentifiers */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getNonTypeIdentifiers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Class responsible for preprocessing and bookkeeping import and export declarations within the\n * file.\n *\n * TypeScript uses a simpler mechanism that does not use functions like interopRequireDefault and\n * interopRequireWildcard, so we also allow that mode for compatibility.\n */\nclass CJSImportProcessor {\n   __init() {this.nonTypeIdentifiers = new Set()}\n   __init2() {this.importInfoByPath = new Map()}\n   __init3() {this.importsToReplace = new Map()}\n   __init4() {this.identifierReplacements = new Map()}\n   __init5() {this.exportBindingsByLocalName = new Map()}\n\n  constructor(\n     nameManager,\n     tokens,\n     enableLegacyTypeScriptModuleInterop,\n     options,\n     isTypeScriptTransformEnabled,\n     keepUnusedImports,\n     helperManager,\n  ) {;this.nameManager = nameManager;this.tokens = tokens;this.enableLegacyTypeScriptModuleInterop = enableLegacyTypeScriptModuleInterop;this.options = options;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.keepUnusedImports = keepUnusedImports;this.helperManager = helperManager;CJSImportProcessor.prototype.__init.call(this);CJSImportProcessor.prototype.__init2.call(this);CJSImportProcessor.prototype.__init3.call(this);CJSImportProcessor.prototype.__init4.call(this);CJSImportProcessor.prototype.__init5.call(this);}\n\n  preprocessTokens() {\n    for (let i = 0; i < this.tokens.tokens.length; i++) {\n      if (\n        this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import) &&\n        !this.tokens.matches3AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)\n      ) {\n        this.preprocessImportAtIndex(i);\n      }\n      if (\n        this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export) &&\n        !this.tokens.matches2AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)\n      ) {\n        this.preprocessExportAtIndex(i);\n      }\n    }\n    this.generateImportReplacements();\n  }\n\n  /**\n   * In TypeScript, import statements that only import types should be removed.\n   * This includes `import {} from 'foo';`, but not `import 'foo';`.\n   */\n  pruneTypeOnlyImports() {\n    this.nonTypeIdentifiers = (0,_util_getNonTypeIdentifiers__WEBPACK_IMPORTED_MODULE_4__.getNonTypeIdentifiers)(this.tokens, this.options);\n    for (const [path, importInfo] of this.importInfoByPath.entries()) {\n      if (\n        importInfo.hasBareImport ||\n        importInfo.hasStarExport ||\n        importInfo.exportStarNames.length > 0 ||\n        importInfo.namedExports.length > 0\n      ) {\n        continue;\n      }\n      const names = [\n        ...importInfo.defaultNames,\n        ...importInfo.wildcardNames,\n        ...importInfo.namedImports.map(({localName}) => localName),\n      ];\n      if (names.every((name) => this.shouldAutomaticallyElideImportedName(name))) {\n        this.importsToReplace.set(path, \"\");\n      }\n    }\n  }\n\n  shouldAutomaticallyElideImportedName(name) {\n    return (\n      this.isTypeScriptTransformEnabled &&\n      !this.keepUnusedImports &&\n      !this.nonTypeIdentifiers.has(name)\n    );\n  }\n\n   generateImportReplacements() {\n    for (const [path, importInfo] of this.importInfoByPath.entries()) {\n      const {\n        defaultNames,\n        wildcardNames,\n        namedImports,\n        namedExports,\n        exportStarNames,\n        hasStarExport,\n      } = importInfo;\n\n      if (\n        defaultNames.length === 0 &&\n        wildcardNames.length === 0 &&\n        namedImports.length === 0 &&\n        namedExports.length === 0 &&\n        exportStarNames.length === 0 &&\n        !hasStarExport\n      ) {\n        // Import is never used, so don't even assign a name.\n        this.importsToReplace.set(path, `require('${path}');`);\n        continue;\n      }\n\n      const primaryImportName = this.getFreeIdentifierForPath(path);\n      let secondaryImportName;\n      if (this.enableLegacyTypeScriptModuleInterop) {\n        secondaryImportName = primaryImportName;\n      } else {\n        secondaryImportName =\n          wildcardNames.length > 0 ? wildcardNames[0] : this.getFreeIdentifierForPath(path);\n      }\n      let requireCode = `var ${primaryImportName} = require('${path}');`;\n      if (wildcardNames.length > 0) {\n        for (const wildcardName of wildcardNames) {\n          const moduleExpr = this.enableLegacyTypeScriptModuleInterop\n            ? primaryImportName\n            : `${this.helperManager.getHelperName(\"interopRequireWildcard\")}(${primaryImportName})`;\n          requireCode += ` var ${wildcardName} = ${moduleExpr};`;\n        }\n      } else if (exportStarNames.length > 0 && secondaryImportName !== primaryImportName) {\n        requireCode += ` var ${secondaryImportName} = ${this.helperManager.getHelperName(\n          \"interopRequireWildcard\",\n        )}(${primaryImportName});`;\n      } else if (defaultNames.length > 0 && secondaryImportName !== primaryImportName) {\n        requireCode += ` var ${secondaryImportName} = ${this.helperManager.getHelperName(\n          \"interopRequireDefault\",\n        )}(${primaryImportName});`;\n      }\n\n      for (const {importedName, localName} of namedExports) {\n        requireCode += ` ${this.helperManager.getHelperName(\n          \"createNamedExportFrom\",\n        )}(${primaryImportName}, '${localName}', '${importedName}');`;\n      }\n      for (const exportStarName of exportStarNames) {\n        requireCode += ` exports.${exportStarName} = ${secondaryImportName};`;\n      }\n      if (hasStarExport) {\n        requireCode += ` ${this.helperManager.getHelperName(\n          \"createStarExport\",\n        )}(${primaryImportName});`;\n      }\n\n      this.importsToReplace.set(path, requireCode);\n\n      for (const defaultName of defaultNames) {\n        this.identifierReplacements.set(defaultName, `${secondaryImportName}.default`);\n      }\n      for (const {importedName, localName} of namedImports) {\n        this.identifierReplacements.set(localName, `${primaryImportName}.${importedName}`);\n      }\n    }\n  }\n\n  getFreeIdentifierForPath(path) {\n    const components = path.split(\"/\");\n    const lastComponent = components[components.length - 1];\n    const baseName = lastComponent.replace(/\\W/g, \"\");\n    return this.nameManager.claimFreeName(`_${baseName}`);\n  }\n\n   preprocessImportAtIndex(index) {\n    const defaultNames = [];\n    const wildcardNames = [];\n    const namedImports = [];\n\n    index++;\n    if (\n      (this.tokens.matchesContextualAtIndex(index, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type) ||\n        this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._typeof)) &&\n      !this.tokens.matches1AtIndex(index + 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) &&\n      !this.tokens.matchesContextualAtIndex(index + 1, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._from)\n    ) {\n      // import type declaration, so no need to process anything.\n      return;\n    }\n\n    if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n      // Dynamic import, so nothing to do\n      return;\n    }\n\n    if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n      defaultNames.push(this.tokens.identifierNameAtIndex(index));\n      index++;\n      if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma)) {\n        index++;\n      }\n    }\n\n    if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star)) {\n      // * as\n      index += 2;\n      wildcardNames.push(this.tokens.identifierNameAtIndex(index));\n      index++;\n    }\n\n    if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n      const result = this.getNamedImports(index + 1);\n      index = result.newIndex;\n\n      for (const namedImport of result.namedImports) {\n        // Treat {default as X} as a default import to ensure usage of require interop helper\n        if (namedImport.importedName === \"default\") {\n          defaultNames.push(namedImport.localName);\n        } else {\n          namedImports.push(namedImport);\n        }\n      }\n    }\n\n    if (this.tokens.matchesContextualAtIndex(index, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._from)) {\n      index++;\n    }\n\n    if (!this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n      throw new Error(\"Expected string token at the end of import statement.\");\n    }\n    const path = this.tokens.stringValueAtIndex(index);\n    const importInfo = this.getImportInfo(path);\n    importInfo.defaultNames.push(...defaultNames);\n    importInfo.wildcardNames.push(...wildcardNames);\n    importInfo.namedImports.push(...namedImports);\n    if (defaultNames.length === 0 && wildcardNames.length === 0 && namedImports.length === 0) {\n      importInfo.hasBareImport = true;\n    }\n  }\n\n   preprocessExportAtIndex(index) {\n    if (\n      this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var) ||\n      this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._let) ||\n      this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const)\n    ) {\n      this.preprocessVarExportAtIndex(index);\n    } else if (\n      this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function) ||\n      this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class)\n    ) {\n      const exportName = this.tokens.identifierNameAtIndex(index + 2);\n      this.addExportBinding(exportName, exportName);\n    } else if (this.tokens.matches3AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function)) {\n      const exportName = this.tokens.identifierNameAtIndex(index + 3);\n      this.addExportBinding(exportName, exportName);\n    } else if (this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n      this.preprocessNamedExportAtIndex(index);\n    } else if (this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star)) {\n      this.preprocessExportStarAtIndex(index);\n    }\n  }\n\n   preprocessVarExportAtIndex(index) {\n    let depth = 0;\n    // Handle cases like `export let {x} = y;`, starting at the open-brace in that case.\n    for (let i = index + 2; ; i++) {\n      if (\n        this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) ||\n        this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dollarBraceL) ||\n        this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)\n      ) {\n        depth++;\n      } else if (\n        this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) ||\n        this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR)\n      ) {\n        depth--;\n      } else if (depth === 0 && !this.tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n        break;\n      } else if (this.tokens.matches1AtIndex(1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n        const endIndex = this.tokens.currentToken().rhsEndIndex;\n        if (endIndex == null) {\n          throw new Error(\"Expected = token with an end index.\");\n        }\n        i = endIndex - 1;\n      } else {\n        const token = this.tokens.tokens[i];\n        if ((0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isDeclaration)(token)) {\n          const exportName = this.tokens.identifierNameAtIndex(i);\n          this.identifierReplacements.set(exportName, `exports.${exportName}`);\n        }\n      }\n    }\n  }\n\n  /**\n   * Walk this export statement just in case it's an export...from statement.\n   * If it is, combine it into the import info for that path. Otherwise, just\n   * bail out; it'll be handled later.\n   */\n   preprocessNamedExportAtIndex(index) {\n    // export {\n    index += 2;\n    const {newIndex, namedImports} = this.getNamedImports(index);\n    index = newIndex;\n\n    if (this.tokens.matchesContextualAtIndex(index, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._from)) {\n      index++;\n    } else {\n      // Reinterpret \"a as b\" to be local/exported rather than imported/local.\n      for (const {importedName: localName, localName: exportedName} of namedImports) {\n        this.addExportBinding(localName, exportedName);\n      }\n      return;\n    }\n\n    if (!this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n      throw new Error(\"Expected string token at the end of import statement.\");\n    }\n    const path = this.tokens.stringValueAtIndex(index);\n    const importInfo = this.getImportInfo(path);\n    importInfo.namedExports.push(...namedImports);\n  }\n\n   preprocessExportStarAtIndex(index) {\n    let exportedName = null;\n    if (this.tokens.matches3AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._as)) {\n      // export * as\n      index += 3;\n      exportedName = this.tokens.identifierNameAtIndex(index);\n      // foo from\n      index += 2;\n    } else {\n      // export * from\n      index += 3;\n    }\n    if (!this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n      throw new Error(\"Expected string token at the end of star export statement.\");\n    }\n    const path = this.tokens.stringValueAtIndex(index);\n    const importInfo = this.getImportInfo(path);\n    if (exportedName !== null) {\n      importInfo.exportStarNames.push(exportedName);\n    } else {\n      importInfo.hasStarExport = true;\n    }\n  }\n\n   getNamedImports(index) {\n    const namedImports = [];\n    while (true) {\n      if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n        index++;\n        break;\n      }\n\n      const specifierInfo = (0,_util_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.tokens, index);\n      index = specifierInfo.endIndex;\n      if (!specifierInfo.isType) {\n        namedImports.push({\n          importedName: specifierInfo.leftName,\n          localName: specifierInfo.rightName,\n        });\n      }\n\n      if (this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n        index += 2;\n        break;\n      } else if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n        index++;\n        break;\n      } else if (this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma)) {\n        index++;\n      } else {\n        throw new Error(`Unexpected token: ${JSON.stringify(this.tokens.tokens[index])}`);\n      }\n    }\n    return {newIndex: index, namedImports};\n  }\n\n  /**\n   * Get a mutable import info object for this path, creating one if it doesn't\n   * exist yet.\n   */\n   getImportInfo(path) {\n    const existingInfo = this.importInfoByPath.get(path);\n    if (existingInfo) {\n      return existingInfo;\n    }\n    const newInfo = {\n      defaultNames: [],\n      wildcardNames: [],\n      namedImports: [],\n      namedExports: [],\n      hasBareImport: false,\n      exportStarNames: [],\n      hasStarExport: false,\n    };\n    this.importInfoByPath.set(path, newInfo);\n    return newInfo;\n  }\n\n   addExportBinding(localName, exportedName) {\n    if (!this.exportBindingsByLocalName.has(localName)) {\n      this.exportBindingsByLocalName.set(localName, []);\n    }\n    this.exportBindingsByLocalName.get(localName).push(exportedName);\n  }\n\n  /**\n   * Return the code to use for the import for this path, or the empty string if\n   * the code has already been \"claimed\" by a previous import.\n   */\n  claimImportCode(importPath) {\n    const result = this.importsToReplace.get(importPath);\n    this.importsToReplace.set(importPath, \"\");\n    return result || \"\";\n  }\n\n  getIdentifierReplacement(identifierName) {\n    return this.identifierReplacements.get(identifierName) || null;\n  }\n\n  /**\n   * Return a string like `exports.foo = exports.bar`.\n   */\n  resolveExportBinding(assignedName) {\n    const exportedNames = this.exportBindingsByLocalName.get(assignedName);\n    if (!exportedNames || exportedNames.length === 0) {\n      return null;\n    }\n    return exportedNames.map((exportedName) => `exports.${exportedName}`).join(\" = \");\n  }\n\n  /**\n   * Return all imported/exported names where we might be interested in whether usages of those\n   * names are shadowed.\n   */\n  getGlobalNames() {\n    return new Set([\n      ...this.identifierReplacements.keys(),\n      ...this.exportBindingsByLocalName.keys(),\n    ]);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/CJSImportProcessor.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/HelperManager.js":
/*!********************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/HelperManager.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HelperManager: function() { return /* binding */ HelperManager; }\n/* harmony export */ });\n\n\nconst HELPERS = {\n  require: `\n    import {createRequire as CREATE_REQUIRE_NAME} from \"module\";\n    const require = CREATE_REQUIRE_NAME(import.meta.url);\n  `,\n  interopRequireWildcard: `\n    function interopRequireWildcard(obj) {\n      if (obj && obj.__esModule) {\n        return obj;\n      } else {\n        var newObj = {};\n        if (obj != null) {\n          for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n              newObj[key] = obj[key];\n            }\n          }\n        }\n        newObj.default = obj;\n        return newObj;\n      }\n    }\n  `,\n  interopRequireDefault: `\n    function interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n  `,\n  createNamedExportFrom: `\n    function createNamedExportFrom(obj, localName, importedName) {\n      Object.defineProperty(exports, localName, {enumerable: true, configurable: true, get: () => obj[importedName]});\n    }\n  `,\n  // Note that TypeScript and Babel do this differently; TypeScript does a simple existence\n  // check in the exports object and does a plain assignment, whereas Babel uses\n  // defineProperty and builds an object of explicitly-exported names so that star exports can\n  // always take lower precedence. For now, we do the easier TypeScript thing.\n  createStarExport: `\n    function createStarExport(obj) {\n      Object.keys(obj)\n        .filter((key) => key !== \"default\" && key !== \"__esModule\")\n        .forEach((key) => {\n          if (exports.hasOwnProperty(key)) {\n            return;\n          }\n          Object.defineProperty(exports, key, {enumerable: true, configurable: true, get: () => obj[key]});\n        });\n    }\n  `,\n  nullishCoalesce: `\n    function nullishCoalesce(lhs, rhsFn) {\n      if (lhs != null) {\n        return lhs;\n      } else {\n        return rhsFn();\n      }\n    }\n  `,\n  asyncNullishCoalesce: `\n    async function asyncNullishCoalesce(lhs, rhsFn) {\n      if (lhs != null) {\n        return lhs;\n      } else {\n        return await rhsFn();\n      }\n    }\n  `,\n  optionalChain: `\n    function optionalChain(ops) {\n      let lastAccessLHS = undefined;\n      let value = ops[0];\n      let i = 1;\n      while (i < ops.length) {\n        const op = ops[i];\n        const fn = ops[i + 1];\n        i += 2;\n        if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n          return undefined;\n        }\n        if (op === 'access' || op === 'optionalAccess') {\n          lastAccessLHS = value;\n          value = fn(value);\n        } else if (op === 'call' || op === 'optionalCall') {\n          value = fn((...args) => value.call(lastAccessLHS, ...args));\n          lastAccessLHS = undefined;\n        }\n      }\n      return value;\n    }\n  `,\n  asyncOptionalChain: `\n    async function asyncOptionalChain(ops) {\n      let lastAccessLHS = undefined;\n      let value = ops[0];\n      let i = 1;\n      while (i < ops.length) {\n        const op = ops[i];\n        const fn = ops[i + 1];\n        i += 2;\n        if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n          return undefined;\n        }\n        if (op === 'access' || op === 'optionalAccess') {\n          lastAccessLHS = value;\n          value = await fn(value);\n        } else if (op === 'call' || op === 'optionalCall') {\n          value = await fn((...args) => value.call(lastAccessLHS, ...args));\n          lastAccessLHS = undefined;\n        }\n      }\n      return value;\n    }\n  `,\n  optionalChainDelete: `\n    function optionalChainDelete(ops) {\n      const result = OPTIONAL_CHAIN_NAME(ops);\n      return result == null ? true : result;\n    }\n  `,\n  asyncOptionalChainDelete: `\n    async function asyncOptionalChainDelete(ops) {\n      const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\n      return result == null ? true : result;\n    }\n  `,\n};\n\nclass HelperManager {\n  __init() {this.helperNames = {}}\n  __init2() {this.createRequireName = null}\n  constructor( nameManager) {;this.nameManager = nameManager;HelperManager.prototype.__init.call(this);HelperManager.prototype.__init2.call(this);}\n\n  getHelperName(baseName) {\n    let helperName = this.helperNames[baseName];\n    if (helperName) {\n      return helperName;\n    }\n    helperName = this.nameManager.claimFreeName(`_${baseName}`);\n    this.helperNames[baseName] = helperName;\n    return helperName;\n  }\n\n  emitHelpers() {\n    let resultCode = \"\";\n    if (this.helperNames.optionalChainDelete) {\n      this.getHelperName(\"optionalChain\");\n    }\n    if (this.helperNames.asyncOptionalChainDelete) {\n      this.getHelperName(\"asyncOptionalChain\");\n    }\n    for (const [baseName, helperCodeTemplate] of Object.entries(HELPERS)) {\n      const helperName = this.helperNames[baseName];\n      let helperCode = helperCodeTemplate;\n      if (baseName === \"optionalChainDelete\") {\n        helperCode = helperCode.replace(\"OPTIONAL_CHAIN_NAME\", this.helperNames.optionalChain);\n      } else if (baseName === \"asyncOptionalChainDelete\") {\n        helperCode = helperCode.replace(\n          \"ASYNC_OPTIONAL_CHAIN_NAME\",\n          this.helperNames.asyncOptionalChain,\n        );\n      } else if (baseName === \"require\") {\n        if (this.createRequireName === null) {\n          this.createRequireName = this.nameManager.claimFreeName(\"_createRequire\");\n        }\n        helperCode = helperCode.replace(/CREATE_REQUIRE_NAME/g, this.createRequireName);\n      }\n      if (helperName) {\n        resultCode += \" \";\n        resultCode += helperCode.replace(baseName, helperName).replace(/\\s+/g, \" \").trim();\n      }\n    }\n    return resultCode;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/HelperManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/NameManager.js":
/*!******************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/NameManager.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ NameManager; }\n/* harmony export */ });\n/* harmony import */ var _util_getIdentifierNames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/getIdentifierNames */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getIdentifierNames.js\");\n\n\n\nclass NameManager {\n    __init() {this.usedNames = new Set()}\n\n  constructor(code, tokens) {;NameManager.prototype.__init.call(this);\n    this.usedNames = new Set((0,_util_getIdentifierNames__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(code, tokens));\n  }\n\n  claimFreeName(name) {\n    const newName = this.findFreeName(name);\n    this.usedNames.add(newName);\n    return newName;\n  }\n\n  findFreeName(name) {\n    if (!this.usedNames.has(name)) {\n      return name;\n    }\n    let suffixNum = 2;\n    while (this.usedNames.has(name + String(suffixNum))) {\n      suffixNum++;\n    }\n    return name + String(suffixNum);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL05hbWVNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUMyRDs7QUFFNUM7QUFDZixjQUFjOztBQUVkLDhCQUE4QjtBQUM5Qiw2QkFBNkIsb0VBQWtCO0FBQy9DOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS9OYW1lTWFuYWdlci5qcz84MTBlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IGdldElkZW50aWZpZXJOYW1lcyBmcm9tIFwiLi91dGlsL2dldElkZW50aWZpZXJOYW1lc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYW1lTWFuYWdlciB7XG4gICAgX19pbml0KCkge3RoaXMudXNlZE5hbWVzID0gbmV3IFNldCgpfVxuXG4gIGNvbnN0cnVjdG9yKGNvZGUsIHRva2VucykgeztOYW1lTWFuYWdlci5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7XG4gICAgdGhpcy51c2VkTmFtZXMgPSBuZXcgU2V0KGdldElkZW50aWZpZXJOYW1lcyhjb2RlLCB0b2tlbnMpKTtcbiAgfVxuXG4gIGNsYWltRnJlZU5hbWUobmFtZSkge1xuICAgIGNvbnN0IG5ld05hbWUgPSB0aGlzLmZpbmRGcmVlTmFtZShuYW1lKTtcbiAgICB0aGlzLnVzZWROYW1lcy5hZGQobmV3TmFtZSk7XG4gICAgcmV0dXJuIG5ld05hbWU7XG4gIH1cblxuICBmaW5kRnJlZU5hbWUobmFtZSkge1xuICAgIGlmICghdGhpcy51c2VkTmFtZXMuaGFzKG5hbWUpKSB7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9XG4gICAgbGV0IHN1ZmZpeE51bSA9IDI7XG4gICAgd2hpbGUgKHRoaXMudXNlZE5hbWVzLmhhcyhuYW1lICsgU3RyaW5nKHN1ZmZpeE51bSkpKSB7XG4gICAgICBzdWZmaXhOdW0rKztcbiAgICB9XG4gICAgcmV0dXJuIG5hbWUgKyBTdHJpbmcoc3VmZml4TnVtKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/NameManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/Options-gen-types.js":
/*!************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/Options-gen-types.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Options: function() { return /* binding */ Options; },\n/* harmony export */   SourceMapOptions: function() { return /* binding */ SourceMapOptions; },\n/* harmony export */   Transform: function() { return /* binding */ Transform; }\n/* harmony export */ });\n/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ \"(app-pages-browser)/./node_modules/ts-interface-checker/dist/index.js\");\n/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * This module was automatically generated by `ts-interface-builder`\n */\n\n// tslint:disable:object-literal-key-quotes\n\nconst Transform = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union(\n  ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"jsx\"),\n  ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"typescript\"),\n  ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"flow\"),\n  ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"imports\"),\n  ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"react-hot-loader\"),\n  ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"jest\"),\n);\n\nconst SourceMapOptions = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {\n  compiledFilename: \"string\",\n});\n\nconst Options = ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.iface([], {\n  transforms: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.array(\"Transform\"),\n  disableESTransforms: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"boolean\"),\n  jsxRuntime: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.union(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"classic\"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"automatic\"), ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.lit(\"preserve\"))),\n  production: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"boolean\"),\n  jsxImportSource: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"string\"),\n  jsxPragma: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"string\"),\n  jsxFragmentPragma: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"string\"),\n  keepUnusedImports: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"boolean\"),\n  preserveDynamicImport: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"boolean\"),\n  injectCreateRequireForImportRequire: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"boolean\"),\n  enableLegacyTypeScriptModuleInterop: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"boolean\"),\n  enableLegacyBabel5ModuleInterop: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"boolean\"),\n  sourceMapOptions: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"SourceMapOptions\"),\n  filePath: ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.opt(\"string\"),\n});\n\nconst exportedTypeSuite = {\n  Transform,\n  SourceMapOptions,\n  Options,\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (exportedTypeSuite);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL09wdGlvbnMtZ2VuLXR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQzBDO0FBQzFDOztBQUVPLGtCQUFrQix1REFBTztBQUNoQyxFQUFFLHFEQUFLO0FBQ1AsRUFBRSxxREFBSztBQUNQLEVBQUUscURBQUs7QUFDUCxFQUFFLHFEQUFLO0FBQ1AsRUFBRSxxREFBSztBQUNQLEVBQUUscURBQUs7QUFDUDs7QUFFTyx5QkFBeUIsdURBQU87QUFDdkM7QUFDQSxDQUFDOztBQUVNLGdCQUFnQix1REFBTztBQUM5QixjQUFjLHVEQUFPO0FBQ3JCLHVCQUF1QixxREFBSztBQUM1QixjQUFjLHFEQUFLLENBQUMsdURBQU8sQ0FBQyxxREFBSyxhQUFhLHFEQUFLLGVBQWUscURBQUs7QUFDdkUsY0FBYyxxREFBSztBQUNuQixtQkFBbUIscURBQUs7QUFDeEIsYUFBYSxxREFBSztBQUNsQixxQkFBcUIscURBQUs7QUFDMUIscUJBQXFCLHFEQUFLO0FBQzFCLHlCQUF5QixxREFBSztBQUM5Qix1Q0FBdUMscURBQUs7QUFDNUMsdUNBQXVDLHFEQUFLO0FBQzVDLG1DQUFtQyxxREFBSztBQUN4QyxvQkFBb0IscURBQUs7QUFDekIsWUFBWSxxREFBSztBQUNqQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBZSxpQkFBaUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS9PcHRpb25zLWdlbi10eXBlcy5qcz8yMmIwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBtb2R1bGUgd2FzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IGB0cy1pbnRlcmZhY2UtYnVpbGRlcmBcbiAqL1xuaW1wb3J0ICogYXMgdCBmcm9tIFwidHMtaW50ZXJmYWNlLWNoZWNrZXJcIjtcbi8vIHRzbGludDpkaXNhYmxlOm9iamVjdC1saXRlcmFsLWtleS1xdW90ZXNcblxuZXhwb3J0IGNvbnN0IFRyYW5zZm9ybSA9IHQudW5pb24oXG4gIHQubGl0KFwianN4XCIpLFxuICB0LmxpdChcInR5cGVzY3JpcHRcIiksXG4gIHQubGl0KFwiZmxvd1wiKSxcbiAgdC5saXQoXCJpbXBvcnRzXCIpLFxuICB0LmxpdChcInJlYWN0LWhvdC1sb2FkZXJcIiksXG4gIHQubGl0KFwiamVzdFwiKSxcbik7XG5cbmV4cG9ydCBjb25zdCBTb3VyY2VNYXBPcHRpb25zID0gdC5pZmFjZShbXSwge1xuICBjb21waWxlZEZpbGVuYW1lOiBcInN0cmluZ1wiLFxufSk7XG5cbmV4cG9ydCBjb25zdCBPcHRpb25zID0gdC5pZmFjZShbXSwge1xuICB0cmFuc2Zvcm1zOiB0LmFycmF5KFwiVHJhbnNmb3JtXCIpLFxuICBkaXNhYmxlRVNUcmFuc2Zvcm1zOiB0Lm9wdChcImJvb2xlYW5cIiksXG4gIGpzeFJ1bnRpbWU6IHQub3B0KHQudW5pb24odC5saXQoXCJjbGFzc2ljXCIpLCB0LmxpdChcImF1dG9tYXRpY1wiKSwgdC5saXQoXCJwcmVzZXJ2ZVwiKSkpLFxuICBwcm9kdWN0aW9uOiB0Lm9wdChcImJvb2xlYW5cIiksXG4gIGpzeEltcG9ydFNvdXJjZTogdC5vcHQoXCJzdHJpbmdcIiksXG4gIGpzeFByYWdtYTogdC5vcHQoXCJzdHJpbmdcIiksXG4gIGpzeEZyYWdtZW50UHJhZ21hOiB0Lm9wdChcInN0cmluZ1wiKSxcbiAga2VlcFVudXNlZEltcG9ydHM6IHQub3B0KFwiYm9vbGVhblwiKSxcbiAgcHJlc2VydmVEeW5hbWljSW1wb3J0OiB0Lm9wdChcImJvb2xlYW5cIiksXG4gIGluamVjdENyZWF0ZVJlcXVpcmVGb3JJbXBvcnRSZXF1aXJlOiB0Lm9wdChcImJvb2xlYW5cIiksXG4gIGVuYWJsZUxlZ2FjeVR5cGVTY3JpcHRNb2R1bGVJbnRlcm9wOiB0Lm9wdChcImJvb2xlYW5cIiksXG4gIGVuYWJsZUxlZ2FjeUJhYmVsNU1vZHVsZUludGVyb3A6IHQub3B0KFwiYm9vbGVhblwiKSxcbiAgc291cmNlTWFwT3B0aW9uczogdC5vcHQoXCJTb3VyY2VNYXBPcHRpb25zXCIpLFxuICBmaWxlUGF0aDogdC5vcHQoXCJzdHJpbmdcIiksXG59KTtcblxuY29uc3QgZXhwb3J0ZWRUeXBlU3VpdGUgPSB7XG4gIFRyYW5zZm9ybSxcbiAgU291cmNlTWFwT3B0aW9ucyxcbiAgT3B0aW9ucyxcbn07XG5leHBvcnQgZGVmYXVsdCBleHBvcnRlZFR5cGVTdWl0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/Options-gen-types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/Options.js":
/*!**************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/Options.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateOptions: function() { return /* binding */ validateOptions; }\n/* harmony export */ });\n/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-interface-checker */ \"(app-pages-browser)/./node_modules/ts-interface-checker/dist/index.js\");\n/* harmony import */ var ts_interface_checker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Options_gen_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Options-gen-types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/Options-gen-types.js\");\n\n\n\n\nconst {Options: OptionsChecker} = (0,ts_interface_checker__WEBPACK_IMPORTED_MODULE_0__.createCheckers)(_Options_gen_types__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction validateOptions(options) {\n  OptionsChecker.strictCheck(options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL09wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDs7QUFFRjs7QUFFbEQsT0FBTyx5QkFBeUIsRUFBRSxvRUFBYyxDQUFDLDBEQUFlOztBQUVoRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0Rk87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL09wdGlvbnMuanM/NjU3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZUNoZWNrZXJzfSBmcm9tIFwidHMtaW50ZXJmYWNlLWNoZWNrZXJcIjtcblxuaW1wb3J0IE9wdGlvbnNHZW5UeXBlcyBmcm9tIFwiLi9PcHRpb25zLWdlbi10eXBlc1wiO1xuXG5jb25zdCB7T3B0aW9uczogT3B0aW9uc0NoZWNrZXJ9ID0gY3JlYXRlQ2hlY2tlcnMoT3B0aW9uc0dlblR5cGVzKTtcblxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVPcHRpb25zKG9wdGlvbnMpIHtcbiAgT3B0aW9uc0NoZWNrZXIuc3RyaWN0Q2hlY2sob3B0aW9ucyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/Options.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/TokenProcessor.js":
/*!*********************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/TokenProcessor.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TokenProcessor; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_isAsyncOperation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isAsyncOperation */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isAsyncOperation.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass TokenProcessor {\n   __init() {this.resultCode = \"\"}\n  // Array mapping input token index to optional string index position in the\n  // output code.\n   __init2() {this.resultMappings = new Array(this.tokens.length)}\n   __init3() {this.tokenIndex = 0}\n\n  constructor(\n     code,\n     tokens,\n     isFlowEnabled,\n     disableESTransforms,\n     helperManager,\n  ) {;this.code = code;this.tokens = tokens;this.isFlowEnabled = isFlowEnabled;this.disableESTransforms = disableESTransforms;this.helperManager = helperManager;TokenProcessor.prototype.__init.call(this);TokenProcessor.prototype.__init2.call(this);TokenProcessor.prototype.__init3.call(this);}\n\n  /**\n   * Snapshot the token state in a way that can be restored later, useful for\n   * things like lookahead.\n   *\n   * resultMappings do not need to be copied since in all use cases, they will\n   * be overwritten anyway after restore.\n   */\n  snapshot() {\n    return {\n      resultCode: this.resultCode,\n      tokenIndex: this.tokenIndex,\n    };\n  }\n\n  restoreToSnapshot(snapshot) {\n    this.resultCode = snapshot.resultCode;\n    this.tokenIndex = snapshot.tokenIndex;\n  }\n\n  /**\n   * Remove and return the code generated since the snapshot, leaving the\n   * current token position in-place. Unlike most TokenProcessor operations,\n   * this operation can result in input/output line number mismatches because\n   * the removed code may contain newlines, so this operation should be used\n   * sparingly.\n   */\n  dangerouslyGetAndRemoveCodeSinceSnapshot(snapshot) {\n    const result = this.resultCode.slice(snapshot.resultCode.length);\n    this.resultCode = snapshot.resultCode;\n    return result;\n  }\n\n  reset() {\n    this.resultCode = \"\";\n    this.resultMappings = new Array(this.tokens.length);\n    this.tokenIndex = 0;\n  }\n\n  matchesContextualAtIndex(index, contextualKeyword) {\n    return (\n      this.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name) &&\n      this.tokens[index].contextualKeyword === contextualKeyword\n    );\n  }\n\n  identifierNameAtIndex(index) {\n    // TODO: We need to process escapes since technically you can have unicode escapes in variable\n    // names.\n    return this.identifierNameForToken(this.tokens[index]);\n  }\n\n  identifierNameAtRelativeIndex(relativeIndex) {\n    return this.identifierNameForToken(this.tokenAtRelativeIndex(relativeIndex));\n  }\n\n  identifierName() {\n    return this.identifierNameForToken(this.currentToken());\n  }\n\n  identifierNameForToken(token) {\n    return this.code.slice(token.start, token.end);\n  }\n\n  rawCodeForToken(token) {\n    return this.code.slice(token.start, token.end);\n  }\n\n  stringValueAtIndex(index) {\n    return this.stringValueForToken(this.tokens[index]);\n  }\n\n  stringValue() {\n    return this.stringValueForToken(this.currentToken());\n  }\n\n  stringValueForToken(token) {\n    // This is used to identify when two imports are the same and to resolve TypeScript enum keys.\n    // Ideally we'd process escapes within the strings, but for now we pretty much take the raw\n    // code.\n    return this.code.slice(token.start + 1, token.end - 1);\n  }\n\n  matches1AtIndex(index, t1) {\n    return this.tokens[index].type === t1;\n  }\n\n  matches2AtIndex(index, t1, t2) {\n    return this.tokens[index].type === t1 && this.tokens[index + 1].type === t2;\n  }\n\n  matches3AtIndex(index, t1, t2, t3) {\n    return (\n      this.tokens[index].type === t1 &&\n      this.tokens[index + 1].type === t2 &&\n      this.tokens[index + 2].type === t3\n    );\n  }\n\n  matches1(t1) {\n    return this.tokens[this.tokenIndex].type === t1;\n  }\n\n  matches2(t1, t2) {\n    return this.tokens[this.tokenIndex].type === t1 && this.tokens[this.tokenIndex + 1].type === t2;\n  }\n\n  matches3(t1, t2, t3) {\n    return (\n      this.tokens[this.tokenIndex].type === t1 &&\n      this.tokens[this.tokenIndex + 1].type === t2 &&\n      this.tokens[this.tokenIndex + 2].type === t3\n    );\n  }\n\n  matches4(t1, t2, t3, t4) {\n    return (\n      this.tokens[this.tokenIndex].type === t1 &&\n      this.tokens[this.tokenIndex + 1].type === t2 &&\n      this.tokens[this.tokenIndex + 2].type === t3 &&\n      this.tokens[this.tokenIndex + 3].type === t4\n    );\n  }\n\n  matches5(t1, t2, t3, t4, t5) {\n    return (\n      this.tokens[this.tokenIndex].type === t1 &&\n      this.tokens[this.tokenIndex + 1].type === t2 &&\n      this.tokens[this.tokenIndex + 2].type === t3 &&\n      this.tokens[this.tokenIndex + 3].type === t4 &&\n      this.tokens[this.tokenIndex + 4].type === t5\n    );\n  }\n\n  matchesContextual(contextualKeyword) {\n    return this.matchesContextualAtIndex(this.tokenIndex, contextualKeyword);\n  }\n\n  matchesContextIdAndLabel(type, contextId) {\n    return this.matches1(type) && this.currentToken().contextId === contextId;\n  }\n\n  previousWhitespaceAndComments() {\n    let whitespaceAndComments = this.code.slice(\n      this.tokenIndex > 0 ? this.tokens[this.tokenIndex - 1].end : 0,\n      this.tokenIndex < this.tokens.length ? this.tokens[this.tokenIndex].start : this.code.length,\n    );\n    if (this.isFlowEnabled) {\n      whitespaceAndComments = whitespaceAndComments.replace(/@flow/g, \"\");\n    }\n    return whitespaceAndComments;\n  }\n\n  replaceToken(newCode) {\n    this.resultCode += this.previousWhitespaceAndComments();\n    this.appendTokenPrefix();\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\n    this.resultCode += newCode;\n    this.appendTokenSuffix();\n    this.tokenIndex++;\n  }\n\n  replaceTokenTrimmingLeftWhitespace(newCode) {\n    this.resultCode += this.previousWhitespaceAndComments().replace(/[^\\r\\n]/g, \"\");\n    this.appendTokenPrefix();\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\n    this.resultCode += newCode;\n    this.appendTokenSuffix();\n    this.tokenIndex++;\n  }\n\n  removeInitialToken() {\n    this.replaceToken(\"\");\n  }\n\n  removeToken() {\n    this.replaceTokenTrimmingLeftWhitespace(\"\");\n  }\n\n  /**\n   * Remove all code until the next }, accounting for balanced braces.\n   */\n  removeBalancedCode() {\n    let braceDepth = 0;\n    while (!this.isAtEnd()) {\n      if (this.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceL)) {\n        braceDepth++;\n      } else if (this.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR)) {\n        if (braceDepth === 0) {\n          return;\n        }\n        braceDepth--;\n      }\n      this.removeToken();\n    }\n  }\n\n  copyExpectedToken(tokenType) {\n    if (this.tokens[this.tokenIndex].type !== tokenType) {\n      throw new Error(`Expected token ${tokenType}`);\n    }\n    this.copyToken();\n  }\n\n  copyToken() {\n    this.resultCode += this.previousWhitespaceAndComments();\n    this.appendTokenPrefix();\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\n    this.resultCode += this.code.slice(\n      this.tokens[this.tokenIndex].start,\n      this.tokens[this.tokenIndex].end,\n    );\n    this.appendTokenSuffix();\n    this.tokenIndex++;\n  }\n\n  copyTokenWithPrefix(prefix) {\n    this.resultCode += this.previousWhitespaceAndComments();\n    this.appendTokenPrefix();\n    this.resultCode += prefix;\n    this.resultMappings[this.tokenIndex] = this.resultCode.length;\n    this.resultCode += this.code.slice(\n      this.tokens[this.tokenIndex].start,\n      this.tokens[this.tokenIndex].end,\n    );\n    this.appendTokenSuffix();\n    this.tokenIndex++;\n  }\n\n   appendTokenPrefix() {\n    const token = this.currentToken();\n    if (token.numNullishCoalesceStarts || token.isOptionalChainStart) {\n      token.isAsyncOperation = (0,_util_isAsyncOperation__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this);\n    }\n    if (this.disableESTransforms) {\n      return;\n    }\n    if (token.numNullishCoalesceStarts) {\n      for (let i = 0; i < token.numNullishCoalesceStarts; i++) {\n        if (token.isAsyncOperation) {\n          this.resultCode += \"await \";\n          this.resultCode += this.helperManager.getHelperName(\"asyncNullishCoalesce\");\n        } else {\n          this.resultCode += this.helperManager.getHelperName(\"nullishCoalesce\");\n        }\n        this.resultCode += \"(\";\n      }\n    }\n    if (token.isOptionalChainStart) {\n      if (token.isAsyncOperation) {\n        this.resultCode += \"await \";\n      }\n      if (this.tokenIndex > 0 && this.tokenAtRelativeIndex(-1).type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._delete) {\n        if (token.isAsyncOperation) {\n          this.resultCode += this.helperManager.getHelperName(\"asyncOptionalChainDelete\");\n        } else {\n          this.resultCode += this.helperManager.getHelperName(\"optionalChainDelete\");\n        }\n      } else if (token.isAsyncOperation) {\n        this.resultCode += this.helperManager.getHelperName(\"asyncOptionalChain\");\n      } else {\n        this.resultCode += this.helperManager.getHelperName(\"optionalChain\");\n      }\n      this.resultCode += \"([\";\n    }\n  }\n\n   appendTokenSuffix() {\n    const token = this.currentToken();\n    if (token.isOptionalChainEnd && !this.disableESTransforms) {\n      this.resultCode += \"])\";\n    }\n    if (token.numNullishCoalesceEnds && !this.disableESTransforms) {\n      for (let i = 0; i < token.numNullishCoalesceEnds; i++) {\n        this.resultCode += \"))\";\n      }\n    }\n  }\n\n  appendCode(code) {\n    this.resultCode += code;\n  }\n\n  currentToken() {\n    return this.tokens[this.tokenIndex];\n  }\n\n  currentTokenCode() {\n    const token = this.currentToken();\n    return this.code.slice(token.start, token.end);\n  }\n\n  tokenAtRelativeIndex(relativeIndex) {\n    return this.tokens[this.tokenIndex + relativeIndex];\n  }\n\n  currentIndex() {\n    return this.tokenIndex;\n  }\n\n  /**\n   * Move to the next token. Only suitable in preprocessing steps. When\n   * generating new code, you should use copyToken or removeToken.\n   */\n  nextToken() {\n    if (this.tokenIndex === this.tokens.length) {\n      throw new Error(\"Unexpectedly reached end of input.\");\n    }\n    this.tokenIndex++;\n  }\n\n  previousToken() {\n    this.tokenIndex--;\n  }\n\n  finish() {\n    if (this.tokenIndex !== this.tokens.length) {\n      throw new Error(\"Tried to finish processing tokens before reaching the end.\");\n    }\n    this.resultCode += this.previousWhitespaceAndComments();\n    return {code: this.resultCode, mappings: this.resultMappings};\n  }\n\n  isAtEnd() {\n    return this.tokenIndex === this.tokens.length;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/TokenProcessor.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/computeSourceMap.js":
/*!***********************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/computeSourceMap.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ computeSourceMap; }\n/* harmony export */ });\n/* harmony import */ var _jridgewell_gen_mapping__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jridgewell/gen-mapping */ \"(app-pages-browser)/./node_modules/@jridgewell/gen-mapping/dist/gen-mapping.mjs\");\n/* harmony import */ var _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Generate a source map indicating that each line maps directly to the original line,\n * with the tokens in their new positions.\n */\nfunction computeSourceMap(\n  {code: generatedCode, mappings: rawMappings},\n  filePath,\n  options,\n  source,\n  tokens,\n) {\n  const sourceColumns = computeSourceColumns(source, tokens);\n  const map = new _jridgewell_gen_mapping__WEBPACK_IMPORTED_MODULE_0__.GenMapping({file: options.compiledFilename});\n  let tokenIndex = 0;\n  // currentMapping is the output source index for the current input token being\n  // considered.\n  let currentMapping = rawMappings[0];\n  while (currentMapping === undefined && tokenIndex < rawMappings.length - 1) {\n    tokenIndex++;\n    currentMapping = rawMappings[tokenIndex];\n  }\n  let line = 0;\n  let lineStart = 0;\n  if (currentMapping !== lineStart) {\n    (0,_jridgewell_gen_mapping__WEBPACK_IMPORTED_MODULE_0__.maybeAddSegment)(map, line, 0, filePath, line, 0);\n  }\n  for (let i = 0; i < generatedCode.length; i++) {\n    if (i === currentMapping) {\n      const genColumn = currentMapping - lineStart;\n      const sourceColumn = sourceColumns[tokenIndex];\n      (0,_jridgewell_gen_mapping__WEBPACK_IMPORTED_MODULE_0__.maybeAddSegment)(map, line, genColumn, filePath, line, sourceColumn);\n      while (\n        (currentMapping === i || currentMapping === undefined) &&\n        tokenIndex < rawMappings.length - 1\n      ) {\n        tokenIndex++;\n        currentMapping = rawMappings[tokenIndex];\n      }\n    }\n    if (generatedCode.charCodeAt(i) === _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.lineFeed) {\n      line++;\n      lineStart = i + 1;\n      if (currentMapping !== lineStart) {\n        (0,_jridgewell_gen_mapping__WEBPACK_IMPORTED_MODULE_0__.maybeAddSegment)(map, line, 0, filePath, line, 0);\n      }\n    }\n  }\n  const {sourceRoot, sourcesContent, ...sourceMap} = (0,_jridgewell_gen_mapping__WEBPACK_IMPORTED_MODULE_0__.toEncodedMap)(map);\n  return sourceMap ;\n}\n\n/**\n * Create an array mapping each token index to the 0-based column of the start\n * position of the token.\n */\nfunction computeSourceColumns(code, tokens) {\n  const sourceColumns = new Array(tokens.length);\n  let tokenIndex = 0;\n  let currentMapping = tokens[tokenIndex].start;\n  let lineStart = 0;\n  for (let i = 0; i < code.length; i++) {\n    if (i === currentMapping) {\n      sourceColumns[tokenIndex] = currentMapping - lineStart;\n      tokenIndex++;\n      currentMapping = tokens[tokenIndex].start;\n    }\n    if (code.charCodeAt(i) === _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.lineFeed) {\n      lineStart = i + 1;\n    }\n  }\n  return sourceColumns;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL2NvbXB1dGVTb3VyY2VNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtGOzs7O0FBSWhDOzs7Ozs7Ozs7Ozs7O0FBYWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZixHQUFHLDJDQUEyQztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsK0RBQVUsRUFBRSwrQkFBK0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksd0VBQWU7QUFDbkI7QUFDQSxrQkFBa0IsMEJBQTBCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLE1BQU0sd0VBQWU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyw2REFBUztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdFQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMENBQTBDLEVBQUUscUVBQVk7QUFDakU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNkRBQVM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS9jb21wdXRlU291cmNlTWFwLmpzPzY2YTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtHZW5NYXBwaW5nLCBtYXliZUFkZFNlZ21lbnQsIHRvRW5jb2RlZE1hcH0gZnJvbSBcIkBqcmlkZ2V3ZWxsL2dlbi1tYXBwaW5nXCI7XG5cblxuXG5pbXBvcnQge2NoYXJDb2Rlc30gZnJvbSBcIi4vcGFyc2VyL3V0aWwvY2hhcmNvZGVzXCI7XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vKipcbiAqIEdlbmVyYXRlIGEgc291cmNlIG1hcCBpbmRpY2F0aW5nIHRoYXQgZWFjaCBsaW5lIG1hcHMgZGlyZWN0bHkgdG8gdGhlIG9yaWdpbmFsIGxpbmUsXG4gKiB3aXRoIHRoZSB0b2tlbnMgaW4gdGhlaXIgbmV3IHBvc2l0aW9ucy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29tcHV0ZVNvdXJjZU1hcChcbiAge2NvZGU6IGdlbmVyYXRlZENvZGUsIG1hcHBpbmdzOiByYXdNYXBwaW5nc30sXG4gIGZpbGVQYXRoLFxuICBvcHRpb25zLFxuICBzb3VyY2UsXG4gIHRva2Vucyxcbikge1xuICBjb25zdCBzb3VyY2VDb2x1bW5zID0gY29tcHV0ZVNvdXJjZUNvbHVtbnMoc291cmNlLCB0b2tlbnMpO1xuICBjb25zdCBtYXAgPSBuZXcgR2VuTWFwcGluZyh7ZmlsZTogb3B0aW9ucy5jb21waWxlZEZpbGVuYW1lfSk7XG4gIGxldCB0b2tlbkluZGV4ID0gMDtcbiAgLy8gY3VycmVudE1hcHBpbmcgaXMgdGhlIG91dHB1dCBzb3VyY2UgaW5kZXggZm9yIHRoZSBjdXJyZW50IGlucHV0IHRva2VuIGJlaW5nXG4gIC8vIGNvbnNpZGVyZWQuXG4gIGxldCBjdXJyZW50TWFwcGluZyA9IHJhd01hcHBpbmdzWzBdO1xuICB3aGlsZSAoY3VycmVudE1hcHBpbmcgPT09IHVuZGVmaW5lZCAmJiB0b2tlbkluZGV4IDwgcmF3TWFwcGluZ3MubGVuZ3RoIC0gMSkge1xuICAgIHRva2VuSW5kZXgrKztcbiAgICBjdXJyZW50TWFwcGluZyA9IHJhd01hcHBpbmdzW3Rva2VuSW5kZXhdO1xuICB9XG4gIGxldCBsaW5lID0gMDtcbiAgbGV0IGxpbmVTdGFydCA9IDA7XG4gIGlmIChjdXJyZW50TWFwcGluZyAhPT0gbGluZVN0YXJ0KSB7XG4gICAgbWF5YmVBZGRTZWdtZW50KG1hcCwgbGluZSwgMCwgZmlsZVBhdGgsIGxpbmUsIDApO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZ2VuZXJhdGVkQ29kZS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChpID09PSBjdXJyZW50TWFwcGluZykge1xuICAgICAgY29uc3QgZ2VuQ29sdW1uID0gY3VycmVudE1hcHBpbmcgLSBsaW5lU3RhcnQ7XG4gICAgICBjb25zdCBzb3VyY2VDb2x1bW4gPSBzb3VyY2VDb2x1bW5zW3Rva2VuSW5kZXhdO1xuICAgICAgbWF5YmVBZGRTZWdtZW50KG1hcCwgbGluZSwgZ2VuQ29sdW1uLCBmaWxlUGF0aCwgbGluZSwgc291cmNlQ29sdW1uKTtcbiAgICAgIHdoaWxlIChcbiAgICAgICAgKGN1cnJlbnRNYXBwaW5nID09PSBpIHx8IGN1cnJlbnRNYXBwaW5nID09PSB1bmRlZmluZWQpICYmXG4gICAgICAgIHRva2VuSW5kZXggPCByYXdNYXBwaW5ncy5sZW5ndGggLSAxXG4gICAgICApIHtcbiAgICAgICAgdG9rZW5JbmRleCsrO1xuICAgICAgICBjdXJyZW50TWFwcGluZyA9IHJhd01hcHBpbmdzW3Rva2VuSW5kZXhdO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZ2VuZXJhdGVkQ29kZS5jaGFyQ29kZUF0KGkpID09PSBjaGFyQ29kZXMubGluZUZlZWQpIHtcbiAgICAgIGxpbmUrKztcbiAgICAgIGxpbmVTdGFydCA9IGkgKyAxO1xuICAgICAgaWYgKGN1cnJlbnRNYXBwaW5nICE9PSBsaW5lU3RhcnQpIHtcbiAgICAgICAgbWF5YmVBZGRTZWdtZW50KG1hcCwgbGluZSwgMCwgZmlsZVBhdGgsIGxpbmUsIDApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBjb25zdCB7c291cmNlUm9vdCwgc291cmNlc0NvbnRlbnQsIC4uLnNvdXJjZU1hcH0gPSB0b0VuY29kZWRNYXAobWFwKTtcbiAgcmV0dXJuIHNvdXJjZU1hcCA7XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGFycmF5IG1hcHBpbmcgZWFjaCB0b2tlbiBpbmRleCB0byB0aGUgMC1iYXNlZCBjb2x1bW4gb2YgdGhlIHN0YXJ0XG4gKiBwb3NpdGlvbiBvZiB0aGUgdG9rZW4uXG4gKi9cbmZ1bmN0aW9uIGNvbXB1dGVTb3VyY2VDb2x1bW5zKGNvZGUsIHRva2Vucykge1xuICBjb25zdCBzb3VyY2VDb2x1bW5zID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpO1xuICBsZXQgdG9rZW5JbmRleCA9IDA7XG4gIGxldCBjdXJyZW50TWFwcGluZyA9IHRva2Vuc1t0b2tlbkluZGV4XS5zdGFydDtcbiAgbGV0IGxpbmVTdGFydCA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY29kZS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChpID09PSBjdXJyZW50TWFwcGluZykge1xuICAgICAgc291cmNlQ29sdW1uc1t0b2tlbkluZGV4XSA9IGN1cnJlbnRNYXBwaW5nIC0gbGluZVN0YXJ0O1xuICAgICAgdG9rZW5JbmRleCsrO1xuICAgICAgY3VycmVudE1hcHBpbmcgPSB0b2tlbnNbdG9rZW5JbmRleF0uc3RhcnQ7XG4gICAgfVxuICAgIGlmIChjb2RlLmNoYXJDb2RlQXQoaSkgPT09IGNoYXJDb2Rlcy5saW5lRmVlZCkge1xuICAgICAgbGluZVN0YXJ0ID0gaSArIDE7XG4gICAgfVxuICB9XG4gIHJldHVybiBzb3VyY2VDb2x1bW5zO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/computeSourceMap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/identifyShadowedGlobals.js":
/*!******************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/identifyShadowedGlobals.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ identifyShadowedGlobals; },\n/* harmony export */   hasShadowedGlobals: function() { return /* binding */ hasShadowedGlobals; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n\n/**\n * Traverse the given tokens and modify them if necessary to indicate that some names shadow global\n * variables.\n */\nfunction identifyShadowedGlobals(\n  tokens,\n  scopes,\n  globalNames,\n) {\n  if (!hasShadowedGlobals(tokens, globalNames)) {\n    return;\n  }\n  markShadowedGlobals(tokens, scopes, globalNames);\n}\n\n/**\n * We can do a fast up-front check to see if there are any declarations to global names. If not,\n * then there's no point in computing scope assignments.\n */\n// Exported for testing.\nfunction hasShadowedGlobals(tokens, globalNames) {\n  for (const token of tokens.tokens) {\n    if (\n      token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name &&\n      !token.isType &&\n      (0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isNonTopLevelDeclaration)(token) &&\n      globalNames.has(tokens.identifierNameForToken(token))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction markShadowedGlobals(\n  tokens,\n  scopes,\n  globalNames,\n) {\n  const scopeStack = [];\n  let scopeIndex = scopes.length - 1;\n  // Scopes were generated at completion time, so they're sorted by end index, so we can maintain a\n  // good stack by going backwards through them.\n  for (let i = tokens.tokens.length - 1; ; i--) {\n    while (scopeStack.length > 0 && scopeStack[scopeStack.length - 1].startTokenIndex === i + 1) {\n      scopeStack.pop();\n    }\n    while (scopeIndex >= 0 && scopes[scopeIndex].endTokenIndex === i + 1) {\n      scopeStack.push(scopes[scopeIndex]);\n      scopeIndex--;\n    }\n    // Process scopes after the last iteration so we can make sure we pop all of them.\n    if (i < 0) {\n      break;\n    }\n\n    const token = tokens.tokens[i];\n    const name = tokens.identifierNameForToken(token);\n    if (scopeStack.length > 1 && !token.isType && token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name && globalNames.has(name)) {\n      if ((0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isBlockScopedDeclaration)(token)) {\n        markShadowedForScope(scopeStack[scopeStack.length - 1], tokens, name);\n      } else if ((0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isFunctionScopedDeclaration)(token)) {\n        let stackIndex = scopeStack.length - 1;\n        while (stackIndex > 0 && !scopeStack[stackIndex].isFunctionScope) {\n          stackIndex--;\n        }\n        if (stackIndex < 0) {\n          throw new Error(\"Did not find parent function scope.\");\n        }\n        markShadowedForScope(scopeStack[stackIndex], tokens, name);\n      }\n    }\n  }\n  if (scopeStack.length > 0) {\n    throw new Error(\"Expected empty scope stack after processing file.\");\n  }\n}\n\nfunction markShadowedForScope(scope, tokens, name) {\n  for (let i = scope.startTokenIndex; i < scope.endTokenIndex; i++) {\n    const token = tokens.tokens[i];\n    if (\n      (token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name || token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxName) &&\n      tokens.identifierNameForToken(token) === name\n    ) {\n      token.shadowsGlobal = true;\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL2lkZW50aWZ5U2hhZG93ZWRHbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJNEI7O0FBRTZCOzs7QUFHekQ7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EscUJBQXFCLDhEQUFFO0FBQ3ZCO0FBQ0EsTUFBTSwyRUFBd0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlFQUFpRSw4REFBRTtBQUNuRSxVQUFVLDJFQUF3QjtBQUNsQztBQUNBLFFBQVEsU0FBUyw4RUFBMkI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0NBQXNDLHlCQUF5QjtBQUMvRDtBQUNBO0FBQ0Esc0JBQXNCLDhEQUFFLHdCQUF3Qiw4REFBRTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vaWRlbnRpZnlTaGFkb3dlZEdsb2JhbHMuanM/NjRmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc0Jsb2NrU2NvcGVkRGVjbGFyYXRpb24sXG4gIGlzRnVuY3Rpb25TY29wZWREZWNsYXJhdGlvbixcbiAgaXNOb25Ub3BMZXZlbERlY2xhcmF0aW9uLFxufSBmcm9tIFwiLi9wYXJzZXIvdG9rZW5pemVyXCI7XG5cbmltcG9ydCB7VG9rZW5UeXBlIGFzIHR0fSBmcm9tIFwiLi9wYXJzZXIvdG9rZW5pemVyL3R5cGVzXCI7XG5cblxuLyoqXG4gKiBUcmF2ZXJzZSB0aGUgZ2l2ZW4gdG9rZW5zIGFuZCBtb2RpZnkgdGhlbSBpZiBuZWNlc3NhcnkgdG8gaW5kaWNhdGUgdGhhdCBzb21lIG5hbWVzIHNoYWRvdyBnbG9iYWxcbiAqIHZhcmlhYmxlcy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaWRlbnRpZnlTaGFkb3dlZEdsb2JhbHMoXG4gIHRva2VucyxcbiAgc2NvcGVzLFxuICBnbG9iYWxOYW1lcyxcbikge1xuICBpZiAoIWhhc1NoYWRvd2VkR2xvYmFscyh0b2tlbnMsIGdsb2JhbE5hbWVzKSkge1xuICAgIHJldHVybjtcbiAgfVxuICBtYXJrU2hhZG93ZWRHbG9iYWxzKHRva2Vucywgc2NvcGVzLCBnbG9iYWxOYW1lcyk7XG59XG5cbi8qKlxuICogV2UgY2FuIGRvIGEgZmFzdCB1cC1mcm9udCBjaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIGFueSBkZWNsYXJhdGlvbnMgdG8gZ2xvYmFsIG5hbWVzLiBJZiBub3QsXG4gKiB0aGVuIHRoZXJlJ3Mgbm8gcG9pbnQgaW4gY29tcHV0aW5nIHNjb3BlIGFzc2lnbm1lbnRzLlxuICovXG4vLyBFeHBvcnRlZCBmb3IgdGVzdGluZy5cbmV4cG9ydCBmdW5jdGlvbiBoYXNTaGFkb3dlZEdsb2JhbHModG9rZW5zLCBnbG9iYWxOYW1lcykge1xuICBmb3IgKGNvbnN0IHRva2VuIG9mIHRva2Vucy50b2tlbnMpIHtcbiAgICBpZiAoXG4gICAgICB0b2tlbi50eXBlID09PSB0dC5uYW1lICYmXG4gICAgICAhdG9rZW4uaXNUeXBlICYmXG4gICAgICBpc05vblRvcExldmVsRGVjbGFyYXRpb24odG9rZW4pICYmXG4gICAgICBnbG9iYWxOYW1lcy5oYXModG9rZW5zLmlkZW50aWZpZXJOYW1lRm9yVG9rZW4odG9rZW4pKVxuICAgICkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gbWFya1NoYWRvd2VkR2xvYmFscyhcbiAgdG9rZW5zLFxuICBzY29wZXMsXG4gIGdsb2JhbE5hbWVzLFxuKSB7XG4gIGNvbnN0IHNjb3BlU3RhY2sgPSBbXTtcbiAgbGV0IHNjb3BlSW5kZXggPSBzY29wZXMubGVuZ3RoIC0gMTtcbiAgLy8gU2NvcGVzIHdlcmUgZ2VuZXJhdGVkIGF0IGNvbXBsZXRpb24gdGltZSwgc28gdGhleSdyZSBzb3J0ZWQgYnkgZW5kIGluZGV4LCBzbyB3ZSBjYW4gbWFpbnRhaW4gYVxuICAvLyBnb29kIHN0YWNrIGJ5IGdvaW5nIGJhY2t3YXJkcyB0aHJvdWdoIHRoZW0uXG4gIGZvciAobGV0IGkgPSB0b2tlbnMudG9rZW5zLmxlbmd0aCAtIDE7IDsgaS0tKSB7XG4gICAgd2hpbGUgKHNjb3BlU3RhY2subGVuZ3RoID4gMCAmJiBzY29wZVN0YWNrW3Njb3BlU3RhY2subGVuZ3RoIC0gMV0uc3RhcnRUb2tlbkluZGV4ID09PSBpICsgMSkge1xuICAgICAgc2NvcGVTdGFjay5wb3AoKTtcbiAgICB9XG4gICAgd2hpbGUgKHNjb3BlSW5kZXggPj0gMCAmJiBzY29wZXNbc2NvcGVJbmRleF0uZW5kVG9rZW5JbmRleCA9PT0gaSArIDEpIHtcbiAgICAgIHNjb3BlU3RhY2sucHVzaChzY29wZXNbc2NvcGVJbmRleF0pO1xuICAgICAgc2NvcGVJbmRleC0tO1xuICAgIH1cbiAgICAvLyBQcm9jZXNzIHNjb3BlcyBhZnRlciB0aGUgbGFzdCBpdGVyYXRpb24gc28gd2UgY2FuIG1ha2Ugc3VyZSB3ZSBwb3AgYWxsIG9mIHRoZW0uXG4gICAgaWYgKGkgPCAwKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBjb25zdCB0b2tlbiA9IHRva2Vucy50b2tlbnNbaV07XG4gICAgY29uc3QgbmFtZSA9IHRva2Vucy5pZGVudGlmaWVyTmFtZUZvclRva2VuKHRva2VuKTtcbiAgICBpZiAoc2NvcGVTdGFjay5sZW5ndGggPiAxICYmICF0b2tlbi5pc1R5cGUgJiYgdG9rZW4udHlwZSA9PT0gdHQubmFtZSAmJiBnbG9iYWxOYW1lcy5oYXMobmFtZSkpIHtcbiAgICAgIGlmIChpc0Jsb2NrU2NvcGVkRGVjbGFyYXRpb24odG9rZW4pKSB7XG4gICAgICAgIG1hcmtTaGFkb3dlZEZvclNjb3BlKHNjb3BlU3RhY2tbc2NvcGVTdGFjay5sZW5ndGggLSAxXSwgdG9rZW5zLCBuYW1lKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNGdW5jdGlvblNjb3BlZERlY2xhcmF0aW9uKHRva2VuKSkge1xuICAgICAgICBsZXQgc3RhY2tJbmRleCA9IHNjb3BlU3RhY2subGVuZ3RoIC0gMTtcbiAgICAgICAgd2hpbGUgKHN0YWNrSW5kZXggPiAwICYmICFzY29wZVN0YWNrW3N0YWNrSW5kZXhdLmlzRnVuY3Rpb25TY29wZSkge1xuICAgICAgICAgIHN0YWNrSW5kZXgtLTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RhY2tJbmRleCA8IDApIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEaWQgbm90IGZpbmQgcGFyZW50IGZ1bmN0aW9uIHNjb3BlLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBtYXJrU2hhZG93ZWRGb3JTY29wZShzY29wZVN0YWNrW3N0YWNrSW5kZXhdLCB0b2tlbnMsIG5hbWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAoc2NvcGVTdGFjay5sZW5ndGggPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgZW1wdHkgc2NvcGUgc3RhY2sgYWZ0ZXIgcHJvY2Vzc2luZyBmaWxlLlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYXJrU2hhZG93ZWRGb3JTY29wZShzY29wZSwgdG9rZW5zLCBuYW1lKSB7XG4gIGZvciAobGV0IGkgPSBzY29wZS5zdGFydFRva2VuSW5kZXg7IGkgPCBzY29wZS5lbmRUb2tlbkluZGV4OyBpKyspIHtcbiAgICBjb25zdCB0b2tlbiA9IHRva2Vucy50b2tlbnNbaV07XG4gICAgaWYgKFxuICAgICAgKHRva2VuLnR5cGUgPT09IHR0Lm5hbWUgfHwgdG9rZW4udHlwZSA9PT0gdHQuanN4TmFtZSkgJiZcbiAgICAgIHRva2Vucy5pZGVudGlmaWVyTmFtZUZvclRva2VuKHRva2VuKSA9PT0gbmFtZVxuICAgICkge1xuICAgICAgdG9rZW4uc2hhZG93c0dsb2JhbCA9IHRydWU7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/identifyShadowedGlobals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFormattedTokens: function() { return /* binding */ getFormattedTokens; },\n/* harmony export */   getVersion: function() { return /* binding */ getVersion; },\n/* harmony export */   transform: function() { return /* binding */ transform; }\n/* harmony export */ });\n/* harmony import */ var _CJSImportProcessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CJSImportProcessor */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/CJSImportProcessor.js\");\n/* harmony import */ var _computeSourceMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computeSourceMap */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/computeSourceMap.js\");\n/* harmony import */ var _HelperManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HelperManager */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/HelperManager.js\");\n/* harmony import */ var _identifyShadowedGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./identifyShadowedGlobals */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/identifyShadowedGlobals.js\");\n/* harmony import */ var _NameManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NameManager */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/NameManager.js\");\n/* harmony import */ var _Options__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Options */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/Options.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parser */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/index.js\");\n/* harmony import */ var _TokenProcessor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TokenProcessor */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/TokenProcessor.js\");\n/* harmony import */ var _transformers_RootTransformer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transformers/RootTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/RootTransformer.js\");\n/* harmony import */ var _util_formatTokens__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util/formatTokens */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/formatTokens.js\");\n/* harmony import */ var _util_getTSImportedNames__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./util/getTSImportedNames */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getTSImportedNames.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;\n\nfunction getVersion() {\n  /* istanbul ignore next */\n  return \"3.35.0\";\n}\n\nfunction transform(code, options) {\n  (0,_Options__WEBPACK_IMPORTED_MODULE_5__.validateOptions)(options);\n  try {\n    const sucraseContext = getSucraseContext(code, options);\n    const transformer = new _transformers_RootTransformer__WEBPACK_IMPORTED_MODULE_8__[\"default\"](\n      sucraseContext,\n      options.transforms,\n      Boolean(options.enableLegacyBabel5ModuleInterop),\n      options,\n    );\n    const transformerResult = transformer.transform();\n    let result = {code: transformerResult.code};\n    if (options.sourceMapOptions) {\n      if (!options.filePath) {\n        throw new Error(\"filePath must be specified when generating a source map.\");\n      }\n      result = {\n        ...result,\n        sourceMap: (0,_computeSourceMap__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n          transformerResult,\n          options.filePath,\n          options.sourceMapOptions,\n          code,\n          sucraseContext.tokenProcessor.tokens,\n        ),\n      };\n    }\n    return result;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } catch (e) {\n    if (options.filePath) {\n      e.message = `Error transforming ${options.filePath}: ${e.message}`;\n    }\n    throw e;\n  }\n}\n\n/**\n * Return a string representation of the sucrase tokens, mostly useful for\n * diagnostic purposes.\n */\nfunction getFormattedTokens(code, options) {\n  const tokens = getSucraseContext(code, options).tokenProcessor.tokens;\n  return (0,_util_formatTokens__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(code, tokens);\n}\n\n/**\n * Call into the parser/tokenizer and do some further preprocessing:\n * - Come up with a set of used names so that we can assign new names.\n * - Preprocess all import/export statements so we know which globals we are interested in.\n * - Compute situations where any of those globals are shadowed.\n *\n * In the future, some of these preprocessing steps can be skipped based on what actual work is\n * being done.\n */\nfunction getSucraseContext(code, options) {\n  const isJSXEnabled = options.transforms.includes(\"jsx\");\n  const isTypeScriptEnabled = options.transforms.includes(\"typescript\");\n  const isFlowEnabled = options.transforms.includes(\"flow\");\n  const disableESTransforms = options.disableESTransforms === true;\n  const file = (0,_parser__WEBPACK_IMPORTED_MODULE_6__.parse)(code, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);\n  const tokens = file.tokens;\n  const scopes = file.scopes;\n\n  const nameManager = new _NameManager__WEBPACK_IMPORTED_MODULE_4__[\"default\"](code, tokens);\n  const helperManager = new _HelperManager__WEBPACK_IMPORTED_MODULE_2__.HelperManager(nameManager);\n  const tokenProcessor = new _TokenProcessor__WEBPACK_IMPORTED_MODULE_7__[\"default\"](\n    code,\n    tokens,\n    isFlowEnabled,\n    disableESTransforms,\n    helperManager,\n  );\n  const enableLegacyTypeScriptModuleInterop = Boolean(options.enableLegacyTypeScriptModuleInterop);\n\n  let importProcessor = null;\n  if (options.transforms.includes(\"imports\")) {\n    importProcessor = new _CJSImportProcessor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n      nameManager,\n      tokenProcessor,\n      enableLegacyTypeScriptModuleInterop,\n      options,\n      options.transforms.includes(\"typescript\"),\n      Boolean(options.keepUnusedImports),\n      helperManager,\n    );\n    importProcessor.preprocessTokens();\n    // We need to mark shadowed globals after processing imports so we know that the globals are,\n    // but before type-only import pruning, since that relies on shadowing information.\n    (0,_identifyShadowedGlobals__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(tokenProcessor, scopes, importProcessor.getGlobalNames());\n    if (options.transforms.includes(\"typescript\") && !options.keepUnusedImports) {\n      importProcessor.pruneTypeOnlyImports();\n    }\n  } else if (options.transforms.includes(\"typescript\") && !options.keepUnusedImports) {\n    // Shadowed global detection is needed for TS implicit elision of imported names.\n    (0,_identifyShadowedGlobals__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(tokenProcessor, scopes, (0,_util_getTSImportedNames__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(tokenProcessor));\n  }\n  return {tokenProcessor, scopes, nameManager, importProcessor, helperManager};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNEO0FBQ0E7QUFDUjtBQUNrQjtBQUN4QjtBQUNFOztBQUVYOztBQUVlO0FBQ2U7QUFDZDtBQUNZOzs7Ozs7Ozs7Ozs7Ozs7QUFlM0Q7O0FBRU87QUFDUDtBQUNBO0FBQ0E7O0FBRU87QUFDUCxFQUFFLHlEQUFlO0FBQ2pCO0FBQ0E7QUFDQSw0QkFBNEIscUVBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw2REFBZ0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSx3Q0FBd0MsaUJBQWlCLElBQUksVUFBVTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxTQUFTLDhEQUFZO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhDQUFLO0FBQ3BCO0FBQ0E7O0FBRUEsMEJBQTBCLG9EQUFXO0FBQ3JDLDRCQUE0Qix5REFBYTtBQUN6Qyw2QkFBNkIsdURBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBCQUEwQiwyREFBa0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksb0VBQXVCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUksb0VBQXVCLHlCQUF5QixxRUFBa0I7QUFDdEU7QUFDQSxVQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vaW5kZXguanM/MTY2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ0pTSW1wb3J0UHJvY2Vzc29yIGZyb20gXCIuL0NKU0ltcG9ydFByb2Nlc3NvclwiO1xuaW1wb3J0IGNvbXB1dGVTb3VyY2VNYXAsIHt9IGZyb20gXCIuL2NvbXB1dGVTb3VyY2VNYXBcIjtcbmltcG9ydCB7SGVscGVyTWFuYWdlcn0gZnJvbSBcIi4vSGVscGVyTWFuYWdlclwiO1xuaW1wb3J0IGlkZW50aWZ5U2hhZG93ZWRHbG9iYWxzIGZyb20gXCIuL2lkZW50aWZ5U2hhZG93ZWRHbG9iYWxzXCI7XG5pbXBvcnQgTmFtZU1hbmFnZXIgZnJvbSBcIi4vTmFtZU1hbmFnZXJcIjtcbmltcG9ydCB7dmFsaWRhdGVPcHRpb25zfSBmcm9tIFwiLi9PcHRpb25zXCI7XG5cbmltcG9ydCB7cGFyc2V9IGZyb20gXCIuL3BhcnNlclwiO1xuXG5pbXBvcnQgVG9rZW5Qcm9jZXNzb3IgZnJvbSBcIi4vVG9rZW5Qcm9jZXNzb3JcIjtcbmltcG9ydCBSb290VHJhbnNmb3JtZXIgZnJvbSBcIi4vdHJhbnNmb3JtZXJzL1Jvb3RUcmFuc2Zvcm1lclwiO1xuaW1wb3J0IGZvcm1hdFRva2VucyBmcm9tIFwiLi91dGlsL2Zvcm1hdFRva2Vuc1wiO1xuaW1wb3J0IGdldFRTSW1wb3J0ZWROYW1lcyBmcm9tIFwiLi91dGlsL2dldFRTSW1wb3J0ZWROYW1lc1wiO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFZlcnNpb24oKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiBcIjMuMzUuMFwiO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtKGNvZGUsIG9wdGlvbnMpIHtcbiAgdmFsaWRhdGVPcHRpb25zKG9wdGlvbnMpO1xuICB0cnkge1xuICAgIGNvbnN0IHN1Y3Jhc2VDb250ZXh0ID0gZ2V0U3VjcmFzZUNvbnRleHQoY29kZSwgb3B0aW9ucyk7XG4gICAgY29uc3QgdHJhbnNmb3JtZXIgPSBuZXcgUm9vdFRyYW5zZm9ybWVyKFxuICAgICAgc3VjcmFzZUNvbnRleHQsXG4gICAgICBvcHRpb25zLnRyYW5zZm9ybXMsXG4gICAgICBCb29sZWFuKG9wdGlvbnMuZW5hYmxlTGVnYWN5QmFiZWw1TW9kdWxlSW50ZXJvcCksXG4gICAgICBvcHRpb25zLFxuICAgICk7XG4gICAgY29uc3QgdHJhbnNmb3JtZXJSZXN1bHQgPSB0cmFuc2Zvcm1lci50cmFuc2Zvcm0oKTtcbiAgICBsZXQgcmVzdWx0ID0ge2NvZGU6IHRyYW5zZm9ybWVyUmVzdWx0LmNvZGV9O1xuICAgIGlmIChvcHRpb25zLnNvdXJjZU1hcE9wdGlvbnMpIHtcbiAgICAgIGlmICghb3B0aW9ucy5maWxlUGF0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaWxlUGF0aCBtdXN0IGJlIHNwZWNpZmllZCB3aGVuIGdlbmVyYXRpbmcgYSBzb3VyY2UgbWFwLlwiKTtcbiAgICAgIH1cbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICBzb3VyY2VNYXA6IGNvbXB1dGVTb3VyY2VNYXAoXG4gICAgICAgICAgdHJhbnNmb3JtZXJSZXN1bHQsXG4gICAgICAgICAgb3B0aW9ucy5maWxlUGF0aCxcbiAgICAgICAgICBvcHRpb25zLnNvdXJjZU1hcE9wdGlvbnMsXG4gICAgICAgICAgY29kZSxcbiAgICAgICAgICBzdWNyYXNlQ29udGV4dC50b2tlblByb2Nlc3Nvci50b2tlbnMsXG4gICAgICAgICksXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAob3B0aW9ucy5maWxlUGF0aCkge1xuICAgICAgZS5tZXNzYWdlID0gYEVycm9yIHRyYW5zZm9ybWluZyAke29wdGlvbnMuZmlsZVBhdGh9OiAke2UubWVzc2FnZX1gO1xuICAgIH1cbiAgICB0aHJvdyBlO1xuICB9XG59XG5cbi8qKlxuICogUmV0dXJuIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBzdWNyYXNlIHRva2VucywgbW9zdGx5IHVzZWZ1bCBmb3JcbiAqIGRpYWdub3N0aWMgcHVycG9zZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRGb3JtYXR0ZWRUb2tlbnMoY29kZSwgb3B0aW9ucykge1xuICBjb25zdCB0b2tlbnMgPSBnZXRTdWNyYXNlQ29udGV4dChjb2RlLCBvcHRpb25zKS50b2tlblByb2Nlc3Nvci50b2tlbnM7XG4gIHJldHVybiBmb3JtYXRUb2tlbnMoY29kZSwgdG9rZW5zKTtcbn1cblxuLyoqXG4gKiBDYWxsIGludG8gdGhlIHBhcnNlci90b2tlbml6ZXIgYW5kIGRvIHNvbWUgZnVydGhlciBwcmVwcm9jZXNzaW5nOlxuICogLSBDb21lIHVwIHdpdGggYSBzZXQgb2YgdXNlZCBuYW1lcyBzbyB0aGF0IHdlIGNhbiBhc3NpZ24gbmV3IG5hbWVzLlxuICogLSBQcmVwcm9jZXNzIGFsbCBpbXBvcnQvZXhwb3J0IHN0YXRlbWVudHMgc28gd2Uga25vdyB3aGljaCBnbG9iYWxzIHdlIGFyZSBpbnRlcmVzdGVkIGluLlxuICogLSBDb21wdXRlIHNpdHVhdGlvbnMgd2hlcmUgYW55IG9mIHRob3NlIGdsb2JhbHMgYXJlIHNoYWRvd2VkLlxuICpcbiAqIEluIHRoZSBmdXR1cmUsIHNvbWUgb2YgdGhlc2UgcHJlcHJvY2Vzc2luZyBzdGVwcyBjYW4gYmUgc2tpcHBlZCBiYXNlZCBvbiB3aGF0IGFjdHVhbCB3b3JrIGlzXG4gKiBiZWluZyBkb25lLlxuICovXG5mdW5jdGlvbiBnZXRTdWNyYXNlQ29udGV4dChjb2RlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGlzSlNYRW5hYmxlZCA9IG9wdGlvbnMudHJhbnNmb3Jtcy5pbmNsdWRlcyhcImpzeFwiKTtcbiAgY29uc3QgaXNUeXBlU2NyaXB0RW5hYmxlZCA9IG9wdGlvbnMudHJhbnNmb3Jtcy5pbmNsdWRlcyhcInR5cGVzY3JpcHRcIik7XG4gIGNvbnN0IGlzRmxvd0VuYWJsZWQgPSBvcHRpb25zLnRyYW5zZm9ybXMuaW5jbHVkZXMoXCJmbG93XCIpO1xuICBjb25zdCBkaXNhYmxlRVNUcmFuc2Zvcm1zID0gb3B0aW9ucy5kaXNhYmxlRVNUcmFuc2Zvcm1zID09PSB0cnVlO1xuICBjb25zdCBmaWxlID0gcGFyc2UoY29kZSwgaXNKU1hFbmFibGVkLCBpc1R5cGVTY3JpcHRFbmFibGVkLCBpc0Zsb3dFbmFibGVkKTtcbiAgY29uc3QgdG9rZW5zID0gZmlsZS50b2tlbnM7XG4gIGNvbnN0IHNjb3BlcyA9IGZpbGUuc2NvcGVzO1xuXG4gIGNvbnN0IG5hbWVNYW5hZ2VyID0gbmV3IE5hbWVNYW5hZ2VyKGNvZGUsIHRva2Vucyk7XG4gIGNvbnN0IGhlbHBlck1hbmFnZXIgPSBuZXcgSGVscGVyTWFuYWdlcihuYW1lTWFuYWdlcik7XG4gIGNvbnN0IHRva2VuUHJvY2Vzc29yID0gbmV3IFRva2VuUHJvY2Vzc29yKFxuICAgIGNvZGUsXG4gICAgdG9rZW5zLFxuICAgIGlzRmxvd0VuYWJsZWQsXG4gICAgZGlzYWJsZUVTVHJhbnNmb3JtcyxcbiAgICBoZWxwZXJNYW5hZ2VyLFxuICApO1xuICBjb25zdCBlbmFibGVMZWdhY3lUeXBlU2NyaXB0TW9kdWxlSW50ZXJvcCA9IEJvb2xlYW4ob3B0aW9ucy5lbmFibGVMZWdhY3lUeXBlU2NyaXB0TW9kdWxlSW50ZXJvcCk7XG5cbiAgbGV0IGltcG9ydFByb2Nlc3NvciA9IG51bGw7XG4gIGlmIChvcHRpb25zLnRyYW5zZm9ybXMuaW5jbHVkZXMoXCJpbXBvcnRzXCIpKSB7XG4gICAgaW1wb3J0UHJvY2Vzc29yID0gbmV3IENKU0ltcG9ydFByb2Nlc3NvcihcbiAgICAgIG5hbWVNYW5hZ2VyLFxuICAgICAgdG9rZW5Qcm9jZXNzb3IsXG4gICAgICBlbmFibGVMZWdhY3lUeXBlU2NyaXB0TW9kdWxlSW50ZXJvcCxcbiAgICAgIG9wdGlvbnMsXG4gICAgICBvcHRpb25zLnRyYW5zZm9ybXMuaW5jbHVkZXMoXCJ0eXBlc2NyaXB0XCIpLFxuICAgICAgQm9vbGVhbihvcHRpb25zLmtlZXBVbnVzZWRJbXBvcnRzKSxcbiAgICAgIGhlbHBlck1hbmFnZXIsXG4gICAgKTtcbiAgICBpbXBvcnRQcm9jZXNzb3IucHJlcHJvY2Vzc1Rva2VucygpO1xuICAgIC8vIFdlIG5lZWQgdG8gbWFyayBzaGFkb3dlZCBnbG9iYWxzIGFmdGVyIHByb2Nlc3NpbmcgaW1wb3J0cyBzbyB3ZSBrbm93IHRoYXQgdGhlIGdsb2JhbHMgYXJlLFxuICAgIC8vIGJ1dCBiZWZvcmUgdHlwZS1vbmx5IGltcG9ydCBwcnVuaW5nLCBzaW5jZSB0aGF0IHJlbGllcyBvbiBzaGFkb3dpbmcgaW5mb3JtYXRpb24uXG4gICAgaWRlbnRpZnlTaGFkb3dlZEdsb2JhbHModG9rZW5Qcm9jZXNzb3IsIHNjb3BlcywgaW1wb3J0UHJvY2Vzc29yLmdldEdsb2JhbE5hbWVzKCkpO1xuICAgIGlmIChvcHRpb25zLnRyYW5zZm9ybXMuaW5jbHVkZXMoXCJ0eXBlc2NyaXB0XCIpICYmICFvcHRpb25zLmtlZXBVbnVzZWRJbXBvcnRzKSB7XG4gICAgICBpbXBvcnRQcm9jZXNzb3IucHJ1bmVUeXBlT25seUltcG9ydHMoKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAob3B0aW9ucy50cmFuc2Zvcm1zLmluY2x1ZGVzKFwidHlwZXNjcmlwdFwiKSAmJiAhb3B0aW9ucy5rZWVwVW51c2VkSW1wb3J0cykge1xuICAgIC8vIFNoYWRvd2VkIGdsb2JhbCBkZXRlY3Rpb24gaXMgbmVlZGVkIGZvciBUUyBpbXBsaWNpdCBlbGlzaW9uIG9mIGltcG9ydGVkIG5hbWVzLlxuICAgIGlkZW50aWZ5U2hhZG93ZWRHbG9iYWxzKHRva2VuUHJvY2Vzc29yLCBzY29wZXMsIGdldFRTSW1wb3J0ZWROYW1lcyh0b2tlblByb2Nlc3NvcikpO1xuICB9XG4gIHJldHVybiB7dG9rZW5Qcm9jZXNzb3IsIHNjb3BlcywgbmFtZU1hbmFnZXIsIGltcG9ydFByb2Nlc3NvciwgaGVscGVyTWFuYWdlcn07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   File: function() { return /* binding */ File; },\n/* harmony export */   parse: function() { return /* binding */ parse; }\n/* harmony export */ });\n/* harmony import */ var _traverser_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./traverser/base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _traverser_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./traverser/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/index.js\");\n\n\n\n\n\nclass File {\n  \n  \n\n  constructor(tokens, scopes) {\n    this.tokens = tokens;\n    this.scopes = scopes;\n  }\n}\n\nfunction parse(\n  input,\n  isJSXEnabled,\n  isTypeScriptEnabled,\n  isFlowEnabled,\n) {\n  if (isFlowEnabled && isTypeScriptEnabled) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  (0,_traverser_base__WEBPACK_IMPORTED_MODULE_0__.initParser)(input, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);\n  const result = (0,_traverser_index__WEBPACK_IMPORTED_MODULE_1__.parseFile)();\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.error) {\n    throw (0,_traverser_base__WEBPACK_IMPORTED_MODULE_0__.augmentError)(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.error);\n  }\n  return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFaUU7QUFDckI7O0FBRXJDO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkRBQVU7QUFDWixpQkFBaUIsMkRBQVM7QUFDMUIsTUFBTSxrREFBSztBQUNYLFVBQVUsNkRBQVksQ0FBQyxrREFBSztBQUM1QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vcGFyc2VyL2luZGV4LmpzP2E5MzYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmltcG9ydCB7YXVnbWVudEVycm9yLCBpbml0UGFyc2VyLCBzdGF0ZX0gZnJvbSBcIi4vdHJhdmVyc2VyL2Jhc2VcIjtcbmltcG9ydCB7cGFyc2VGaWxlfSBmcm9tIFwiLi90cmF2ZXJzZXIvaW5kZXhcIjtcblxuZXhwb3J0IGNsYXNzIEZpbGUge1xuICBcbiAgXG5cbiAgY29uc3RydWN0b3IodG9rZW5zLCBzY29wZXMpIHtcbiAgICB0aGlzLnRva2VucyA9IHRva2VucztcbiAgICB0aGlzLnNjb3BlcyA9IHNjb3BlcztcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UoXG4gIGlucHV0LFxuICBpc0pTWEVuYWJsZWQsXG4gIGlzVHlwZVNjcmlwdEVuYWJsZWQsXG4gIGlzRmxvd0VuYWJsZWQsXG4pIHtcbiAgaWYgKGlzRmxvd0VuYWJsZWQgJiYgaXNUeXBlU2NyaXB0RW5hYmxlZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjb21iaW5lIGZsb3cgYW5kIHR5cGVzY3JpcHQgcGx1Z2lucy5cIik7XG4gIH1cbiAgaW5pdFBhcnNlcihpbnB1dCwgaXNKU1hFbmFibGVkLCBpc1R5cGVTY3JpcHRFbmFibGVkLCBpc0Zsb3dFbmFibGVkKTtcbiAgY29uc3QgcmVzdWx0ID0gcGFyc2VGaWxlKCk7XG4gIGlmIChzdGF0ZS5lcnJvcikge1xuICAgIHRocm93IGF1Z21lbnRFcnJvcihzdGF0ZS5lcnJvcik7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/flow.js":
/*!**************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/plugins/flow.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flowAfterParseClassSuper: function() { return /* binding */ flowAfterParseClassSuper; },\n/* harmony export */   flowAfterParseVarHead: function() { return /* binding */ flowAfterParseVarHead; },\n/* harmony export */   flowParseArrow: function() { return /* binding */ flowParseArrow; },\n/* harmony export */   flowParseAssignableListItemTypes: function() { return /* binding */ flowParseAssignableListItemTypes; },\n/* harmony export */   flowParseExportDeclaration: function() { return /* binding */ flowParseExportDeclaration; },\n/* harmony export */   flowParseExportStar: function() { return /* binding */ flowParseExportStar; },\n/* harmony export */   flowParseFunctionBodyAndFinish: function() { return /* binding */ flowParseFunctionBodyAndFinish; },\n/* harmony export */   flowParseIdentifierStatement: function() { return /* binding */ flowParseIdentifierStatement; },\n/* harmony export */   flowParseImportSpecifier: function() { return /* binding */ flowParseImportSpecifier; },\n/* harmony export */   flowParseMaybeAssign: function() { return /* binding */ flowParseMaybeAssign; },\n/* harmony export */   flowParseSubscript: function() { return /* binding */ flowParseSubscript; },\n/* harmony export */   flowParseSubscripts: function() { return /* binding */ flowParseSubscripts; },\n/* harmony export */   flowParseTypeAnnotation: function() { return /* binding */ flowParseTypeAnnotation; },\n/* harmony export */   flowParseTypeParameterDeclaration: function() { return /* binding */ flowParseTypeParameterDeclaration; },\n/* harmony export */   flowParseVariance: function() { return /* binding */ flowParseVariance; },\n/* harmony export */   flowShouldDisallowExportDefaultSpecifier: function() { return /* binding */ flowShouldDisallowExportDefaultSpecifier; },\n/* harmony export */   flowShouldParseExportDeclaration: function() { return /* binding */ flowShouldParseExportDeclaration; },\n/* harmony export */   flowShouldParseExportStar: function() { return /* binding */ flowShouldParseExportStar; },\n/* harmony export */   flowStartParseAsyncArrowFromCallExpression: function() { return /* binding */ flowStartParseAsyncArrowFromCallExpression; },\n/* harmony export */   flowStartParseFunctionParams: function() { return /* binding */ flowStartParseFunctionParams; },\n/* harmony export */   flowStartParseImportSpecifiers: function() { return /* binding */ flowStartParseImportSpecifiers; },\n/* harmony export */   flowStartParseNewArguments: function() { return /* binding */ flowStartParseNewArguments; },\n/* harmony export */   flowStartParseObjPropValue: function() { return /* binding */ flowStartParseObjPropValue; },\n/* harmony export */   flowTryParseExportDefaultExpression: function() { return /* binding */ flowTryParseExportDefaultExpression; },\n/* harmony export */   flowTryParseStatement: function() { return /* binding */ flowTryParseStatement; }\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _traverser_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../traverser/base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _traverser_expression__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../traverser/expression */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js\");\n/* harmony import */ var _traverser_statement__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traverser/statement */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/statement.js\");\n/* harmony import */ var _traverser_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traverser/util */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\");\n/* eslint max-len: 0 */\n\n\n\n\n\n\n\n\n\nfunction isMaybeDefaultImport(lookahead) {\n  return (\n    (lookahead.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name || !!(lookahead.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.IS_KEYWORD)) &&\n    lookahead.contextualKeyword !== _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._from\n  );\n}\n\nfunction flowParseTypeInitialiser(tok) {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(tok || _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  flowParseType();\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\nfunction flowParsePredicate() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.modulo);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._checks);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseExpression)();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n  }\n}\n\nfunction flowParseTypeAndPredicateInitialiser() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.modulo)) {\n    flowParsePredicate();\n  } else {\n    flowParseType();\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.modulo)) {\n      flowParsePredicate();\n    }\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\nfunction flowParseDeclareClass() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  flowParseInterfaceish(/* isClass */ true);\n}\n\nfunction flowParseDeclareFunction() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterDeclaration();\n  }\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n  flowParseFunctionTypeParams();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n\n  flowParseTypeAndPredicateInitialiser();\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.semicolon)();\n}\n\nfunction flowParseDeclare() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class)) {\n    flowParseDeclareClass();\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function)) {\n    flowParseDeclareFunction();\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var)) {\n    flowParseDeclareVariable();\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._module)) {\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n      flowParseDeclareModuleExports();\n    } else {\n      flowParseDeclareModule();\n    }\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type)) {\n    flowParseDeclareTypeAlias();\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._opaque)) {\n    flowParseDeclareOpaqueType();\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface)) {\n    flowParseDeclareInterface();\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export)) {\n    flowParseDeclareExportDeclaration();\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n  }\n}\n\nfunction flowParseDeclareVariable() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  flowParseTypeAnnotatableIdentifier();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.semicolon)();\n}\n\nfunction flowParseDeclareModule() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseExprAtom)();\n  } else {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import)) {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.parseImport)();\n    } else {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n    }\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR);\n}\n\nfunction flowParseDeclareExportDeclaration() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export);\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default)) {\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class)) {\n      // declare export default class ...\n      // declare export default function ...\n      flowParseDeclare();\n    } else {\n      // declare export default [type];\n      flowParseType();\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.semicolon)();\n    }\n  } else if (\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var) || // declare export var ...\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function) || // declare export function ...\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class) || // declare export class ...\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._opaque) // declare export opaque ..\n  ) {\n    flowParseDeclare();\n  } else if (\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star) || // declare export * from ''\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) || // declare export {} ...\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface) || // declare export interface ...\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type) || // declare export type ...\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._opaque) // declare export opaque type ...\n  ) {\n    (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.parseExport)();\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n  }\n}\n\nfunction flowParseDeclareModuleExports() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._exports);\n  flowParseTypeAnnotation();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.semicolon)();\n}\n\nfunction flowParseDeclareTypeAlias() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  flowParseTypeAlias();\n}\n\nfunction flowParseDeclareOpaqueType() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  flowParseOpaqueType(true);\n}\n\nfunction flowParseDeclareInterface() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  flowParseInterfaceish();\n}\n\n// Interfaces\n\nfunction flowParseInterfaceish(isClass = false) {\n  flowParseRestrictedIdentifier();\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterDeclaration();\n  }\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._extends)) {\n    do {\n      flowParseInterfaceExtends();\n    } while (!isClass && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma));\n  }\n\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._mixins)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    do {\n      flowParseInterfaceExtends();\n    } while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma));\n  }\n\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._implements)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    do {\n      flowParseInterfaceExtends();\n    } while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma));\n  }\n\n  flowParseObjectType(isClass, false, isClass);\n}\n\nfunction flowParseInterfaceExtends() {\n  flowParseQualifiedTypeIdentifier(false);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterInstantiation();\n  }\n}\n\nfunction flowParseInterface() {\n  flowParseInterfaceish();\n}\n\nfunction flowParseRestrictedIdentifier() {\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n}\n\nfunction flowParseTypeAlias() {\n  flowParseRestrictedIdentifier();\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterDeclaration();\n  }\n\n  flowParseTypeInitialiser(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.semicolon)();\n}\n\nfunction flowParseOpaqueType(declare) {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type);\n  flowParseRestrictedIdentifier();\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterDeclaration();\n  }\n\n  // Parse the supertype\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    flowParseTypeInitialiser(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  }\n\n  if (!declare) {\n    flowParseTypeInitialiser(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq);\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.semicolon)();\n}\n\nfunction flowParseTypeParameter() {\n  flowParseVariance();\n  flowParseTypeAnnotatableIdentifier();\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n    flowParseType();\n  }\n}\n\nfunction flowParseTypeParameterDeclaration() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  // istanbul ignore else: this condition is already checked at all call sites\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.typeParameterStart)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n  }\n\n  do {\n    flowParseTypeParameter();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan)) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n    }\n  } while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan);\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\nfunction flowParseTypeParameterInstantiation() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan);\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    flowParseType();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan)) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n    }\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan);\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\nfunction flowParseInterfaceType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._extends)) {\n    do {\n      flowParseInterfaceExtends();\n    } while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma));\n  }\n  flowParseObjectType(false, false, false);\n}\n\nfunction flowParseObjectPropertyKey() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.num) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseExprAtom)();\n  } else {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n}\n\nfunction flowParseObjectTypeIndexer() {\n  // Note: bracketL has already been consumed\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon) {\n    flowParseObjectPropertyKey();\n    flowParseTypeInitialiser();\n  } else {\n    flowParseType();\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n  flowParseTypeInitialiser();\n}\n\nfunction flowParseObjectTypeInternalSlot() {\n  // Note: both bracketL have already been consumed\n  flowParseObjectPropertyKey();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n    flowParseObjectTypeMethodish();\n  } else {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n    flowParseTypeInitialiser();\n  }\n}\n\nfunction flowParseObjectTypeMethodish() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterDeclaration();\n  }\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    flowParseFunctionTypeParam();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR)) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n    }\n  }\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis)) {\n    flowParseFunctionTypeParam();\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n  flowParseTypeInitialiser();\n}\n\nfunction flowParseObjectTypeCallProperty() {\n  flowParseObjectTypeMethodish();\n}\n\nfunction flowParseObjectType(allowStatic, allowExact, allowProto) {\n  let endDelim;\n  if (allowExact && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceBarL)) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceBarL);\n    endDelim = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceBarR;\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n    endDelim = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR;\n  }\n\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(endDelim) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    if (allowProto && (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._proto)) {\n      const lookahead = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)();\n      if (lookahead !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon && lookahead !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n        allowStatic = false;\n      }\n    }\n    if (allowStatic && (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._static)) {\n      const lookahead = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)();\n      if (lookahead !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon && lookahead !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      }\n    }\n\n    flowParseVariance();\n\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)) {\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)) {\n        flowParseObjectTypeInternalSlot();\n      } else {\n        flowParseObjectTypeIndexer();\n      }\n    } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n      flowParseObjectTypeCallProperty();\n    } else {\n      if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._get) || (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._set)) {\n        const lookahead = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)();\n        if (lookahead === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name || lookahead === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string || lookahead === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.num) {\n          (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n        }\n      }\n\n      flowParseObjectTypeProperty();\n    }\n\n    flowObjectTypeSemicolon();\n  }\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(endDelim);\n}\n\nfunction flowParseObjectTypeProperty() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis)) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis);\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma)) {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.semi);\n    }\n    // Explicit inexact object syntax.\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n      return;\n    }\n    flowParseType();\n  } else {\n    flowParseObjectPropertyKey();\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n      // This is a method property\n      flowParseObjectTypeMethodish();\n    } else {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n      flowParseTypeInitialiser();\n    }\n  }\n}\n\nfunction flowObjectTypeSemicolon() {\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.semi) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceBarR)) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n  }\n}\n\nfunction flowParseQualifiedTypeIdentifier(initialIdAlreadyParsed) {\n  if (!initialIdAlreadyParsed) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n  while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n}\n\nfunction flowParseGenericType() {\n  flowParseQualifiedTypeIdentifier(true);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterInstantiation();\n  }\n}\n\nfunction flowParseTypeofType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._typeof);\n  flowParsePrimaryType();\n}\n\nfunction flowParseTupleType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL);\n  // We allow trailing commas\n  while (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.pos < _traverser_base__WEBPACK_IMPORTED_MODULE_3__.input.length && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR)) {\n    flowParseType();\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR)) {\n      break;\n    }\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n}\n\nfunction flowParseFunctionTypeParam() {\n  const lookahead = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)();\n  if (lookahead === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon || lookahead === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n    flowParseTypeInitialiser();\n  } else {\n    flowParseType();\n  }\n}\n\nfunction flowParseFunctionTypeParams() {\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    flowParseFunctionTypeParam();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR)) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n    }\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis)) {\n    flowParseFunctionTypeParam();\n  }\n}\n\n// The parsing of types roughly parallels the parsing of expressions, and\n// primary types are kind of like primary expressions...they're the\n// primitives with which other types are constructed.\nfunction flowParsePrimaryType() {\n  let isGroupedType = false;\n  const oldNoAnonFunctionType = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType;\n\n  switch (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type) {\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name: {\n      if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface)) {\n        flowParseInterfaceType();\n        return;\n      }\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n      flowParseGenericType();\n      return;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL:\n      flowParseObjectType(false, false, false);\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceBarL:\n      flowParseObjectType(false, true, false);\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL:\n      flowParseTupleType();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan:\n      flowParseTypeParameterDeclaration();\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n      flowParseFunctionTypeParams();\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow);\n      flowParseType();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n\n      // Check to see if this is actually a grouped type\n      if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis)) {\n        if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n          const token = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)();\n          isGroupedType = token !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question && token !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon;\n        } else {\n          isGroupedType = true;\n        }\n      }\n\n      if (isGroupedType) {\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType = false;\n        flowParseType();\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n        // A `,` or a `) =>` means this is an anonymous function type\n        if (\n          _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType ||\n          !((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow))\n        ) {\n          (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n          return;\n        } else {\n          // Eat a comma if there is one\n          (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n        }\n      }\n\n      flowParseFunctionTypeParams();\n\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow);\n      flowParseType();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.minus:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseLiteral)();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.num:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._true:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._false:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._null:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._this:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._void:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      return;\n\n    default:\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._typeof) {\n        flowParseTypeofType();\n        return;\n      } else if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.IS_KEYWORD) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name;\n        return;\n      }\n  }\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n}\n\nfunction flowParsePostfixType() {\n  flowParsePrimaryType();\n  while (!(0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.canInsertSemicolon)() && ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.questionDot))) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.questionDot);\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL);\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR)) {\n      // Array type\n    } else {\n      // Indexed access type\n      flowParseType();\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n    }\n  }\n}\n\nfunction flowParsePrefixType() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question)) {\n    flowParsePrefixType();\n  } else {\n    flowParsePostfixType();\n  }\n}\n\nfunction flowParseAnonFunctionWithoutParens() {\n  flowParsePrefixType();\n  if (!_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow)) {\n    flowParseType();\n  }\n}\n\nfunction flowParseIntersectionType() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseAND);\n  flowParseAnonFunctionWithoutParens();\n  while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseAND)) {\n    flowParseAnonFunctionWithoutParens();\n  }\n}\n\nfunction flowParseUnionType() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseOR);\n  flowParseIntersectionType();\n  while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseOR)) {\n    flowParseIntersectionType();\n  }\n}\n\nfunction flowParseType() {\n  flowParseUnionType();\n}\n\nfunction flowParseTypeAnnotation() {\n  flowParseTypeInitialiser();\n}\n\nfunction flowParseTypeAnnotatableIdentifier() {\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    flowParseTypeAnnotation();\n  }\n}\n\nfunction flowParseVariance() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.plus) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.minus)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].isType = true;\n  }\n}\n\n// ==================================\n// Overrides\n// ==================================\n\nfunction flowParseFunctionBodyAndFinish(funcContextId) {\n  // For arrow functions, `parseArrow` handles the return type itself.\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    flowParseTypeAndPredicateInitialiser();\n  }\n\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseFunctionBody)(false, funcContextId);\n}\n\nfunction flowParseSubscript(\n  startTokenIndex,\n  noCalls,\n  stopState,\n) {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.questionDot) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) {\n    if (noCalls) {\n      stopState.stop = true;\n      return;\n    }\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    flowParseTypeParameterInstantiation();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseCallExpressionArguments)();\n    return;\n  } else if (!noCalls && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n    flowParseTypeParameterInstantiation();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseCallExpressionArguments)();\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    } else {\n      return;\n    }\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseSubscript)(startTokenIndex, noCalls, stopState);\n}\n\nfunction flowStartParseNewArguments() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n    flowParseTypeParameterInstantiation();\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    }\n  }\n}\n\n// interfaces\nfunction flowTryParseStatement() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) && _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    flowParseInterface();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    return true;\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum)) {\n    flowParseEnumDeclaration();\n    return true;\n  }\n  return false;\n}\n\nfunction flowTryParseExportDefaultExpression() {\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum)) {\n    flowParseEnumDeclaration();\n    return true;\n  }\n  return false;\n}\n\n// declares, interfaces and type aliases\nfunction flowParseIdentifierStatement(contextualKeyword) {\n  if (contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._declare) {\n    if (\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export)\n    ) {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      flowParseDeclare();\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    }\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n    if (contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface) {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      flowParseInterface();\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    } else if (contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type) {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      flowParseTypeAlias();\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    } else if (contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._opaque) {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      flowParseOpaqueType(false);\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    }\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.semicolon)();\n}\n\n// export type\nfunction flowShouldParseExportDeclaration() {\n  return (\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type) ||\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface) ||\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._opaque) ||\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum)\n  );\n}\n\nfunction flowShouldDisallowExportDefaultSpecifier() {\n  return (\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) &&\n    (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type ||\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface ||\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._opaque ||\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum)\n  );\n}\n\nfunction flowParseExportDeclaration() {\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type)) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n      // export type { foo, bar };\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.parseExportSpecifiers)();\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.parseExportFrom)();\n    } else {\n      // export type Foo = Bar;\n      flowParseTypeAlias();\n    }\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._opaque)) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    // export opaque type Foo = Bar;\n    flowParseOpaqueType(false);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface)) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    flowParseInterface();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  } else {\n    (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.parseStatement)(true);\n  }\n}\n\nfunction flowShouldParseExportStar() {\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star) || ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star);\n}\n\nfunction flowParseExportStar() {\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type)) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(2);\n    (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.baseParseExportStar)();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  } else {\n    (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.baseParseExportStar)();\n  }\n}\n\n// parse a the super class type parameters and implements\nfunction flowAfterParseClassSuper(hasSuper) {\n  if (hasSuper && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterInstantiation();\n  }\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._implements)) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._implements;\n    do {\n      flowParseRestrictedIdentifier();\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n        flowParseTypeParameterInstantiation();\n      }\n    } while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma));\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  }\n}\n\n// parse type parameters for object method shorthand\nfunction flowStartParseObjPropValue() {\n  // method shorthand\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    flowParseTypeParameterDeclaration();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n  }\n}\n\nfunction flowParseAssignableListItemTypes() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    flowParseTypeAnnotation();\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\n// parse typeof and type imports\nfunction flowStartParseImportSpecifiers() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._typeof) || (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type)) {\n    const lh = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadTypeAndKeyword)();\n    if (isMaybeDefaultImport(lh) || lh.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL || lh.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star) {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    }\n  }\n}\n\n// parse import-type/typeof shorthand\nfunction flowParseImportSpecifier() {\n  const isTypeKeyword =\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type || _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._typeof;\n  if (isTypeKeyword) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  } else {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._as) && !(0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.isLookaheadContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._as)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n    if (isTypeKeyword && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) && !(_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.IS_KEYWORD)) {\n      // `import {type as ,` or `import {type as }`\n    } else {\n      // `import {type as foo`\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n    }\n  } else {\n    if (isTypeKeyword && ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) || !!(_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.IS_KEYWORD))) {\n      // `import {type foo`\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n    }\n    if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._as)) {\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n    }\n  }\n}\n\n// parse function type parameters - function foo<T>() {}\nfunction flowStartParseFunctionParams() {\n  // Originally this checked if the method is a getter/setter, but if it was, we'd crash soon\n  // anyway, so don't try to propagate that information.\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n    flowParseTypeParameterDeclaration();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  }\n}\n\n// parse flow type annotations on variable declarator heads - let foo: string = bar\nfunction flowAfterParseVarHead() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    flowParseTypeAnnotation();\n  }\n}\n\n// parse the return type of an async arrow function - let foo = (async (): number => {});\nfunction flowStartParseAsyncArrowFromCallExpression() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    const oldNoAnonFunctionType = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType = true;\n    flowParseTypeAnnotation();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType = oldNoAnonFunctionType;\n  }\n}\n\n// We need to support type parameter declarations for arrow functions. This\n// is tricky. There are three situations we need to handle\n//\n// 1. This is either JSX or an arrow function. We'll try JSX first. If that\n//    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n//    error.\n// 2. This is an arrow function. We'll parse the type parameter declaration,\n//    parse the rest, make sure the rest is an arrow function, and go from\n//    there\n// 3. This is neither. Just call the super method\nfunction flowParseMaybeAssign(noIn, isWithinParens) {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n    let wasArrow = (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.typeParameterStart;\n    } else {\n      return wasArrow;\n    }\n\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n    flowParseTypeParameterDeclaration();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    wasArrow = (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n    if (wasArrow) {\n      return true;\n    }\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n  }\n\n  return (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n}\n\n// handle return types for arrow functions\nfunction flowParseArrow() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n\n    const oldNoAnonFunctionType = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType = true;\n    flowParseTypeAndPredicateInitialiser();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n    if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.canInsertSemicolon)()) (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow)) (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.unexpected)();\n\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    }\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  }\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow);\n}\n\nfunction flowParseSubscripts(startTokenIndex, noCalls = false) {\n  if (\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._async &&\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)\n  ) {\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n    const wasArrow = parseAsyncArrowWithTypeParameters();\n    if (wasArrow && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      return;\n    }\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n  }\n\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseSubscripts)(startTokenIndex, noCalls);\n}\n\n// Returns true if there was an arrow function here.\nfunction parseAsyncArrowWithTypeParameters() {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.scopeDepth++;\n  const startTokenIndex = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length;\n  (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_5__.parseFunctionParams)();\n  if (!(0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseArrow)()) {\n    return false;\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseArrowExpression)(startTokenIndex);\n  return true;\n}\n\nfunction flowParseEnumDeclaration() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum);\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._enum;\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  flowParseEnumBody();\n}\n\nfunction flowParseEnumBody() {\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._of)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n  flowParseEnumMembers();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR);\n}\n\nfunction flowParseEnumMembers() {\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis)) {\n      break;\n    }\n    flowParseEnumMember();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_6__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n    }\n  }\n}\n\nfunction flowParseEnumMember() {\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n    // Flow enum values are always just one token (a string, number, or boolean literal).\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/flow.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/jsx/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/plugins/jsx/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsxParseElement: function() { return /* binding */ jsxParseElement; },\n/* harmony export */   nextJSXTagToken: function() { return /* binding */ nextJSXTagToken; }\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _traverser_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../traverser/base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _traverser_expression__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../traverser/expression */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js\");\n/* harmony import */ var _traverser_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../traverser/util */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _util_identifier__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util/identifier */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/identifier.js\");\n/* harmony import */ var _typescript__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../typescript */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/typescript.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Read token with JSX contents.\n *\n * In addition to detecting jsxTagStart and also regular tokens that might be\n * part of an expression, this code detects the start and end of text ranges\n * within JSX children. In order to properly count the number of children, we\n * distinguish jsxText from jsxEmptyText, which is a text range that simplifies\n * to the empty string after JSX whitespace trimming.\n *\n * It turns out that a JSX text range will simplify to the empty string if and\n * only if both of these conditions hold:\n * - The range consists entirely of whitespace characters (only counting space,\n *   tab, \\r, and \\n).\n * - The range has at least one newline.\n * This can be proven by analyzing any implementation of whitespace trimming,\n * e.g. formatJSXTextLiteral in Sucrase or cleanJSXElementLiteralChild in Babel.\n */\nfunction jsxReadToken() {\n  let sawNewline = false;\n  let sawNonWhitespace = false;\n  while (true) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos >= _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.length) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.unexpected)(\"Unterminated JSX contents\");\n      return;\n    }\n\n    const ch = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos);\n    if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lessThan || ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.leftCurlyBrace) {\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos === _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.start) {\n        if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lessThan) {\n          _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos++;\n          (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagStart);\n          return;\n        }\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.getTokenFromCode)(ch);\n        return;\n      }\n      if (sawNewline && !sawNonWhitespace) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxEmptyText);\n      } else {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxText);\n      }\n      return;\n    }\n\n    // This is part of JSX text.\n    if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lineFeed) {\n      sawNewline = true;\n    } else if (ch !== _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.space && ch !== _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.carriageReturn && ch !== _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.tab) {\n      sawNonWhitespace = true;\n    }\n    _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos++;\n  }\n}\n\nfunction jsxReadString(quote) {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos++;\n  for (;;) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos >= _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.length) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.unexpected)(\"Unterminated string constant\");\n      return;\n    }\n\n    const ch = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos);\n    if (ch === quote) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos++;\n      break;\n    }\n    _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos++;\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.string);\n}\n\n// Read a JSX identifier (valid tag or attribute name).\n//\n// Optimized version since JSX identifiers can't contain\n// escape characters and so can be read as single slice.\n// Also assumes that first character was already checked\n// by isIdentifierStart in readToken.\n\nfunction jsxReadWord() {\n  let ch;\n  do {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos > _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.length) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.unexpected)(\"Unexpectedly reached the end of input.\");\n      return;\n    }\n    ch = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(++_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos);\n  } while (_util_identifier__WEBPACK_IMPORTED_MODULE_6__.IS_IDENTIFIER_CHAR[ch] || ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.dash);\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxName);\n}\n\n// Parse next token as JSX identifier\nfunction jsxParseIdentifier() {\n  nextJSXTagToken();\n}\n\n// Parse namespaced identifier.\nfunction jsxParseNamespacedName(identifierRole) {\n  jsxParseIdentifier();\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.colon)) {\n    // Plain identifier, so this is an access.\n    _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens.length - 1].identifierRole = identifierRole;\n    return;\n  }\n  // Process the second half of the namespaced name.\n  jsxParseIdentifier();\n}\n\n// Parses element name in any form - namespaced, member\n// or single identifier.\nfunction jsxParseElementName() {\n  const firstTokenIndex = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens.length;\n  jsxParseNamespacedName(_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.Access);\n  let hadDot = false;\n  while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.dot)) {\n    hadDot = true;\n    nextJSXTagToken();\n    jsxParseIdentifier();\n  }\n  // For tags like <div> with a lowercase letter and no dots, the name is\n  // actually *not* an identifier access, since it's referring to a built-in\n  // tag name. Remove the identifier role in this case so that it's not\n  // accidentally transformed by the imports transform when preserving JSX.\n  if (!hadDot) {\n    const firstToken = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens[firstTokenIndex];\n    const firstChar = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(firstToken.start);\n    if (firstChar >= _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lowercaseA && firstChar <= _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lowercaseZ) {\n      firstToken.identifierRole = null;\n    }\n  }\n}\n\n// Parses any type of JSX attribute value.\nfunction jsxParseAttributeValue() {\n  switch (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.type) {\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_3__.parseExpression)();\n      nextJSXTagToken();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagStart:\n      jsxParseElement();\n      nextJSXTagToken();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.string:\n      nextJSXTagToken();\n      return;\n\n    default:\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.unexpected)(\"JSX value should be either an expression or a quoted JSX text\");\n  }\n}\n\n// Parse JSX spread child, after already processing the {\n// Does not parse the closing }\nfunction jsxParseSpreadChild() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.ellipsis);\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_3__.parseExpression)();\n}\n\n// Parses JSX opening tag starting after \"<\".\n// Returns true if the tag was self-closing.\n// Does not parse the last token.\nfunction jsxParseOpeningElement(initialTokenIndex) {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagEnd)) {\n    // This is an open-fragment.\n    return false;\n  }\n  jsxParseElementName();\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.isTypeScriptEnabled) {\n    (0,_typescript__WEBPACK_IMPORTED_MODULE_7__.tsTryParseJSXTypeArgument)();\n  }\n  let hasSeenPropSpread = false;\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.slash) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagEnd) && !_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.error) {\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL)) {\n      hasSeenPropSpread = true;\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.ellipsis);\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_3__.parseMaybeAssign)();\n      // }\n      nextJSXTagToken();\n      continue;\n    }\n    if (\n      hasSeenPropSpread &&\n      _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.end - _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.start === 3 &&\n      _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.start) === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lowercaseK &&\n      _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.start + 1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lowercaseE &&\n      _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.start + 2) === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lowercaseY\n    ) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens[initialTokenIndex].jsxRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.JSXRole.KeyAfterPropSpread;\n    }\n    jsxParseNamespacedName(_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ObjectKey);\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq)) {\n      nextJSXTagToken();\n      jsxParseAttributeValue();\n    }\n  }\n  const isSelfClosing = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.slash);\n  if (isSelfClosing) {\n    // /\n    nextJSXTagToken();\n  }\n  return isSelfClosing;\n}\n\n// Parses JSX closing tag starting after \"</\".\n// Does not parse the last token.\nfunction jsxParseClosingElement() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagEnd)) {\n    // Fragment syntax, so we immediately have a tag end.\n    return;\n  }\n  jsxParseElementName();\n}\n\n// Parses entire JSX element, including its opening tag\n// (starting after \"<\"), attributes, contents and closing tag.\n// Does not parse the last token.\nfunction jsxParseElementAt() {\n  const initialTokenIndex = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens.length - 1;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens[initialTokenIndex].jsxRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.JSXRole.NoChildren;\n  let numExplicitChildren = 0;\n  const isSelfClosing = jsxParseOpeningElement(initialTokenIndex);\n  if (!isSelfClosing) {\n    nextJSXExprToken();\n    while (true) {\n      switch (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.type) {\n        case _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagStart:\n          nextJSXTagToken();\n          if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.slash)) {\n            nextJSXTagToken();\n            jsxParseClosingElement();\n            // Key after prop spread takes precedence over number of children,\n            // since it means we switch to createElement, which doesn't care\n            // about number of children.\n            if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens[initialTokenIndex].jsxRole !== _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.JSXRole.KeyAfterPropSpread) {\n              if (numExplicitChildren === 1) {\n                _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens[initialTokenIndex].jsxRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.JSXRole.OneChild;\n              } else if (numExplicitChildren > 1) {\n                _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens[initialTokenIndex].jsxRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.JSXRole.StaticChildren;\n              }\n            }\n            return;\n          }\n          numExplicitChildren++;\n          jsxParseElementAt();\n          nextJSXExprToken();\n          break;\n\n        case _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxText:\n          numExplicitChildren++;\n          nextJSXExprToken();\n          break;\n\n        case _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxEmptyText:\n          nextJSXExprToken();\n          break;\n\n        case _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL:\n          (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n          if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.ellipsis)) {\n            jsxParseSpreadChild();\n            nextJSXExprToken();\n            // Spread children are a mechanism to explicitly mark children as\n            // static, so count it as 2 children to satisfy the \"more than one\n            // child\" condition.\n            numExplicitChildren += 2;\n          } else {\n            // If we see {}, this is an empty pseudo-expression that doesn't\n            // count as a child.\n            if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR)) {\n              numExplicitChildren++;\n              (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_3__.parseExpression)();\n            }\n            nextJSXExprToken();\n          }\n\n          break;\n\n        // istanbul ignore next - should never happen\n        default:\n          (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.unexpected)();\n          return;\n      }\n    }\n  }\n}\n\n// Parses entire JSX element from current position.\n// Does not parse the last token.\nfunction jsxParseElement() {\n  nextJSXTagToken();\n  jsxParseElementAt();\n}\n\n// ==================================\n// Overrides\n// ==================================\n\nfunction nextJSXTagToken() {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens.push(new _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.Token());\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.skipSpace)();\n  _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.start = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos;\n  const code = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos);\n\n  if (_util_identifier__WEBPACK_IMPORTED_MODULE_6__.IS_IDENTIFIER_START[code]) {\n    jsxReadWord();\n  } else if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.quotationMark || code === _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.apostrophe) {\n    jsxReadString(code);\n  } else {\n    // The following tokens are just one character each.\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos;\n    switch (code) {\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.greaterThan:\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagEnd);\n        break;\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.lessThan:\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagStart);\n        break;\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.slash:\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.slash);\n        break;\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.equalsTo:\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq);\n        break;\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.leftCurlyBrace:\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL);\n        break;\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.dot:\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.dot);\n        break;\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_5__.charCodes.colon:\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.colon);\n        break;\n      default:\n        (0,_traverser_util__WEBPACK_IMPORTED_MODULE_4__.unexpected)();\n    }\n  }\n}\n\nfunction nextJSXExprToken() {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.tokens.push(new _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.Token());\n  _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.start = _traverser_base__WEBPACK_IMPORTED_MODULE_2__.state.pos;\n  jsxReadToken();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/jsx/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/jsx/xhtml.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/plugins/jsx/xhtml.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// Use a Map rather than object to avoid unexpected __proto__ access.\n/* harmony default export */ __webpack_exports__[\"default\"] = (new Map([\n  [\"quot\", \"\\u0022\"],\n  [\"amp\", \"&\"],\n  [\"apos\", \"\\u0027\"],\n  [\"lt\", \"<\"],\n  [\"gt\", \">\"],\n  [\"nbsp\", \"\\u00A0\"],\n  [\"iexcl\", \"\\u00A1\"],\n  [\"cent\", \"\\u00A2\"],\n  [\"pound\", \"\\u00A3\"],\n  [\"curren\", \"\\u00A4\"],\n  [\"yen\", \"\\u00A5\"],\n  [\"brvbar\", \"\\u00A6\"],\n  [\"sect\", \"\\u00A7\"],\n  [\"uml\", \"\\u00A8\"],\n  [\"copy\", \"\\u00A9\"],\n  [\"ordf\", \"\\u00AA\"],\n  [\"laquo\", \"\\u00AB\"],\n  [\"not\", \"\\u00AC\"],\n  [\"shy\", \"\\u00AD\"],\n  [\"reg\", \"\\u00AE\"],\n  [\"macr\", \"\\u00AF\"],\n  [\"deg\", \"\\u00B0\"],\n  [\"plusmn\", \"\\u00B1\"],\n  [\"sup2\", \"\\u00B2\"],\n  [\"sup3\", \"\\u00B3\"],\n  [\"acute\", \"\\u00B4\"],\n  [\"micro\", \"\\u00B5\"],\n  [\"para\", \"\\u00B6\"],\n  [\"middot\", \"\\u00B7\"],\n  [\"cedil\", \"\\u00B8\"],\n  [\"sup1\", \"\\u00B9\"],\n  [\"ordm\", \"\\u00BA\"],\n  [\"raquo\", \"\\u00BB\"],\n  [\"frac14\", \"\\u00BC\"],\n  [\"frac12\", \"\\u00BD\"],\n  [\"frac34\", \"\\u00BE\"],\n  [\"iquest\", \"\\u00BF\"],\n  [\"Agrave\", \"\\u00C0\"],\n  [\"Aacute\", \"\\u00C1\"],\n  [\"Acirc\", \"\\u00C2\"],\n  [\"Atilde\", \"\\u00C3\"],\n  [\"Auml\", \"\\u00C4\"],\n  [\"Aring\", \"\\u00C5\"],\n  [\"AElig\", \"\\u00C6\"],\n  [\"Ccedil\", \"\\u00C7\"],\n  [\"Egrave\", \"\\u00C8\"],\n  [\"Eacute\", \"\\u00C9\"],\n  [\"Ecirc\", \"\\u00CA\"],\n  [\"Euml\", \"\\u00CB\"],\n  [\"Igrave\", \"\\u00CC\"],\n  [\"Iacute\", \"\\u00CD\"],\n  [\"Icirc\", \"\\u00CE\"],\n  [\"Iuml\", \"\\u00CF\"],\n  [\"ETH\", \"\\u00D0\"],\n  [\"Ntilde\", \"\\u00D1\"],\n  [\"Ograve\", \"\\u00D2\"],\n  [\"Oacute\", \"\\u00D3\"],\n  [\"Ocirc\", \"\\u00D4\"],\n  [\"Otilde\", \"\\u00D5\"],\n  [\"Ouml\", \"\\u00D6\"],\n  [\"times\", \"\\u00D7\"],\n  [\"Oslash\", \"\\u00D8\"],\n  [\"Ugrave\", \"\\u00D9\"],\n  [\"Uacute\", \"\\u00DA\"],\n  [\"Ucirc\", \"\\u00DB\"],\n  [\"Uuml\", \"\\u00DC\"],\n  [\"Yacute\", \"\\u00DD\"],\n  [\"THORN\", \"\\u00DE\"],\n  [\"szlig\", \"\\u00DF\"],\n  [\"agrave\", \"\\u00E0\"],\n  [\"aacute\", \"\\u00E1\"],\n  [\"acirc\", \"\\u00E2\"],\n  [\"atilde\", \"\\u00E3\"],\n  [\"auml\", \"\\u00E4\"],\n  [\"aring\", \"\\u00E5\"],\n  [\"aelig\", \"\\u00E6\"],\n  [\"ccedil\", \"\\u00E7\"],\n  [\"egrave\", \"\\u00E8\"],\n  [\"eacute\", \"\\u00E9\"],\n  [\"ecirc\", \"\\u00EA\"],\n  [\"euml\", \"\\u00EB\"],\n  [\"igrave\", \"\\u00EC\"],\n  [\"iacute\", \"\\u00ED\"],\n  [\"icirc\", \"\\u00EE\"],\n  [\"iuml\", \"\\u00EF\"],\n  [\"eth\", \"\\u00F0\"],\n  [\"ntilde\", \"\\u00F1\"],\n  [\"ograve\", \"\\u00F2\"],\n  [\"oacute\", \"\\u00F3\"],\n  [\"ocirc\", \"\\u00F4\"],\n  [\"otilde\", \"\\u00F5\"],\n  [\"ouml\", \"\\u00F6\"],\n  [\"divide\", \"\\u00F7\"],\n  [\"oslash\", \"\\u00F8\"],\n  [\"ugrave\", \"\\u00F9\"],\n  [\"uacute\", \"\\u00FA\"],\n  [\"ucirc\", \"\\u00FB\"],\n  [\"uuml\", \"\\u00FC\"],\n  [\"yacute\", \"\\u00FD\"],\n  [\"thorn\", \"\\u00FE\"],\n  [\"yuml\", \"\\u00FF\"],\n  [\"OElig\", \"\\u0152\"],\n  [\"oelig\", \"\\u0153\"],\n  [\"Scaron\", \"\\u0160\"],\n  [\"scaron\", \"\\u0161\"],\n  [\"Yuml\", \"\\u0178\"],\n  [\"fnof\", \"\\u0192\"],\n  [\"circ\", \"\\u02C6\"],\n  [\"tilde\", \"\\u02DC\"],\n  [\"Alpha\", \"\\u0391\"],\n  [\"Beta\", \"\\u0392\"],\n  [\"Gamma\", \"\\u0393\"],\n  [\"Delta\", \"\\u0394\"],\n  [\"Epsilon\", \"\\u0395\"],\n  [\"Zeta\", \"\\u0396\"],\n  [\"Eta\", \"\\u0397\"],\n  [\"Theta\", \"\\u0398\"],\n  [\"Iota\", \"\\u0399\"],\n  [\"Kappa\", \"\\u039A\"],\n  [\"Lambda\", \"\\u039B\"],\n  [\"Mu\", \"\\u039C\"],\n  [\"Nu\", \"\\u039D\"],\n  [\"Xi\", \"\\u039E\"],\n  [\"Omicron\", \"\\u039F\"],\n  [\"Pi\", \"\\u03A0\"],\n  [\"Rho\", \"\\u03A1\"],\n  [\"Sigma\", \"\\u03A3\"],\n  [\"Tau\", \"\\u03A4\"],\n  [\"Upsilon\", \"\\u03A5\"],\n  [\"Phi\", \"\\u03A6\"],\n  [\"Chi\", \"\\u03A7\"],\n  [\"Psi\", \"\\u03A8\"],\n  [\"Omega\", \"\\u03A9\"],\n  [\"alpha\", \"\\u03B1\"],\n  [\"beta\", \"\\u03B2\"],\n  [\"gamma\", \"\\u03B3\"],\n  [\"delta\", \"\\u03B4\"],\n  [\"epsilon\", \"\\u03B5\"],\n  [\"zeta\", \"\\u03B6\"],\n  [\"eta\", \"\\u03B7\"],\n  [\"theta\", \"\\u03B8\"],\n  [\"iota\", \"\\u03B9\"],\n  [\"kappa\", \"\\u03BA\"],\n  [\"lambda\", \"\\u03BB\"],\n  [\"mu\", \"\\u03BC\"],\n  [\"nu\", \"\\u03BD\"],\n  [\"xi\", \"\\u03BE\"],\n  [\"omicron\", \"\\u03BF\"],\n  [\"pi\", \"\\u03C0\"],\n  [\"rho\", \"\\u03C1\"],\n  [\"sigmaf\", \"\\u03C2\"],\n  [\"sigma\", \"\\u03C3\"],\n  [\"tau\", \"\\u03C4\"],\n  [\"upsilon\", \"\\u03C5\"],\n  [\"phi\", \"\\u03C6\"],\n  [\"chi\", \"\\u03C7\"],\n  [\"psi\", \"\\u03C8\"],\n  [\"omega\", \"\\u03C9\"],\n  [\"thetasym\", \"\\u03D1\"],\n  [\"upsih\", \"\\u03D2\"],\n  [\"piv\", \"\\u03D6\"],\n  [\"ensp\", \"\\u2002\"],\n  [\"emsp\", \"\\u2003\"],\n  [\"thinsp\", \"\\u2009\"],\n  [\"zwnj\", \"\\u200C\"],\n  [\"zwj\", \"\\u200D\"],\n  [\"lrm\", \"\\u200E\"],\n  [\"rlm\", \"\\u200F\"],\n  [\"ndash\", \"\\u2013\"],\n  [\"mdash\", \"\\u2014\"],\n  [\"lsquo\", \"\\u2018\"],\n  [\"rsquo\", \"\\u2019\"],\n  [\"sbquo\", \"\\u201A\"],\n  [\"ldquo\", \"\\u201C\"],\n  [\"rdquo\", \"\\u201D\"],\n  [\"bdquo\", \"\\u201E\"],\n  [\"dagger\", \"\\u2020\"],\n  [\"Dagger\", \"\\u2021\"],\n  [\"bull\", \"\\u2022\"],\n  [\"hellip\", \"\\u2026\"],\n  [\"permil\", \"\\u2030\"],\n  [\"prime\", \"\\u2032\"],\n  [\"Prime\", \"\\u2033\"],\n  [\"lsaquo\", \"\\u2039\"],\n  [\"rsaquo\", \"\\u203A\"],\n  [\"oline\", \"\\u203E\"],\n  [\"frasl\", \"\\u2044\"],\n  [\"euro\", \"\\u20AC\"],\n  [\"image\", \"\\u2111\"],\n  [\"weierp\", \"\\u2118\"],\n  [\"real\", \"\\u211C\"],\n  [\"trade\", \"\\u2122\"],\n  [\"alefsym\", \"\\u2135\"],\n  [\"larr\", \"\\u2190\"],\n  [\"uarr\", \"\\u2191\"],\n  [\"rarr\", \"\\u2192\"],\n  [\"darr\", \"\\u2193\"],\n  [\"harr\", \"\\u2194\"],\n  [\"crarr\", \"\\u21B5\"],\n  [\"lArr\", \"\\u21D0\"],\n  [\"uArr\", \"\\u21D1\"],\n  [\"rArr\", \"\\u21D2\"],\n  [\"dArr\", \"\\u21D3\"],\n  [\"hArr\", \"\\u21D4\"],\n  [\"forall\", \"\\u2200\"],\n  [\"part\", \"\\u2202\"],\n  [\"exist\", \"\\u2203\"],\n  [\"empty\", \"\\u2205\"],\n  [\"nabla\", \"\\u2207\"],\n  [\"isin\", \"\\u2208\"],\n  [\"notin\", \"\\u2209\"],\n  [\"ni\", \"\\u220B\"],\n  [\"prod\", \"\\u220F\"],\n  [\"sum\", \"\\u2211\"],\n  [\"minus\", \"\\u2212\"],\n  [\"lowast\", \"\\u2217\"],\n  [\"radic\", \"\\u221A\"],\n  [\"prop\", \"\\u221D\"],\n  [\"infin\", \"\\u221E\"],\n  [\"ang\", \"\\u2220\"],\n  [\"and\", \"\\u2227\"],\n  [\"or\", \"\\u2228\"],\n  [\"cap\", \"\\u2229\"],\n  [\"cup\", \"\\u222A\"],\n  [\"int\", \"\\u222B\"],\n  [\"there4\", \"\\u2234\"],\n  [\"sim\", \"\\u223C\"],\n  [\"cong\", \"\\u2245\"],\n  [\"asymp\", \"\\u2248\"],\n  [\"ne\", \"\\u2260\"],\n  [\"equiv\", \"\\u2261\"],\n  [\"le\", \"\\u2264\"],\n  [\"ge\", \"\\u2265\"],\n  [\"sub\", \"\\u2282\"],\n  [\"sup\", \"\\u2283\"],\n  [\"nsub\", \"\\u2284\"],\n  [\"sube\", \"\\u2286\"],\n  [\"supe\", \"\\u2287\"],\n  [\"oplus\", \"\\u2295\"],\n  [\"otimes\", \"\\u2297\"],\n  [\"perp\", \"\\u22A5\"],\n  [\"sdot\", \"\\u22C5\"],\n  [\"lceil\", \"\\u2308\"],\n  [\"rceil\", \"\\u2309\"],\n  [\"lfloor\", \"\\u230A\"],\n  [\"rfloor\", \"\\u230B\"],\n  [\"lang\", \"\\u2329\"],\n  [\"rang\", \"\\u232A\"],\n  [\"loz\", \"\\u25CA\"],\n  [\"spades\", \"\\u2660\"],\n  [\"clubs\", \"\\u2663\"],\n  [\"hearts\", \"\\u2665\"],\n  [\"diams\", \"\\u2666\"],\n]));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/jsx/xhtml.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/plugins/types.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   typedParseConditional: function() { return /* binding */ typedParseConditional; },\n/* harmony export */   typedParseParenItem: function() { return /* binding */ typedParseParenItem; }\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _traverser_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../traverser/base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _traverser_expression__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../traverser/expression */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js\");\n/* harmony import */ var _flow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flow */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/flow.js\");\n/* harmony import */ var _typescript__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./typescript */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/typescript.js\");\n\n\n\n\n\n\n\n/**\n * Common parser code for TypeScript and Flow.\n */\n\n// An apparent conditional expression could actually be an optional parameter in an arrow function.\nfunction typedParseConditional(noIn) {\n  // If we see ?:, this can't possibly be a valid conditional. typedParseParenItem will be called\n  // later to finish off the arrow parameter. We also need to handle bare ? tokens for optional\n  // parameters without type annotations, i.e. ?, and ?) .\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.question)) {\n    const nextType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)();\n    if (nextType === _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.colon || nextType === _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma || nextType === _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR) {\n      return;\n    }\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_3__.baseParseConditional)(noIn);\n}\n\n// Note: These \"type casts\" are *not* valid TS expressions.\n// But we parse them here and change them when completing the arrow function.\nfunction typedParseParenItem() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eatTypeToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.question);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.colon)) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.isTypeScriptEnabled) {\n      (0,_typescript__WEBPACK_IMPORTED_MODULE_5__.tsParseTypeAnnotation)();\n    } else if (_traverser_base__WEBPACK_IMPORTED_MODULE_2__.isFlowEnabled) {\n      (0,_flow__WEBPACK_IMPORTED_MODULE_4__.flowParseTypeAnnotation)();\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci9wbHVnaW5zL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNFO0FBQ25CO0FBQ2tCO0FBQ1I7QUFDZDtBQUNJOztBQUVuRDtBQUNBO0FBQ0E7O0FBRUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdURBQUssQ0FBQyx1REFBRTtBQUNkLHFCQUFxQiwrREFBYTtBQUNsQyxxQkFBcUIsdURBQUUsdUJBQXVCLHVEQUFFLHVCQUF1Qix1REFBRTtBQUN6RTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJFQUFvQjtBQUN0Qjs7QUFFQTtBQUNBO0FBQ087QUFDUCxFQUFFLDhEQUFZLENBQUMsdURBQUU7QUFDakIsTUFBTSx1REFBSyxDQUFDLHVEQUFFO0FBQ2QsUUFBUSxnRUFBbUI7QUFDM0IsTUFBTSxrRUFBcUI7QUFDM0IsTUFBTSxTQUFTLDBEQUFhO0FBQzVCLE1BQU0sOERBQXVCO0FBQzdCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS9wYXJzZXIvcGx1Z2lucy90eXBlcy5qcz9hNTkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZWF0VHlwZVRva2VuLCBsb29rYWhlYWRUeXBlLCBtYXRjaH0gZnJvbSBcIi4uL3Rva2VuaXplci9pbmRleFwiO1xuaW1wb3J0IHtUb2tlblR5cGUgYXMgdHR9IGZyb20gXCIuLi90b2tlbml6ZXIvdHlwZXNcIjtcbmltcG9ydCB7aXNGbG93RW5hYmxlZCwgaXNUeXBlU2NyaXB0RW5hYmxlZH0gZnJvbSBcIi4uL3RyYXZlcnNlci9iYXNlXCI7XG5pbXBvcnQge2Jhc2VQYXJzZUNvbmRpdGlvbmFsfSBmcm9tIFwiLi4vdHJhdmVyc2VyL2V4cHJlc3Npb25cIjtcbmltcG9ydCB7Zmxvd1BhcnNlVHlwZUFubm90YXRpb259IGZyb20gXCIuL2Zsb3dcIjtcbmltcG9ydCB7dHNQYXJzZVR5cGVBbm5vdGF0aW9ufSBmcm9tIFwiLi90eXBlc2NyaXB0XCI7XG5cbi8qKlxuICogQ29tbW9uIHBhcnNlciBjb2RlIGZvciBUeXBlU2NyaXB0IGFuZCBGbG93LlxuICovXG5cbi8vIEFuIGFwcGFyZW50IGNvbmRpdGlvbmFsIGV4cHJlc3Npb24gY291bGQgYWN0dWFsbHkgYmUgYW4gb3B0aW9uYWwgcGFyYW1ldGVyIGluIGFuIGFycm93IGZ1bmN0aW9uLlxuZXhwb3J0IGZ1bmN0aW9uIHR5cGVkUGFyc2VDb25kaXRpb25hbChub0luKSB7XG4gIC8vIElmIHdlIHNlZSA/OiwgdGhpcyBjYW4ndCBwb3NzaWJseSBiZSBhIHZhbGlkIGNvbmRpdGlvbmFsLiB0eXBlZFBhcnNlUGFyZW5JdGVtIHdpbGwgYmUgY2FsbGVkXG4gIC8vIGxhdGVyIHRvIGZpbmlzaCBvZmYgdGhlIGFycm93IHBhcmFtZXRlci4gV2UgYWxzbyBuZWVkIHRvIGhhbmRsZSBiYXJlID8gdG9rZW5zIGZvciBvcHRpb25hbFxuICAvLyBwYXJhbWV0ZXJzIHdpdGhvdXQgdHlwZSBhbm5vdGF0aW9ucywgaS5lLiA/LCBhbmQgPykgLlxuICBpZiAobWF0Y2godHQucXVlc3Rpb24pKSB7XG4gICAgY29uc3QgbmV4dFR5cGUgPSBsb29rYWhlYWRUeXBlKCk7XG4gICAgaWYgKG5leHRUeXBlID09PSB0dC5jb2xvbiB8fCBuZXh0VHlwZSA9PT0gdHQuY29tbWEgfHwgbmV4dFR5cGUgPT09IHR0LnBhcmVuUikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuICBiYXNlUGFyc2VDb25kaXRpb25hbChub0luKTtcbn1cblxuLy8gTm90ZTogVGhlc2UgXCJ0eXBlIGNhc3RzXCIgYXJlICpub3QqIHZhbGlkIFRTIGV4cHJlc3Npb25zLlxuLy8gQnV0IHdlIHBhcnNlIHRoZW0gaGVyZSBhbmQgY2hhbmdlIHRoZW0gd2hlbiBjb21wbGV0aW5nIHRoZSBhcnJvdyBmdW5jdGlvbi5cbmV4cG9ydCBmdW5jdGlvbiB0eXBlZFBhcnNlUGFyZW5JdGVtKCkge1xuICBlYXRUeXBlVG9rZW4odHQucXVlc3Rpb24pO1xuICBpZiAobWF0Y2godHQuY29sb24pKSB7XG4gICAgaWYgKGlzVHlwZVNjcmlwdEVuYWJsZWQpIHtcbiAgICAgIHRzUGFyc2VUeXBlQW5ub3RhdGlvbigpO1xuICAgIH0gZWxzZSBpZiAoaXNGbG93RW5hYmxlZCkge1xuICAgICAgZmxvd1BhcnNlVHlwZUFubm90YXRpb24oKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/typescript.js":
/*!********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/plugins/typescript.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tsAfterParseClassSuper: function() { return /* binding */ tsAfterParseClassSuper; },\n/* harmony export */   tsAfterParseVarHead: function() { return /* binding */ tsAfterParseVarHead; },\n/* harmony export */   tsIsDeclarationStart: function() { return /* binding */ tsIsDeclarationStart; },\n/* harmony export */   tsParseArrow: function() { return /* binding */ tsParseArrow; },\n/* harmony export */   tsParseAssignableListItemTypes: function() { return /* binding */ tsParseAssignableListItemTypes; },\n/* harmony export */   tsParseExportDeclaration: function() { return /* binding */ tsParseExportDeclaration; },\n/* harmony export */   tsParseExportSpecifier: function() { return /* binding */ tsParseExportSpecifier; },\n/* harmony export */   tsParseFunctionBodyAndFinish: function() { return /* binding */ tsParseFunctionBodyAndFinish; },\n/* harmony export */   tsParseIdentifierStatement: function() { return /* binding */ tsParseIdentifierStatement; },\n/* harmony export */   tsParseImportEqualsDeclaration: function() { return /* binding */ tsParseImportEqualsDeclaration; },\n/* harmony export */   tsParseImportSpecifier: function() { return /* binding */ tsParseImportSpecifier; },\n/* harmony export */   tsParseMaybeAssign: function() { return /* binding */ tsParseMaybeAssign; },\n/* harmony export */   tsParseMaybeAssignWithJSX: function() { return /* binding */ tsParseMaybeAssignWithJSX; },\n/* harmony export */   tsParseMaybeAssignWithoutJSX: function() { return /* binding */ tsParseMaybeAssignWithoutJSX; },\n/* harmony export */   tsParseMaybeDecoratorArguments: function() { return /* binding */ tsParseMaybeDecoratorArguments; },\n/* harmony export */   tsParseModifier: function() { return /* binding */ tsParseModifier; },\n/* harmony export */   tsParseModifiers: function() { return /* binding */ tsParseModifiers; },\n/* harmony export */   tsParseNonConditionalType: function() { return /* binding */ tsParseNonConditionalType; },\n/* harmony export */   tsParseSubscript: function() { return /* binding */ tsParseSubscript; },\n/* harmony export */   tsParseType: function() { return /* binding */ tsParseType; },\n/* harmony export */   tsParseTypeAnnotation: function() { return /* binding */ tsParseTypeAnnotation; },\n/* harmony export */   tsParseTypeAssertion: function() { return /* binding */ tsParseTypeAssertion; },\n/* harmony export */   tsStartParseAsyncArrowFromCallExpression: function() { return /* binding */ tsStartParseAsyncArrowFromCallExpression; },\n/* harmony export */   tsStartParseFunctionParams: function() { return /* binding */ tsStartParseFunctionParams; },\n/* harmony export */   tsStartParseObjPropValue: function() { return /* binding */ tsStartParseObjPropValue; },\n/* harmony export */   tsTryParseClassMemberWithIsStatic: function() { return /* binding */ tsTryParseClassMemberWithIsStatic; },\n/* harmony export */   tsTryParseExport: function() { return /* binding */ tsTryParseExport; },\n/* harmony export */   tsTryParseExportDefaultExpression: function() { return /* binding */ tsTryParseExportDefaultExpression; },\n/* harmony export */   tsTryParseJSXTypeArgument: function() { return /* binding */ tsTryParseJSXTypeArgument; },\n/* harmony export */   tsTryParseStatementContent: function() { return /* binding */ tsTryParseStatementContent; },\n/* harmony export */   tsTryParseTypeAnnotation: function() { return /* binding */ tsTryParseTypeAnnotation; },\n/* harmony export */   tsTryParseTypeParameters: function() { return /* binding */ tsTryParseTypeParameters; }\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _traverser_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../traverser/base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _traverser_expression__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../traverser/expression */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js\");\n/* harmony import */ var _traverser_lval__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../traverser/lval */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/lval.js\");\n/* harmony import */ var _traverser_statement__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../traverser/statement */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/statement.js\");\n/* harmony import */ var _traverser_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../traverser/util */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\");\n/* harmony import */ var _jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./jsx */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/jsx/index.js\");\n\n\n\n\n\n\n\n\n\n\nfunction tsIsIdentifier() {\n  // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n  // See https://github.com/Microsoft/TypeScript/issues/15008\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name);\n}\n\nfunction isLiteralPropertyName() {\n  return (\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) ||\n    Boolean(_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.IS_KEYWORD) ||\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string) ||\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.num) ||\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bigint) ||\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.decimal)\n  );\n}\n\nfunction tsNextTokenCanFollowModifier() {\n  // Note: TypeScript's implementation is much more complicated because\n  // more things are considered modifiers there.\n  // This implementation only handles modifiers not handled by babylon itself. And \"static\".\n  // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  const canFollowModifier =\n    ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis) ||\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.hash) ||\n      isLiteralPropertyName()) &&\n    !(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)();\n\n  if (canFollowModifier) {\n    return true;\n  } else {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    return false;\n  }\n}\n\nfunction tsParseModifiers(allowedModifiers) {\n  while (true) {\n    const modifier = tsParseModifier(allowedModifiers);\n    if (modifier === null) {\n      break;\n    }\n  }\n}\n\n/** Parses a modifier matching one the given modifier names. */\nfunction tsParseModifier(\n  allowedModifiers,\n) {\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n    return null;\n  }\n\n  const modifier = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword;\n  if (allowedModifiers.indexOf(modifier) !== -1 && tsNextTokenCanFollowModifier()) {\n    switch (modifier) {\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._readonly;\n        break;\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._abstract:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._abstract;\n        break;\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._static:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._static;\n        break;\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._public:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._public;\n        break;\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._private:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._private;\n        break;\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._protected:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._protected;\n        break;\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._override:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._override;\n        break;\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._declare:\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._declare;\n        break;\n      default:\n        break;\n    }\n    return modifier;\n  }\n  return null;\n}\n\nfunction tsParseEntityName() {\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n}\n\nfunction tsParseTypeReference() {\n  tsParseEntityName();\n  if (!(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)() && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    tsParseTypeArguments();\n  }\n}\n\nfunction tsParseThisTypePredicate() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  tsParseTypeAnnotation();\n}\n\nfunction tsParseThisTypeNode() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n}\n\nfunction tsParseTypeQuery() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._typeof);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import)) {\n    tsParseImportType();\n  } else {\n    tsParseEntityName();\n  }\n  if (!(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)() && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    tsParseTypeArguments();\n  }\n}\n\nfunction tsParseImportType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n    tsParseEntityName();\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    tsParseTypeArguments();\n  }\n}\n\nfunction tsParseTypeParameter() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const);\n  const hadIn = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._in);\n  const hadOut = (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._out);\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const);\n  if ((hadIn || hadOut) && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n    // The \"in\" or \"out\" keyword must have actually been the type parameter\n    // name, so set it as the name.\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name;\n  } else {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._extends)) {\n    tsParseType();\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n    tsParseType();\n  }\n}\n\nfunction tsTryParseTypeParameters() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    tsParseTypeParameters();\n  }\n}\n\nfunction tsParseTypeParameters() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.typeParameterStart)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n  }\n\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    tsParseTypeParameter();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\n// Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n// but here it's always false, because this is only used for types.\nfunction tsFillSignature(returnToken) {\n  // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n  const returnTokenRequired = returnToken === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow;\n  tsTryParseTypeParameters();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n  // Create a scope even though we're doing type parsing so we don't accidentally\n  // treat params as top-level bindings.\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.scopeDepth++;\n  tsParseBindingListForSignature(false /* isBlockScope */);\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.scopeDepth--;\n  if (returnTokenRequired) {\n    tsParseTypeOrTypePredicateAnnotation(returnToken);\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(returnToken)) {\n    tsParseTypeOrTypePredicateAnnotation(returnToken);\n  }\n}\n\nfunction tsParseBindingListForSignature(isBlockScope) {\n  (0,_traverser_lval__WEBPACK_IMPORTED_MODULE_5__.parseBindingList)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR, isBlockScope);\n}\n\nfunction tsParseTypeMemberSemicolon() {\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma)) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n  }\n}\n\nfunction tsParseSignatureMember() {\n  tsFillSignature(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  tsParseTypeMemberSemicolon();\n}\n\nfunction tsIsUnambiguouslyIndexSignature() {\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)(); // Skip '{'\n  const isIndexSignature = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n  return isIndexSignature;\n}\n\nfunction tsTryParseIndexSignature() {\n  if (!((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL) && tsIsUnambiguouslyIndexSignature())) {\n    return false;\n  }\n\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL);\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  tsParseTypeAnnotation();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n\n  tsTryParseTypeAnnotation();\n  tsParseTypeMemberSemicolon();\n\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  return true;\n}\n\nfunction tsParsePropertyOrMethodSignature(isReadonly) {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n\n  if (!isReadonly && ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan))) {\n    tsFillSignature(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n    tsParseTypeMemberSemicolon();\n  } else {\n    tsTryParseTypeAnnotation();\n    tsParseTypeMemberSemicolon();\n  }\n}\n\nfunction tsParseTypeMember() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    // call signature\n    tsParseSignatureMember();\n    return;\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._new)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n      // constructor signature\n      tsParseSignatureMember();\n    } else {\n      tsParsePropertyOrMethodSignature(false);\n    }\n    return;\n  }\n  const readonly = !!tsParseModifier([_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly]);\n\n  const found = tsTryParseIndexSignature();\n  if (found) {\n    return;\n  }\n  if (\n    ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._get) || (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._set)) &&\n    tsNextTokenCanFollowModifier()\n  ) {\n    // This is a getter/setter on a type. The tsNextTokenCanFollowModifier\n    // function already called next() for us, so continue parsing the name.\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parsePropertyName)(-1 /* Types don't need context IDs. */);\n  tsParsePropertyOrMethodSignature(readonly);\n}\n\nfunction tsParseTypeLiteral() {\n  tsParseObjectTypeMembers();\n}\n\nfunction tsParseObjectTypeMembers() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    tsParseTypeMember();\n  }\n}\n\nfunction tsLookaheadIsStartOfMappedType() {\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n  const isStartOfMappedType = tsIsStartOfMappedType();\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n  return isStartOfMappedType;\n}\n\nfunction tsIsStartOfMappedType() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.plus) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.minus)) {\n    return (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly);\n  }\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  }\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)) {\n    return false;\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  if (!tsIsIdentifier()) {\n    return false;\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._in);\n}\n\nfunction tsParseMappedTypeParameter() {\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._in);\n  tsParseType();\n}\n\nfunction tsParseMappedType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.plus) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.minus)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly);\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly);\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL);\n  tsParseMappedTypeParameter();\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._as)) {\n    tsParseType();\n  }\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.plus) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.minus)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n  } else {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n  }\n  tsTryParseType();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR);\n}\n\nfunction tsParseTupleType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL);\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    // Do not validate presence of either none or only labeled elements\n    tsParseTupleElementType();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n  }\n}\n\nfunction tsParseTupleElementType() {\n  // parses `...TsType[]`\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis)) {\n    tsParseType();\n  } else {\n    // parses `TsType?`\n    tsParseType();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n  }\n\n  // The type we parsed above was actually a label\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    // Labeled tuple types must affix the label with `...` or `?`, so no need to handle those here\n    tsParseType();\n  }\n}\n\nfunction tsParseParenthesizedType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n  tsParseType();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n}\n\nfunction tsParseTemplateLiteralType() {\n  // Finish `, read quasi\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.nextTemplateToken)();\n  // Finish quasi, read ${\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.nextTemplateToken)();\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.backQuote) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dollarBraceL);\n    tsParseType();\n    // Finish }, read quasi\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.nextTemplateToken)();\n    // Finish quasi, read either ${ or `\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.nextTemplateToken)();\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n}\n\nvar FunctionType; (function (FunctionType) {\n  const TSFunctionType = 0; FunctionType[FunctionType[\"TSFunctionType\"] = TSFunctionType] = \"TSFunctionType\";\n  const TSConstructorType = TSFunctionType + 1; FunctionType[FunctionType[\"TSConstructorType\"] = TSConstructorType] = \"TSConstructorType\";\n  const TSAbstractConstructorType = TSConstructorType + 1; FunctionType[FunctionType[\"TSAbstractConstructorType\"] = TSAbstractConstructorType] = \"TSAbstractConstructorType\";\n})(FunctionType || (FunctionType = {}));\n\nfunction tsParseFunctionOrConstructorType(type) {\n  if (type === FunctionType.TSAbstractConstructorType) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._abstract);\n  }\n  if (type === FunctionType.TSConstructorType || type === FunctionType.TSAbstractConstructorType) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._new);\n  }\n  const oldInDisallowConditionalTypesContext = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = false;\n  tsFillSignature(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow);\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n}\n\nfunction tsParseNonArrayType() {\n  switch (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type) {\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name:\n      tsParseTypeReference();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._void:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._null:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.num:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bigint:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.decimal:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._true:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._false:\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseLiteral)();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.minus:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseLiteral)();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._this: {\n      tsParseThisTypeNode();\n      if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._is) && !(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)()) {\n        tsParseThisTypePredicate();\n      }\n      return;\n    }\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._typeof:\n      tsParseTypeQuery();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import:\n      tsParseImportType();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL:\n      if (tsLookaheadIsStartOfMappedType()) {\n        tsParseMappedType();\n      } else {\n        tsParseTypeLiteral();\n      }\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL:\n      tsParseTupleType();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL:\n      tsParseParenthesizedType();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.backQuote:\n      tsParseTemplateLiteralType();\n      return;\n    default:\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.IS_KEYWORD) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name;\n        return;\n      }\n      break;\n  }\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n}\n\nfunction tsParseArrayTypeOrHigher() {\n  tsParseNonArrayType();\n  while (!(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)() && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)) {\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR)) {\n      // If we hit ] immediately, this is an array type, otherwise it's an indexed access type.\n      tsParseType();\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR);\n    }\n  }\n}\n\nfunction tsParseInferType() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._infer);\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._extends)) {\n    // Infer type constraints introduce an ambiguity about whether the \"extends\"\n    // is a constraint for this infer type or is another conditional type.\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._extends);\n    const oldInDisallowConditionalTypesContext = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = true;\n    tsParseType();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error || (!_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question))) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    }\n  }\n}\n\nfunction tsParseTypeOperatorOrHigher() {\n  if (\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._keyof) ||\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._unique) ||\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly)\n  ) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    tsParseTypeOperatorOrHigher();\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._infer)) {\n    tsParseInferType();\n  } else {\n    const oldInDisallowConditionalTypesContext = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = false;\n    tsParseArrayTypeOrHigher();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n  }\n}\n\nfunction tsParseIntersectionTypeOrHigher() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseAND);\n  tsParseTypeOperatorOrHigher();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseAND)) {\n    while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseAND)) {\n      tsParseTypeOperatorOrHigher();\n    }\n  }\n}\n\nfunction tsParseUnionTypeOrHigher() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseOR);\n  tsParseIntersectionTypeOrHigher();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseOR)) {\n    while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitwiseOR)) {\n      tsParseIntersectionTypeOrHigher();\n    }\n  }\n}\n\nfunction tsIsStartOfFunctionType() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    return true;\n  }\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL) && tsLookaheadIsUnambiguouslyStartOfFunctionType();\n}\n\nfunction tsSkipParameterStart() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._this)) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    return true;\n  }\n  // If this is a possible array/object destructure, walk to the matching bracket/brace.\n  // The next token after will tell us definitively whether this is a function param.\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)) {\n    let depth = 1;\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    while (depth > 0 && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)) {\n        depth++;\n      } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR)) {\n        depth--;\n      }\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction tsLookaheadIsUnambiguouslyStartOfFunctionType() {\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n  const isUnambiguouslyStartOfFunctionType = tsIsUnambiguouslyStartOfFunctionType();\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n  return isUnambiguouslyStartOfFunctionType;\n}\n\nfunction tsIsUnambiguouslyStartOfFunctionType() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.ellipsis)) {\n    // ( )\n    // ( ...\n    return true;\n  }\n  if (tsSkipParameterStart()) {\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n      // ( xxx :\n      // ( xxx ,\n      // ( xxx ?\n      // ( xxx =\n      return true;\n    }\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR)) {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow)) {\n        // ( xxx ) =>\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction tsParseTypeOrTypePredicateAnnotation(returnToken) {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(returnToken);\n  const finishedReturn = tsParseTypePredicateOrAssertsPrefix();\n  if (!finishedReturn) {\n    tsParseType();\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\nfunction tsTryParseTypeOrTypePredicateAnnotation() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    tsParseTypeOrTypePredicateAnnotation(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  }\n}\n\nfunction tsTryParseTypeAnnotation() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    tsParseTypeAnnotation();\n  }\n}\n\nfunction tsTryParseType() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    tsParseType();\n  }\n}\n\n/**\n * Detect a few special return syntax cases: `x is T`, `asserts x`, `asserts x is T`,\n * `asserts this is T`.\n *\n * Returns true if we parsed the return type, false if there's still a type to be parsed.\n */\nfunction tsParseTypePredicateOrAssertsPrefix() {\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._asserts)) {\n    // Normally this is `asserts x is T`, but at this point, it might be `asserts is T` (a user-\n    // defined type guard on the `asserts` variable) or just a type called `asserts`.\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._is)) {\n      // If we see `asserts is`, then this must be of the form `asserts is T`, since\n      // `asserts is is T` isn't valid.\n      tsParseType();\n      return true;\n    } else if (tsIsIdentifier() || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._this)) {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._is)) {\n        // If we see `is`, then this is `asserts x is T`. Otherwise, it's `asserts x`.\n        tsParseType();\n      }\n      return true;\n    } else {\n      // Regular type, so bail out and start type parsing from scratch.\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n      return false;\n    }\n  } else if (tsIsIdentifier() || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._this)) {\n    // This is a regular identifier, which may or may not have \"is\" after it.\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._is) && !(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)()) {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      tsParseType();\n      return true;\n    } else {\n      // Regular type, so bail out and start type parsing from scratch.\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n      return false;\n    }\n  }\n  return false;\n}\n\nfunction tsParseTypeAnnotation() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  tsParseType();\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\nfunction tsParseType() {\n  tsParseNonConditionalType();\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext || (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)() || !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._extends)) {\n    return;\n  }\n  // extends type\n  const oldInDisallowConditionalTypesContext = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = true;\n  tsParseNonConditionalType();\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n  // true type\n  tsParseType();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  // false type\n  tsParseType();\n}\n\nfunction isAbstractConstructorSignature() {\n  return (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._abstract) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._new;\n}\n\nfunction tsParseNonConditionalType() {\n  if (tsIsStartOfFunctionType()) {\n    tsParseFunctionOrConstructorType(FunctionType.TSFunctionType);\n    return;\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._new)) {\n    // As in `new () => Date`\n    tsParseFunctionOrConstructorType(FunctionType.TSConstructorType);\n    return;\n  } else if (isAbstractConstructorSignature()) {\n    // As in `abstract new () => Date`\n    tsParseFunctionOrConstructorType(FunctionType.TSAbstractConstructorType);\n    return;\n  }\n  tsParseUnionTypeOrHigher();\n}\n\nfunction tsParseTypeAssertion() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n  tsParseType();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan);\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseMaybeUnary)();\n}\n\nfunction tsTryParseJSXTypeArgument() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagStart)) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.typeParameterStart;\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n    while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      tsParseType();\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n    }\n    // Process >, but the one after needs to be parsed JSX-style.\n    (0,_jsx__WEBPACK_IMPORTED_MODULE_8__.nextJSXTagToken)();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  }\n}\n\nfunction tsParseHeritageClause() {\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    tsParseExpressionWithTypeArguments();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n  }\n}\n\nfunction tsParseExpressionWithTypeArguments() {\n  // Note: TS uses parseLeftHandSideExpressionOrHigher,\n  // then has grammar errors later if it's not an EntityName.\n  tsParseEntityName();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    tsParseTypeArguments();\n  }\n}\n\nfunction tsParseInterfaceDeclaration() {\n  (0,_traverser_lval__WEBPACK_IMPORTED_MODULE_5__.parseBindingIdentifier)(false);\n  tsTryParseTypeParameters();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._extends)) {\n    tsParseHeritageClause();\n  }\n  tsParseObjectTypeMembers();\n}\n\nfunction tsParseTypeAliasDeclaration() {\n  (0,_traverser_lval__WEBPACK_IMPORTED_MODULE_5__.parseBindingIdentifier)(false);\n  tsTryParseTypeParameters();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq);\n  tsParseType();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n}\n\nfunction tsParseEnumMember() {\n  // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseLiteral)();\n  } else {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n    const eqIndex = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1;\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseMaybeAssign)();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[eqIndex].rhsEndIndex = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length;\n  }\n}\n\nfunction tsParseEnumDeclaration() {\n  (0,_traverser_lval__WEBPACK_IMPORTED_MODULE_5__.parseBindingIdentifier)(false);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    tsParseEnumMember();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n  }\n}\n\nfunction tsParseModuleBlock() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n  (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseBlockBody)(/* end */ _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR);\n}\n\nfunction tsParseModuleOrNamespaceDeclaration() {\n  (0,_traverser_lval__WEBPACK_IMPORTED_MODULE_5__.parseBindingIdentifier)(false);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n    tsParseModuleOrNamespaceDeclaration();\n  } else {\n    tsParseModuleBlock();\n  }\n}\n\nfunction tsParseAmbientExternalModuleDeclaration() {\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._global)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseExprAtom)();\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n  }\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n    tsParseModuleBlock();\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n  }\n}\n\nfunction tsParseImportEqualsDeclaration() {\n  (0,_traverser_lval__WEBPACK_IMPORTED_MODULE_5__.parseImportedIdentifier)();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq);\n  tsParseModuleReference();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n}\n\nfunction tsIsExternalModuleReference() {\n  return (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._require) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL;\n}\n\nfunction tsParseModuleReference() {\n  if (tsIsExternalModuleReference()) {\n    tsParseExternalModuleReference();\n  } else {\n    tsParseEntityName();\n  }\n}\n\nfunction tsParseExternalModuleReference() {\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._require);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseLiteral)();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n}\n\n// Utilities\n\n// Returns true if a statement matched.\nfunction tsTryParseDeclare() {\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isLineTerminator)()) {\n    return false;\n  }\n  switch (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type) {\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function: {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      // We don't need to precisely get the function start here, since it's only used to mark\n      // the function as a type if it's bodiless, and it's already a type here.\n      const functionStart = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.start;\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseFunction)(functionStart, /* isStatement */ true);\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n      return true;\n    }\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class: {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseClass)(/* isStatement */ true, /* optionalId */ false);\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n      return true;\n    }\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const: {\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const) && (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isLookaheadContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum)) {\n        const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n        // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n        (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const);\n        (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum);\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._enum;\n        tsParseEnumDeclaration();\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n        return true;\n      }\n    }\n    // falls through\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._let: {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseVarStatement)(_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var);\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n      return true;\n    }\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name: {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n      const contextualKeyword = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword;\n      let matched = false;\n      if (contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._global) {\n        tsParseAmbientExternalModuleDeclaration();\n        matched = true;\n      } else {\n        matched = tsParseDeclaration(contextualKeyword, /* isBeforeToken */ true);\n      }\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n      return matched;\n    }\n    default:\n      return false;\n  }\n}\n\n// Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n// Returns true if it matched a declaration.\nfunction tsTryParseExportDeclaration() {\n  return tsParseDeclaration(_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword, /* isBeforeToken */ true);\n}\n\n// Returns true if it matched a statement.\nfunction tsParseExpressionStatement(contextualKeyword) {\n  switch (contextualKeyword) {\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._declare: {\n      const declareTokenIndex = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1;\n      const matched = tsTryParseDeclare();\n      if (matched) {\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[declareTokenIndex].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._declare;\n        return true;\n      }\n      break;\n    }\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._global:\n      // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n      // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n        tsParseModuleBlock();\n        return true;\n      }\n      break;\n\n    default:\n      return tsParseDeclaration(contextualKeyword, /* isBeforeToken */ false);\n  }\n  return false;\n}\n\n/**\n * Common code for parsing a declaration.\n *\n * isBeforeToken indicates that the current parser state is at the contextual\n * keyword (and that it is not yet emitted) rather than reading the token after\n * it. When isBeforeToken is true, we may be preceded by an `export` token and\n * should include that token in a type context we create, e.g. to handle\n * `export interface` or `export type`. (This is a bit of a hack and should be\n * cleaned up at some point.)\n *\n * Returns true if it matched a declaration.\n */\nfunction tsParseDeclaration(contextualKeyword, isBeforeToken) {\n  switch (contextualKeyword) {\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._abstract:\n      if (tsCheckLineTerminator(isBeforeToken) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class)) {\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._abstract;\n        (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseClass)(/* isStatement */ true, /* optionalId */ false);\n        return true;\n      }\n      break;\n\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum:\n      if (tsCheckLineTerminator(isBeforeToken) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._enum;\n        tsParseEnumDeclaration();\n        return true;\n      }\n      break;\n\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface:\n      if (tsCheckLineTerminator(isBeforeToken) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n        // `next` is true in \"export\" and \"declare\" contexts, so we want to remove that token\n        // as well.\n        const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(isBeforeToken ? 2 : 1);\n        tsParseInterfaceDeclaration();\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n        return true;\n      }\n      break;\n\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._module:\n      if (tsCheckLineTerminator(isBeforeToken)) {\n        if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n          const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(isBeforeToken ? 2 : 1);\n          tsParseAmbientExternalModuleDeclaration();\n          (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n          return true;\n        } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n          const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(isBeforeToken ? 2 : 1);\n          tsParseModuleOrNamespaceDeclaration();\n          (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n          return true;\n        }\n      }\n      break;\n\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._namespace:\n      if (tsCheckLineTerminator(isBeforeToken) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n        const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(isBeforeToken ? 2 : 1);\n        tsParseModuleOrNamespaceDeclaration();\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n        return true;\n      }\n      break;\n\n    case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type:\n      if (tsCheckLineTerminator(isBeforeToken) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n        const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(isBeforeToken ? 2 : 1);\n        tsParseTypeAliasDeclaration();\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n        return true;\n      }\n      break;\n\n    default:\n      break;\n  }\n  return false;\n}\n\nfunction tsCheckLineTerminator(isBeforeToken) {\n  if (isBeforeToken) {\n    // Babel checks hasFollowingLineBreak here and returns false, but this\n    // doesn't actually come up, e.g. `export interface` can never be on its own\n    // line in valid code.\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    return true;\n  } else {\n    return !(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isLineTerminator)();\n  }\n}\n\n// Returns true if there was a generic async arrow function.\nfunction tsTryParseGenericAsyncArrowFunction() {\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n\n  tsParseTypeParameters();\n  (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseFunctionParams)();\n  tsTryParseTypeOrTypePredicateAnnotation();\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow);\n\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    return false;\n  }\n\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseFunctionBody)(true);\n  return true;\n}\n\n/**\n * If necessary, hack the tokenizer state so that this bitshift was actually a\n * less-than token, then keep parsing. This should only be used in situations\n * where we restore from snapshot on error (which reverts this change) or\n * where bitshift would be illegal anyway (e.g. in a class \"extends\" clause).\n *\n * This hack is useful to handle situations like foo<<T>() => void>() where\n * there can legitimately be two open-angle-brackets in a row in TS.\n */\nfunction tsParseTypeArgumentsWithPossibleBitshift() {\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitShiftL) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.pos -= 1;\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan);\n  }\n  tsParseTypeArguments();\n}\n\nfunction tsParseTypeArguments() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan);\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan) && !_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    tsParseType();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma);\n  }\n  if (!oldIsType) {\n    // If the type arguments are present in an expression context, e.g.\n    // f<number>(), then the > sign should be tokenized as a non-type token.\n    // In particular, f(a < b, c >= d) should parse the >= as a single token,\n    // resulting in a syntax error and fallback to the non-type-args\n    // interpretation. In the success case, even though the > is tokenized as a\n    // non-type token, it still must be marked as a type token so that it is\n    // erased.\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.rescan_gt)();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan);\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].isType = true;\n  } else {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  }\n}\n\nfunction tsIsDeclarationStart() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n    switch (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword) {\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._abstract:\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._declare:\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum:\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface:\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._module:\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._namespace:\n      case _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type:\n        return true;\n      default:\n        break;\n    }\n  }\n\n  return false;\n}\n\n// ======================================================\n// OVERRIDES\n// ======================================================\n\nfunction tsParseFunctionBodyAndFinish(functionStart, funcContextId) {\n  // For arrow functions, `parseArrow` handles the return type itself.\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    tsParseTypeOrTypePredicateAnnotation(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n  }\n\n  // The original code checked the node type to make sure this function type allows a missing\n  // body, but we skip that to avoid sending around the node type. We instead just use the\n  // allowExpressionBody boolean to make sure it's not an arrow function.\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) && (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isLineTerminator)()) {\n    // Retroactively mark the function declaration as a type.\n    let i = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1;\n    while (\n      i >= 0 &&\n      (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[i].start >= functionStart ||\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[i].type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default ||\n        _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[i].type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export)\n    ) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[i].isType = true;\n      i--;\n    }\n    return;\n  }\n\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseFunctionBody)(false, funcContextId);\n}\n\nfunction tsParseSubscript(\n  startTokenIndex,\n  noCalls,\n  stopState,\n) {\n  if (!(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)() && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bang)) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.nonNullAssertion;\n    return;\n  }\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitShiftL)) {\n    // There are number of things we are going to \"maybe\" parse, like type arguments on\n    // tagged template expressions. If any of them fail, walk it back and continue.\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n\n    if (!noCalls && (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.atPossibleAsync)()) {\n      // Almost certainly this is a generic async function `async <T>() => ...\n      // But it might be a call with a type argument `async<T>();`\n      const asyncArrowFn = tsTryParseGenericAsyncArrowFunction();\n      if (asyncArrowFn) {\n        return;\n      }\n    }\n    tsParseTypeArgumentsWithPossibleBitshift();\n    if (!noCalls && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n      // With f<T>(), the subscriptStartIndex marker is on the ( token.\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseCallExpressionArguments)();\n    } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.backQuote)) {\n      // Tagged template with a type argument.\n      (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseTemplate)();\n    } else if (\n      // The remaining possible case is an instantiation expression, e.g.\n      // Array<number> . Check for a few cases that would disqualify it and\n      // cause us to bail out.\n      // a<b>>c is not (a<b>)>c, but a<(b>>c)\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan ||\n      // a<b>c is (a<b)>c\n      (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL &&\n        Boolean(_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.IS_EXPRESSION_START) &&\n        !(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)())\n    ) {\n      // Bail out. We have something like a<b>c, which is not an expression with\n      // type arguments but an (a < b) > c comparison.\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n    }\n\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    } else {\n      return;\n    }\n  } else if (!noCalls && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.questionDot) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) {\n    // If we see f?.<, then this must be an optional call with a type argument.\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[startTokenIndex].isOptionalChainStart = true;\n    // With f?.<T>(), the subscriptStartIndex marker is on the ?. token.\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\n\n    tsParseTypeArguments();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseCallExpressionArguments)();\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseSubscript)(startTokenIndex, noCalls, stopState);\n}\n\nfunction tsTryParseExport() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import)) {\n    // One of these cases:\n    // export import A = B;\n    // export import type A = require(\"A\");\n    if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq) {\n      // Eat a `type` token, unless it's actually an identifier name.\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type);\n    }\n    tsParseImportEqualsDeclaration();\n    return true;\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n    // `export = x;`\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseExpression)();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n    return true;\n  } else if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._as)) {\n    // `export as namespace A;`\n    // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._namespace);\n    (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n    return true;\n  } else {\n    if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type)) {\n      const nextType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)();\n      // export type {foo} from 'a';\n      // export type * from 'a';'\n      // export type * as ns from 'a';'\n      if (nextType === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL || nextType === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)();\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Parse a TS import specifier, which may be prefixed with \"type\" and may be of\n * the form `foo as bar`.\n *\n * The number of identifier-like tokens we see happens to be enough to uniquely\n * identify the form, so simply count the number of identifiers rather than\n * matching the words `type` or `as`. This is particularly important because\n * `type` and `as` could each actually be plain identifiers rather than\n * keywords.\n */\nfunction tsParseImportSpecifier() {\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n    // import {foo}\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ImportDeclaration;\n    return;\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n    // import {type foo}\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ImportDeclaration;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 2].isType = true;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].isType = true;\n    return;\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n    // import {foo as bar}\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 3].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ImportAccess;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ImportDeclaration;\n    return;\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  // import {type foo as bar}\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 3].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ImportAccess;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ImportDeclaration;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 4].isType = true;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 3].isType = true;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 2].isType = true;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].isType = true;\n}\n\n/**\n * Just like named import specifiers, export specifiers can have from 1 to 4\n * tokens, inclusive, and the number of tokens determines the role of each token.\n */\nfunction tsParseExportSpecifier() {\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n    // export {foo}\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ExportAccess;\n    return;\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n    // export {type foo}\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ExportAccess;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 2].isType = true;\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].isType = true;\n    return;\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n    // export {foo as bar}\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 3].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ExportAccess;\n    return;\n  }\n  (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.parseIdentifier)();\n  // export {type foo as bar}\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 3].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ExportAccess;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 4].isType = true;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 3].isType = true;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 2].isType = true;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].isType = true;\n}\n\nfunction tsTryParseExportDefaultExpression() {\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._abstract) && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._abstract;\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.next)(); // Skip \"abstract\"\n    (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseClass)(true, true);\n    return true;\n  }\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface)) {\n    // Make sure \"export default\" are considered type tokens so the whole thing is removed.\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(2);\n    tsParseDeclaration(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._interface, true);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    return true;\n  }\n  return false;\n}\n\nfunction tsTryParseStatementContent() {\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const) {\n    const ahead = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadTypeAndKeyword)();\n    if (ahead.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name && ahead.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const);\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._enum);\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._enum;\n      tsParseEnumDeclaration();\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction tsTryParseClassMemberWithIsStatic(isStatic) {\n  const memberStartIndexAfterStatic = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length;\n  tsParseModifiers([\n    _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._abstract,\n    _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._readonly,\n    _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._declare,\n    _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._static,\n    _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._override,\n  ]);\n\n  const modifiersEndIndex = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length;\n  const found = tsTryParseIndexSignature();\n  if (found) {\n    // Index signatures are type declarations, so set the modifier tokens as\n    // type tokens. Most tokens could be assumed to be type tokens, but `static`\n    // is ambiguous unless we set it explicitly here.\n    const memberStartIndex = isStatic\n      ? memberStartIndexAfterStatic - 1\n      : memberStartIndexAfterStatic;\n    for (let i = memberStartIndex; i < modifiersEndIndex; i++) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[i].isType = true;\n    }\n    return true;\n  }\n  return false;\n}\n\n// Note: The reason we do this in `parseIdentifierStatement` and not `parseStatement`\n// is that e.g. `type()` is valid JS, so we must try parsing that first.\n// If it's really a type, we will parse `type` as the statement, and can correct it here\n// by parsing the rest.\nfunction tsParseIdentifierStatement(contextualKeyword) {\n  const matched = tsParseExpressionStatement(contextualKeyword);\n  if (!matched) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.semicolon)();\n  }\n}\n\nfunction tsParseExportDeclaration() {\n  // \"export declare\" is equivalent to just \"export\".\n  const isDeclare = (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._declare);\n  if (isDeclare) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._declare;\n  }\n\n  let matchedDeclaration = false;\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n    if (isDeclare) {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(2);\n      matchedDeclaration = tsTryParseExportDeclaration();\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    } else {\n      matchedDeclaration = tsTryParseExportDeclaration();\n    }\n  }\n  if (!matchedDeclaration) {\n    if (isDeclare) {\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(2);\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseStatement)(true);\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n    } else {\n      (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.parseStatement)(true);\n    }\n  }\n}\n\nfunction tsAfterParseClassSuper(hasSuper) {\n  if (hasSuper && ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitShiftL))) {\n    tsParseTypeArgumentsWithPossibleBitshift();\n  }\n  if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._implements)) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._implements;\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(1);\n    tsParseHeritageClause();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n  }\n}\n\nfunction tsStartParseObjPropValue() {\n  tsTryParseTypeParameters();\n}\n\nfunction tsStartParseFunctionParams() {\n  tsTryParseTypeParameters();\n}\n\n// `let x: number;`\nfunction tsAfterParseVarHead() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  if (!(0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.hasPrecedingLineBreak)()) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bang);\n  }\n  tsTryParseTypeAnnotation();\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\n// parse the return type of an async arrow function - let foo = (async (): number => {});\nfunction tsStartParseAsyncArrowFromCallExpression() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    tsParseTypeAnnotation();\n  }\n}\n\n// Returns true if the expression was an arrow function.\nfunction tsParseMaybeAssign(noIn, isWithinParens) {\n  // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.isJSXEnabled) {\n    return tsParseMaybeAssignWithJSX(noIn, isWithinParens);\n  } else {\n    return tsParseMaybeAssignWithoutJSX(noIn, isWithinParens);\n  }\n}\n\nfunction tsParseMaybeAssignWithJSX(noIn, isWithinParens) {\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    return (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n  }\n\n  // Prefer to parse JSX if possible. But may be an arrow fn.\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n  let wasArrow = (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n  } else {\n    return wasArrow;\n  }\n\n  // Otherwise, try as type-parameterized arrow function.\n  _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.typeParameterStart;\n  // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n  tsParseTypeParameters();\n  wasArrow = (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n  if (!wasArrow) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n  }\n\n  return wasArrow;\n}\n\nfunction tsParseMaybeAssignWithoutJSX(noIn, isWithinParens) {\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan)) {\n    return (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n  }\n\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n  // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n  tsParseTypeParameters();\n  const wasArrow = (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n  if (!wasArrow) {\n    (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n  }\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n  } else {\n    return wasArrow;\n  }\n\n  // Try parsing a type cast instead of an arrow function.\n  // This will start with a type assertion (via parseMaybeUnary).\n  // But don't directly call `tsParseTypeAssertion` because we want to handle any binary after it.\n  return (0,_traverser_expression__WEBPACK_IMPORTED_MODULE_4__.baseParseMaybeAssign)(noIn, isWithinParens);\n}\n\nfunction tsParseArrow() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon)) {\n    // This is different from how the TS parser does it.\n    // TS uses lookahead. Babylon parses it as a parenthesized expression and converts.\n    const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.snapshot();\n\n    tsParseTypeOrTypePredicateAnnotation(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.colon);\n    if ((0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.canInsertSemicolon)()) (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n    if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow)) (0,_traverser_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_3__.state.restoreFromSnapshot(snapshot);\n    }\n  }\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.arrow);\n}\n\n// Allow type annotations inside of a parameter list.\nfunction tsParseAssignableListItemTypes() {\n  const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.pushTypeContext)(0);\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.question);\n  tsTryParseTypeAnnotation();\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.popTypeContext)(oldIsType);\n}\n\nfunction tsParseMaybeDecoratorArguments() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.lessThan) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bitShiftL)) {\n    tsParseTypeArgumentsWithPossibleBitshift();\n  }\n  (0,_traverser_statement__WEBPACK_IMPORTED_MODULE_6__.baseParseMaybeDecoratorArguments)();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/typescript.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/tokenizer/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdentifierRole: function() { return /* binding */ IdentifierRole; },\n/* harmony export */   JSXRole: function() { return /* binding */ JSXRole; },\n/* harmony export */   Token: function() { return /* binding */ Token; },\n/* harmony export */   TypeAndKeyword: function() { return /* binding */ TypeAndKeyword; },\n/* harmony export */   eat: function() { return /* binding */ eat; },\n/* harmony export */   eatTypeToken: function() { return /* binding */ eatTypeToken; },\n/* harmony export */   finishToken: function() { return /* binding */ finishToken; },\n/* harmony export */   getTokenFromCode: function() { return /* binding */ getTokenFromCode; },\n/* harmony export */   isBlockScopedDeclaration: function() { return /* binding */ isBlockScopedDeclaration; },\n/* harmony export */   isDeclaration: function() { return /* binding */ isDeclaration; },\n/* harmony export */   isFunctionScopedDeclaration: function() { return /* binding */ isFunctionScopedDeclaration; },\n/* harmony export */   isNonTopLevelDeclaration: function() { return /* binding */ isNonTopLevelDeclaration; },\n/* harmony export */   isObjectShorthandDeclaration: function() { return /* binding */ isObjectShorthandDeclaration; },\n/* harmony export */   isTopLevelDeclaration: function() { return /* binding */ isTopLevelDeclaration; },\n/* harmony export */   lookaheadCharCode: function() { return /* binding */ lookaheadCharCode; },\n/* harmony export */   lookaheadType: function() { return /* binding */ lookaheadType; },\n/* harmony export */   lookaheadTypeAndKeyword: function() { return /* binding */ lookaheadTypeAndKeyword; },\n/* harmony export */   match: function() { return /* binding */ match; },\n/* harmony export */   next: function() { return /* binding */ next; },\n/* harmony export */   nextTemplateToken: function() { return /* binding */ nextTemplateToken; },\n/* harmony export */   nextToken: function() { return /* binding */ nextToken; },\n/* harmony export */   nextTokenStart: function() { return /* binding */ nextTokenStart; },\n/* harmony export */   nextTokenStartSince: function() { return /* binding */ nextTokenStartSince; },\n/* harmony export */   popTypeContext: function() { return /* binding */ popTypeContext; },\n/* harmony export */   pushTypeContext: function() { return /* binding */ pushTypeContext; },\n/* harmony export */   rescan_gt: function() { return /* binding */ rescan_gt; },\n/* harmony export */   retokenizeSlashAsRegex: function() { return /* binding */ retokenizeSlashAsRegex; },\n/* harmony export */   skipLineComment: function() { return /* binding */ skipLineComment; },\n/* harmony export */   skipSpace: function() { return /* binding */ skipSpace; },\n/* harmony export */   skipWord: function() { return /* binding */ skipWord; }\n/* harmony export */ });\n/* harmony import */ var _traverser_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../traverser/base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _traverser_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../traverser/util */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _util_identifier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/identifier */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/identifier.js\");\n/* harmony import */ var _util_whitespace__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/whitespace */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/whitespace.js\");\n/* harmony import */ var _keywords__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _readWord__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./readWord */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/readWord.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* eslint max-len: 0 */\n\n\n\n\n\n\n\n\n\n\nvar IdentifierRole; (function (IdentifierRole) {\n  const Access = 0; IdentifierRole[IdentifierRole[\"Access\"] = Access] = \"Access\";\n  const ExportAccess = Access + 1; IdentifierRole[IdentifierRole[\"ExportAccess\"] = ExportAccess] = \"ExportAccess\";\n  const TopLevelDeclaration = ExportAccess + 1; IdentifierRole[IdentifierRole[\"TopLevelDeclaration\"] = TopLevelDeclaration] = \"TopLevelDeclaration\";\n  const FunctionScopedDeclaration = TopLevelDeclaration + 1; IdentifierRole[IdentifierRole[\"FunctionScopedDeclaration\"] = FunctionScopedDeclaration] = \"FunctionScopedDeclaration\";\n  const BlockScopedDeclaration = FunctionScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"BlockScopedDeclaration\"] = BlockScopedDeclaration] = \"BlockScopedDeclaration\";\n  const ObjectShorthandTopLevelDeclaration = BlockScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthandTopLevelDeclaration\"] = ObjectShorthandTopLevelDeclaration] = \"ObjectShorthandTopLevelDeclaration\";\n  const ObjectShorthandFunctionScopedDeclaration = ObjectShorthandTopLevelDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthandFunctionScopedDeclaration\"] = ObjectShorthandFunctionScopedDeclaration] = \"ObjectShorthandFunctionScopedDeclaration\";\n  const ObjectShorthandBlockScopedDeclaration = ObjectShorthandFunctionScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthandBlockScopedDeclaration\"] = ObjectShorthandBlockScopedDeclaration] = \"ObjectShorthandBlockScopedDeclaration\";\n  const ObjectShorthand = ObjectShorthandBlockScopedDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectShorthand\"] = ObjectShorthand] = \"ObjectShorthand\";\n  // Any identifier bound in an import statement, e.g. both A and b from\n  // `import A, * as b from 'A';`\n  const ImportDeclaration = ObjectShorthand + 1; IdentifierRole[IdentifierRole[\"ImportDeclaration\"] = ImportDeclaration] = \"ImportDeclaration\";\n  const ObjectKey = ImportDeclaration + 1; IdentifierRole[IdentifierRole[\"ObjectKey\"] = ObjectKey] = \"ObjectKey\";\n  // The `foo` in `import {foo as bar} from \"./abc\";`.\n  const ImportAccess = ObjectKey + 1; IdentifierRole[IdentifierRole[\"ImportAccess\"] = ImportAccess] = \"ImportAccess\";\n})(IdentifierRole || (IdentifierRole = {}));\n\n/**\n * Extra information on jsxTagStart tokens, used to determine which of the three\n * jsx functions are called in the automatic transform.\n */\nvar JSXRole; (function (JSXRole) {\n  // The element is self-closing or has a body that resolves to empty. We\n  // shouldn't emit children at all in this case.\n  const NoChildren = 0; JSXRole[JSXRole[\"NoChildren\"] = NoChildren] = \"NoChildren\";\n  // The element has a single explicit child, which might still be an arbitrary\n  // expression like an array. We should emit that expression as the children.\n  const OneChild = NoChildren + 1; JSXRole[JSXRole[\"OneChild\"] = OneChild] = \"OneChild\";\n  // The element has at least two explicitly-specified children or has spread\n  // children, so child positions are assumed to be \"static\". We should wrap\n  // these children in an array.\n  const StaticChildren = OneChild + 1; JSXRole[JSXRole[\"StaticChildren\"] = StaticChildren] = \"StaticChildren\";\n  // The element has a prop named \"key\" after a prop spread, so we should fall\n  // back to the createElement function.\n  const KeyAfterPropSpread = StaticChildren + 1; JSXRole[JSXRole[\"KeyAfterPropSpread\"] = KeyAfterPropSpread] = \"KeyAfterPropSpread\";\n})(JSXRole || (JSXRole = {}));\n\nfunction isDeclaration(token) {\n  const role = token.identifierRole;\n  return (\n    role === IdentifierRole.TopLevelDeclaration ||\n    role === IdentifierRole.FunctionScopedDeclaration ||\n    role === IdentifierRole.BlockScopedDeclaration ||\n    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\n    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration ||\n    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration\n  );\n}\n\nfunction isNonTopLevelDeclaration(token) {\n  const role = token.identifierRole;\n  return (\n    role === IdentifierRole.FunctionScopedDeclaration ||\n    role === IdentifierRole.BlockScopedDeclaration ||\n    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration ||\n    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration\n  );\n}\n\nfunction isTopLevelDeclaration(token) {\n  const role = token.identifierRole;\n  return (\n    role === IdentifierRole.TopLevelDeclaration ||\n    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\n    role === IdentifierRole.ImportDeclaration\n  );\n}\n\nfunction isBlockScopedDeclaration(token) {\n  const role = token.identifierRole;\n  // Treat top-level declarations as block scope since the distinction doesn't matter here.\n  return (\n    role === IdentifierRole.TopLevelDeclaration ||\n    role === IdentifierRole.BlockScopedDeclaration ||\n    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\n    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration\n  );\n}\n\nfunction isFunctionScopedDeclaration(token) {\n  const role = token.identifierRole;\n  return (\n    role === IdentifierRole.FunctionScopedDeclaration ||\n    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration\n  );\n}\n\nfunction isObjectShorthandDeclaration(token) {\n  return (\n    token.identifierRole === IdentifierRole.ObjectShorthandTopLevelDeclaration ||\n    token.identifierRole === IdentifierRole.ObjectShorthandBlockScopedDeclaration ||\n    token.identifierRole === IdentifierRole.ObjectShorthandFunctionScopedDeclaration\n  );\n}\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\nclass Token {\n  constructor() {\n    this.type = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.type;\n    this.contextualKeyword = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.contextualKeyword;\n    this.start = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.start;\n    this.end = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.end;\n    this.scopeDepth = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.scopeDepth;\n    this.isType = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType;\n    this.identifierRole = null;\n    this.jsxRole = null;\n    this.shadowsGlobal = false;\n    this.isAsyncOperation = false;\n    this.contextId = null;\n    this.rhsEndIndex = null;\n    this.isExpression = false;\n    this.numNullishCoalesceStarts = 0;\n    this.numNullishCoalesceEnds = 0;\n    this.isOptionalChainStart = false;\n    this.isOptionalChainEnd = false;\n    this.subscriptStartIndex = null;\n    this.nullishStartIndex = null;\n  }\n\n  \n  \n  \n  \n  \n  \n  \n  \n  // Initially false for all tokens, then may be computed in a follow-up step that does scope\n  // analysis.\n  \n  // Initially false for all tokens, but may be set during transform to mark it as containing an\n  // await operation.\n  \n  \n  // For assignments, the index of the RHS. For export tokens, the end of the export.\n  \n  // For class tokens, records if the class is a class expression or a class statement.\n  \n  // Number of times to insert a `nullishCoalesce(` snippet before this token.\n  \n  // Number of times to insert a `)` snippet after this token.\n  \n  // If true, insert an `optionalChain([` snippet before this token.\n  \n  // If true, insert a `])` snippet after this token.\n  \n  // Tag for `.`, `?.`, `[`, `?.[`, `(`, and `?.(` to denote the \"root\" token for this\n  // subscript chain. This can be used to determine if this chain is an optional chain.\n  \n  // Tag for `??` operators to denote the root token for this nullish coalescing call.\n  \n}\n\n// ## Tokenizer\n\n// Move to the next token\nfunction next() {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.tokens.push(new Token());\n  nextToken();\n}\n\n// Call instead of next when inside a template, since that needs to be handled differently.\nfunction nextTemplateToken() {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.tokens.push(new Token());\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.start = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  readTmplToken();\n}\n\n// The tokenizer never parses regexes by default. Instead, the parser is responsible for\n// instructing it to parse a regex when we see a slash at the start of an expression.\nfunction retokenizeSlashAsRegex() {\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.type === _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign) {\n    --_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  }\n  readRegexp();\n}\n\nfunction pushTypeContext(existingTokensInType) {\n  for (let i = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.tokens.length - existingTokensInType; i < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.tokens.length; i++) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.tokens[i].isType = true;\n  }\n  const oldIsType = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType = true;\n  return oldIsType;\n}\n\nfunction popTypeContext(oldIsType) {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType = oldIsType;\n}\n\nfunction eat(type) {\n  if (match(type)) {\n    next();\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction eatTypeToken(tokenType) {\n  const oldIsType = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType = true;\n  eat(tokenType);\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType = oldIsType;\n}\n\nfunction match(type) {\n  return _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.type === type;\n}\n\nfunction lookaheadType() {\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.snapshot();\n  next();\n  const type = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.type;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.restoreFromSnapshot(snapshot);\n  return type;\n}\n\nclass TypeAndKeyword {\n  \n  \n  constructor(type, contextualKeyword) {\n    this.type = type;\n    this.contextualKeyword = contextualKeyword;\n  }\n}\n\nfunction lookaheadTypeAndKeyword() {\n  const snapshot = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.snapshot();\n  next();\n  const type = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.type;\n  const contextualKeyword = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.contextualKeyword;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.restoreFromSnapshot(snapshot);\n  return new TypeAndKeyword(type, contextualKeyword);\n}\n\nfunction nextTokenStart() {\n  return nextTokenStartSince(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n}\n\nfunction nextTokenStartSince(pos) {\n  _util_whitespace__WEBPACK_IMPORTED_MODULE_4__.skipWhiteSpace.lastIndex = pos;\n  const skip = _util_whitespace__WEBPACK_IMPORTED_MODULE_4__.skipWhiteSpace.exec(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input);\n  return pos + skip[0].length;\n}\n\nfunction lookaheadCharCode() {\n  return _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(nextTokenStart());\n}\n\n// Read a single token, updating the parser object's token-related\n// properties.\nfunction nextToken() {\n  skipSpace();\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.start = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos >= _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n    const tokens = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.tokens;\n    // We normally run past the end a bit, but if we're way past the end, avoid an infinite loop.\n    // Also check the token positions rather than the types since sometimes we rewrite the token\n    // type to something else.\n    if (\n      tokens.length >= 2 &&\n      tokens[tokens.length - 1].start >= _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length &&\n      tokens[tokens.length - 2].start >= _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length\n    ) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_1__.unexpected)(\"Unexpectedly reached the end of input.\");\n    }\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.eof);\n    return;\n  }\n  readToken(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos));\n}\n\nfunction readToken(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (\n    _util_identifier__WEBPACK_IMPORTED_MODULE_3__.IS_IDENTIFIER_START[code] ||\n    code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.backslash ||\n    (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.atSign && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.atSign)\n  ) {\n    (0,_readWord__WEBPACK_IMPORTED_MODULE_6__[\"default\"])();\n  } else {\n    getTokenFromCode(code);\n  }\n}\n\nfunction skipBlockComment() {\n  while (\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos) !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.asterisk ||\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1) !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.slash\n  ) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos > _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_1__.unexpected)(\"Unterminated comment\", _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos - 2);\n      return;\n    }\n  }\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 2;\n}\n\nfunction skipLineComment(startSkip) {\n  let ch = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt((_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += startSkip));\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n    while (\n      ch !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lineFeed &&\n      ch !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.carriageReturn &&\n      ch !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lineSeparator &&\n      ch !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.paragraphSeparator &&\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length\n    ) {\n      ch = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    }\n  }\n}\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments.\nfunction skipSpace() {\n  while (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n    const ch = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    switch (ch) {\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.carriageReturn:\n        if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lineFeed) {\n          ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n        }\n\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lineFeed:\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lineSeparator:\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.paragraphSeparator:\n        ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n        break;\n\n      case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.slash:\n        switch (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1)) {\n          case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.asterisk:\n            _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 2;\n            skipBlockComment();\n            break;\n\n          case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.slash:\n            skipLineComment(2);\n            break;\n\n          default:\n            return;\n        }\n        break;\n\n      default:\n        if (_util_whitespace__WEBPACK_IMPORTED_MODULE_4__.IS_WHITESPACE[ch]) {\n          ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n        } else {\n          return;\n        }\n    }\n  }\n}\n\n// Called at the end of every token. Sets various fields, and skips the space after the token, so\n// that the next one's `start` will point at the right position.\nfunction finishToken(\n  type,\n  contextualKeyword = _keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword.NONE,\n) {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.end = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.type = type;\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.contextualKeyword = contextualKeyword;\n}\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\nfunction readToken_dot() {\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n  if (nextChar >= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit0 && nextChar <= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit9) {\n    readNumber(true);\n    return;\n  }\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dot && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dot) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 3;\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.ellipsis);\n  } else {\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.dot);\n  }\n}\n\nfunction readToken_slash() {\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, 2);\n  } else {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.slash, 1);\n  }\n}\n\nfunction readToken_mult_modulo(code) {\n  // '%*'\n  let tokenType = code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.asterisk ? _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.star : _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.modulo;\n  let width = 1;\n  let nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n\n  // Exponentiation operator **\n  if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.asterisk && nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.asterisk) {\n    width++;\n    nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2);\n    tokenType = _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.exponent;\n  }\n\n  // Match *= or %=, disallowing *=> which can be valid in flow.\n  if (\n    nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo &&\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2) !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.greaterThan\n  ) {\n    width++;\n    tokenType = _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign;\n  }\n\n  finishOp(tokenType, width);\n}\n\nfunction readToken_pipe_amp(code) {\n  // '|&'\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n\n  if (nextChar === code) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n      // ||= or &&=\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, 3);\n    } else {\n      // || or &&\n      finishOp(code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.verticalBar ? _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.logicalOR : _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.logicalAND, 2);\n    }\n    return;\n  }\n\n  if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.verticalBar) {\n    // '|>'\n    if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.greaterThan) {\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.pipeline, 2);\n      return;\n    } else if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.rightCurlyBrace && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.isFlowEnabled) {\n      // '|}'\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceBarR, 2);\n      return;\n    }\n  }\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, 2);\n    return;\n  }\n\n  finishOp(code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.verticalBar ? _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bitwiseOR : _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bitwiseAND, 1);\n}\n\nfunction readToken_caret() {\n  // '^'\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, 2);\n  } else {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bitwiseXOR, 1);\n  }\n}\n\nfunction readToken_plus_min(code) {\n  // '+-'\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n\n  if (nextChar === code) {\n    // Tentatively call this a prefix operator, but it might be changed to postfix later.\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.preIncDec, 2);\n    return;\n  }\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, 2);\n  } else if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.plusSign) {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.plus, 1);\n  } else {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.minus, 1);\n  }\n}\n\nfunction readToken_lt() {\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lessThan) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, 3);\n      return;\n    }\n    // We see <<, but need to be really careful about whether to treat it as a\n    // true left-shift or as two < tokens.\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType) {\n      // Within a type, << might come up in a snippet like `Array<<T>() => void>`,\n      // so treat it as two < tokens. Importantly, this should only override <<\n      // rather than other tokens like <= . If we treated <= as < in a type\n      // context, then the snippet `a as T <= 1` would incorrectly start parsing\n      // a type argument on T. We don't need to worry about `a as T << 1`\n      // because TypeScript disallows that syntax.\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.lessThan, 1);\n    } else {\n      // Outside a type, this might be a true left-shift operator, or it might\n      // still be two open-type-arg tokens, such as in `f<<T>() => void>()`. We\n      // look at the token while considering the `f`, so we don't yet know that\n      // we're in a type context. In this case, we initially tokenize as a\n      // left-shift and correct after-the-fact as necessary in\n      // tsParseTypeArgumentsWithPossibleBitshift .\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bitShiftL, 2);\n    }\n    return;\n  }\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n    // <=\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.relationalOrEqual, 2);\n  } else {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.lessThan, 1);\n  }\n}\n\nfunction readToken_gt() {\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType) {\n    // Avoid right-shift for things like `Array<Array<string>>` and\n    // greater-than-or-equal for things like `const a: Array<number>=[];`.\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.greaterThan, 1);\n    return;\n  }\n\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.greaterThan) {\n    const size = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.greaterThan ? 3 : 2;\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + size) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, size + 1);\n      return;\n    }\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bitShiftR, size);\n    return;\n  }\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n    // >=\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.relationalOrEqual, 2);\n  } else {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.greaterThan, 1);\n  }\n}\n\n/**\n * Reinterpret a possible > token when transitioning from a type to a non-type\n * context.\n *\n * This comes up in two situations where >= needs to be treated as one token:\n * - After an `as` expression, like in the code `a as T >= 1`.\n * - In a type argument in an expression context, e.g. `f(a < b, c >= d)`, we\n *   need to see the token as >= so that we get an error and backtrack to\n *   normal expression parsing.\n *\n * Other situations require >= to be seen as two tokens, e.g.\n * `const x: Array<T>=[];`, so it's important to treat > as its own token in\n * typical type parsing situations.\n */\nfunction rescan_gt() {\n  if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.type === _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.greaterThan) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos -= 1;\n    readToken_gt();\n  }\n}\n\nfunction readToken_eq_excl(code) {\n  // '=!'\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n    finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.equality, _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo ? 3 : 2);\n    return;\n  }\n  if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo && nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.greaterThan) {\n    // '=>'\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 2;\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.arrow);\n    return;\n  }\n  finishOp(code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo ? _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.eq : _types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bang, 1);\n}\n\nfunction readToken_question() {\n  // '?'\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n  const nextChar2 = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 2);\n  if (\n    nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.questionMark &&\n    // In Flow (but not TypeScript), ??string is a valid type that should be\n    // tokenized as two individual ? tokens.\n    !(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.isFlowEnabled && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.isType)\n  ) {\n    if (nextChar2 === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo) {\n      // '??='\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign, 3);\n    } else {\n      // '??'\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.nullishCoalescing, 2);\n    }\n  } else if (\n    nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dot &&\n    !(nextChar2 >= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit0 && nextChar2 <= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit9)\n  ) {\n    // '.' not followed by a number\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 2;\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.questionDot);\n  } else {\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.question);\n  }\n}\n\nfunction getTokenFromCode(code) {\n  switch (code) {\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.numberSign:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.hash);\n      return;\n\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dot:\n      readToken_dot();\n      return;\n\n    // Punctuation tokens.\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.leftParenthesis:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL);\n      return;\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.rightParenthesis:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR);\n      return;\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.semicolon:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.semi);\n      return;\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.comma:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma);\n      return;\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.leftSquareBracket:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketL);\n      return;\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.rightSquareBracket:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketR);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.leftCurlyBrace:\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.isFlowEnabled && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.verticalBar) {\n        finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceBarL, 2);\n      } else {\n        ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n        finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceL);\n      }\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.rightCurlyBrace:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceR);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.colon:\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.colon) {\n        finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.doubleColon, 2);\n      } else {\n        ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n        finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.colon);\n      }\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.questionMark:\n      readToken_question();\n      return;\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.atSign:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.at);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.graveAccent:\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.backQuote);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit0: {\n      const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1);\n      // '0x', '0X', '0o', '0O', '0b', '0B'\n      if (\n        nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseX ||\n        nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.uppercaseX ||\n        nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseO ||\n        nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.uppercaseO ||\n        nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseB ||\n        nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.uppercaseB\n      ) {\n        readRadixNumber();\n        return;\n      }\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit1:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit2:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit3:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit4:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit5:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit6:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit7:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit8:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit9:\n      readNumber(false);\n      return;\n\n    // Quotes produce strings.\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.quotationMark:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.apostrophe:\n      readString(code);\n      return;\n\n    // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.slash:\n      readToken_slash();\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.percentSign:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.asterisk:\n      readToken_mult_modulo(code);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.verticalBar:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.ampersand:\n      readToken_pipe_amp(code);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.caret:\n      readToken_caret();\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.plusSign:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dash:\n      readToken_plus_min(code);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lessThan:\n      readToken_lt();\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.greaterThan:\n      readToken_gt();\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.equalsTo:\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.exclamationMark:\n      readToken_eq_excl(code);\n      return;\n\n    case _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.tilde:\n      finishOp(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.tilde, 1);\n      return;\n\n    default:\n      break;\n  }\n\n  (0,_traverser_util__WEBPACK_IMPORTED_MODULE_1__.unexpected)(`Unexpected character '${String.fromCharCode(code)}'`, _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n}\n\nfunction finishOp(type, size) {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += size;\n  finishToken(type);\n}\n\nfunction readRegexp() {\n  const start = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  let escaped = false;\n  let inClass = false;\n  for (;;) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos >= _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_1__.unexpected)(\"Unterminated regular expression\", start);\n      return;\n    }\n    const code = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    if (escaped) {\n      escaped = false;\n    } else {\n      if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.leftSquareBracket) {\n        inClass = true;\n      } else if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.rightSquareBracket && inClass) {\n        inClass = false;\n      } else if (code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.slash && !inClass) {\n        break;\n      }\n      escaped = code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.backslash;\n    }\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  }\n  ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  // Need to use `skipWord` because '\\uXXXX' sequences are allowed here (don't ask).\n  skipWord();\n\n  finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.regexp);\n}\n\n/**\n * Read a decimal integer. Note that this can't be unified with the similar code\n * in readRadixNumber (which also handles hex digits) because \"e\" needs to be\n * the end of the integer so that we can properly handle scientific notation.\n */\nfunction readInt() {\n  while (true) {\n    const code = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    if ((code >= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit0 && code <= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit9) || code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.underscore) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n    } else {\n      break;\n    }\n  }\n}\n\nfunction readRadixNumber() {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 2; // 0x\n\n  // Walk to the end of the number, allowing hex digits.\n  while (true) {\n    const code = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    if (\n      (code >= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit0 && code <= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.digit9) ||\n      (code >= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseA && code <= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseF) ||\n      (code >= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.uppercaseA && code <= _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.uppercaseF) ||\n      code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.underscore\n    ) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n    } else {\n      break;\n    }\n  }\n\n  const nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseN) {\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bigint);\n  } else {\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.num);\n  }\n}\n\n// Read an integer, octal integer, or floating-point number.\nfunction readNumber(startsWithDot) {\n  let isBigInt = false;\n  let isDecimal = false;\n\n  if (!startsWithDot) {\n    readInt();\n  }\n\n  let nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dot) {\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n    readInt();\n    nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n  }\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.uppercaseE || nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseE) {\n    nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.plusSign || nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dash) {\n      ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n    }\n    readInt();\n    nextChar = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n  }\n\n  if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseN) {\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n    isBigInt = true;\n  } else if (nextChar === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lowercaseM) {\n    ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n    isDecimal = true;\n  }\n\n  if (isBigInt) {\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bigint);\n    return;\n  }\n\n  if (isDecimal) {\n    finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.decimal);\n    return;\n  }\n\n  finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.num);\n}\n\nfunction readString(quote) {\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n  for (;;) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos >= _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_1__.unexpected)(\"Unterminated string constant\");\n      return;\n    }\n    const ch = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.backslash) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n    } else if (ch === quote) {\n      break;\n    }\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n  }\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n  finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.string);\n}\n\n// Reads template string tokens.\nfunction readTmplToken() {\n  for (;;) {\n    if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos >= _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n      (0,_traverser_util__WEBPACK_IMPORTED_MODULE_1__.unexpected)(\"Unterminated template\");\n      return;\n    }\n    const ch = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    if (\n      ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.graveAccent ||\n      (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dollarSign && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos + 1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.leftCurlyBrace)\n    ) {\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos === _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.start && match(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.template)) {\n        if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.dollarSign) {\n          _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 2;\n          finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.dollarBraceL);\n          return;\n        } else {\n          ++_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n          finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.backQuote);\n          return;\n        }\n      }\n      finishToken(_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.template);\n      return;\n    }\n    if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.backslash) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n    }\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n  }\n}\n\n// Skip to the end of the current word. Note that this is the same as the snippet at the end of\n// readWord, but calling skipWord from readWord seems to slightly hurt performance from some rough\n// measurements.\nfunction skipWord() {\n  while (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n    const ch = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos);\n    if (_util_identifier__WEBPACK_IMPORTED_MODULE_3__.IS_IDENTIFIER_CHAR[ch]) {\n      _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n    } else if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.backslash) {\n      // \\u\n      _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos += 2;\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos) === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.leftCurlyBrace) {\n        while (\n          _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length &&\n          _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(_traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos) !== _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.rightCurlyBrace\n        ) {\n          _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n        }\n        _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos++;\n      }\n    } else {\n      break;\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js":
/*!********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContextualKeyword: function() { return /* binding */ ContextualKeyword; }\n/* harmony export */ });\nvar ContextualKeyword; (function (ContextualKeyword) {\n  const NONE = 0; ContextualKeyword[ContextualKeyword[\"NONE\"] = NONE] = \"NONE\";\n  const _abstract = NONE + 1; ContextualKeyword[ContextualKeyword[\"_abstract\"] = _abstract] = \"_abstract\";\n  const _accessor = _abstract + 1; ContextualKeyword[ContextualKeyword[\"_accessor\"] = _accessor] = \"_accessor\";\n  const _as = _accessor + 1; ContextualKeyword[ContextualKeyword[\"_as\"] = _as] = \"_as\";\n  const _assert = _as + 1; ContextualKeyword[ContextualKeyword[\"_assert\"] = _assert] = \"_assert\";\n  const _asserts = _assert + 1; ContextualKeyword[ContextualKeyword[\"_asserts\"] = _asserts] = \"_asserts\";\n  const _async = _asserts + 1; ContextualKeyword[ContextualKeyword[\"_async\"] = _async] = \"_async\";\n  const _await = _async + 1; ContextualKeyword[ContextualKeyword[\"_await\"] = _await] = \"_await\";\n  const _checks = _await + 1; ContextualKeyword[ContextualKeyword[\"_checks\"] = _checks] = \"_checks\";\n  const _constructor = _checks + 1; ContextualKeyword[ContextualKeyword[\"_constructor\"] = _constructor] = \"_constructor\";\n  const _declare = _constructor + 1; ContextualKeyword[ContextualKeyword[\"_declare\"] = _declare] = \"_declare\";\n  const _enum = _declare + 1; ContextualKeyword[ContextualKeyword[\"_enum\"] = _enum] = \"_enum\";\n  const _exports = _enum + 1; ContextualKeyword[ContextualKeyword[\"_exports\"] = _exports] = \"_exports\";\n  const _from = _exports + 1; ContextualKeyword[ContextualKeyword[\"_from\"] = _from] = \"_from\";\n  const _get = _from + 1; ContextualKeyword[ContextualKeyword[\"_get\"] = _get] = \"_get\";\n  const _global = _get + 1; ContextualKeyword[ContextualKeyword[\"_global\"] = _global] = \"_global\";\n  const _implements = _global + 1; ContextualKeyword[ContextualKeyword[\"_implements\"] = _implements] = \"_implements\";\n  const _infer = _implements + 1; ContextualKeyword[ContextualKeyword[\"_infer\"] = _infer] = \"_infer\";\n  const _interface = _infer + 1; ContextualKeyword[ContextualKeyword[\"_interface\"] = _interface] = \"_interface\";\n  const _is = _interface + 1; ContextualKeyword[ContextualKeyword[\"_is\"] = _is] = \"_is\";\n  const _keyof = _is + 1; ContextualKeyword[ContextualKeyword[\"_keyof\"] = _keyof] = \"_keyof\";\n  const _mixins = _keyof + 1; ContextualKeyword[ContextualKeyword[\"_mixins\"] = _mixins] = \"_mixins\";\n  const _module = _mixins + 1; ContextualKeyword[ContextualKeyword[\"_module\"] = _module] = \"_module\";\n  const _namespace = _module + 1; ContextualKeyword[ContextualKeyword[\"_namespace\"] = _namespace] = \"_namespace\";\n  const _of = _namespace + 1; ContextualKeyword[ContextualKeyword[\"_of\"] = _of] = \"_of\";\n  const _opaque = _of + 1; ContextualKeyword[ContextualKeyword[\"_opaque\"] = _opaque] = \"_opaque\";\n  const _out = _opaque + 1; ContextualKeyword[ContextualKeyword[\"_out\"] = _out] = \"_out\";\n  const _override = _out + 1; ContextualKeyword[ContextualKeyword[\"_override\"] = _override] = \"_override\";\n  const _private = _override + 1; ContextualKeyword[ContextualKeyword[\"_private\"] = _private] = \"_private\";\n  const _protected = _private + 1; ContextualKeyword[ContextualKeyword[\"_protected\"] = _protected] = \"_protected\";\n  const _proto = _protected + 1; ContextualKeyword[ContextualKeyword[\"_proto\"] = _proto] = \"_proto\";\n  const _public = _proto + 1; ContextualKeyword[ContextualKeyword[\"_public\"] = _public] = \"_public\";\n  const _readonly = _public + 1; ContextualKeyword[ContextualKeyword[\"_readonly\"] = _readonly] = \"_readonly\";\n  const _require = _readonly + 1; ContextualKeyword[ContextualKeyword[\"_require\"] = _require] = \"_require\";\n  const _satisfies = _require + 1; ContextualKeyword[ContextualKeyword[\"_satisfies\"] = _satisfies] = \"_satisfies\";\n  const _set = _satisfies + 1; ContextualKeyword[ContextualKeyword[\"_set\"] = _set] = \"_set\";\n  const _static = _set + 1; ContextualKeyword[ContextualKeyword[\"_static\"] = _static] = \"_static\";\n  const _symbol = _static + 1; ContextualKeyword[ContextualKeyword[\"_symbol\"] = _symbol] = \"_symbol\";\n  const _type = _symbol + 1; ContextualKeyword[ContextualKeyword[\"_type\"] = _type] = \"_type\";\n  const _unique = _type + 1; ContextualKeyword[ContextualKeyword[\"_unique\"] = _unique] = \"_unique\";\n  const _using = _unique + 1; ContextualKeyword[ContextualKeyword[\"_using\"] = _using] = \"_using\";\n})(ContextualKeyword || (ContextualKeyword = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90b2tlbml6ZXIva2V5d29yZHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLHVCQUF1QjtBQUM5QixrQkFBa0I7QUFDbEIsOEJBQThCO0FBQzlCLG1DQUFtQztBQUNuQyw2QkFBNkI7QUFDN0IsMkJBQTJCO0FBQzNCLGdDQUFnQztBQUNoQywrQkFBK0I7QUFDL0IsNkJBQTZCO0FBQzdCLDhCQUE4QjtBQUM5QixvQ0FBb0M7QUFDcEMscUNBQXFDO0FBQ3JDLDhCQUE4QjtBQUM5Qiw4QkFBOEI7QUFDOUIsOEJBQThCO0FBQzlCLDBCQUEwQjtBQUMxQiw0QkFBNEI7QUFDNUIsbUNBQW1DO0FBQ25DLGtDQUFrQztBQUNsQyxpQ0FBaUM7QUFDakMsOEJBQThCO0FBQzlCLDBCQUEwQjtBQUMxQiw4QkFBOEI7QUFDOUIsK0JBQStCO0FBQy9CLGtDQUFrQztBQUNsQyw4QkFBOEI7QUFDOUIsMkJBQTJCO0FBQzNCLDRCQUE0QjtBQUM1Qiw4QkFBOEI7QUFDOUIsa0NBQWtDO0FBQ2xDLG1DQUFtQztBQUNuQyxpQ0FBaUM7QUFDakMsOEJBQThCO0FBQzlCLGlDQUFpQztBQUNqQyxrQ0FBa0M7QUFDbEMsbUNBQW1DO0FBQ25DLCtCQUErQjtBQUMvQiw0QkFBNEI7QUFDNUIsK0JBQStCO0FBQy9CLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLENBQUMsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90b2tlbml6ZXIva2V5d29yZHMuanM/ZWFmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIENvbnRleHR1YWxLZXl3b3JkOyAoZnVuY3Rpb24gKENvbnRleHR1YWxLZXl3b3JkKSB7XG4gIGNvbnN0IE5PTkUgPSAwOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIk5PTkVcIl0gPSBOT05FXSA9IFwiTk9ORVwiO1xuICBjb25zdCBfYWJzdHJhY3QgPSBOT05FICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfYWJzdHJhY3RcIl0gPSBfYWJzdHJhY3RdID0gXCJfYWJzdHJhY3RcIjtcbiAgY29uc3QgX2FjY2Vzc29yID0gX2Fic3RyYWN0ICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfYWNjZXNzb3JcIl0gPSBfYWNjZXNzb3JdID0gXCJfYWNjZXNzb3JcIjtcbiAgY29uc3QgX2FzID0gX2FjY2Vzc29yICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfYXNcIl0gPSBfYXNdID0gXCJfYXNcIjtcbiAgY29uc3QgX2Fzc2VydCA9IF9hcyArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2Fzc2VydFwiXSA9IF9hc3NlcnRdID0gXCJfYXNzZXJ0XCI7XG4gIGNvbnN0IF9hc3NlcnRzID0gX2Fzc2VydCArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2Fzc2VydHNcIl0gPSBfYXNzZXJ0c10gPSBcIl9hc3NlcnRzXCI7XG4gIGNvbnN0IF9hc3luYyA9IF9hc3NlcnRzICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfYXN5bmNcIl0gPSBfYXN5bmNdID0gXCJfYXN5bmNcIjtcbiAgY29uc3QgX2F3YWl0ID0gX2FzeW5jICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfYXdhaXRcIl0gPSBfYXdhaXRdID0gXCJfYXdhaXRcIjtcbiAgY29uc3QgX2NoZWNrcyA9IF9hd2FpdCArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2NoZWNrc1wiXSA9IF9jaGVja3NdID0gXCJfY2hlY2tzXCI7XG4gIGNvbnN0IF9jb25zdHJ1Y3RvciA9IF9jaGVja3MgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9jb25zdHJ1Y3RvclwiXSA9IF9jb25zdHJ1Y3Rvcl0gPSBcIl9jb25zdHJ1Y3RvclwiO1xuICBjb25zdCBfZGVjbGFyZSA9IF9jb25zdHJ1Y3RvciArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2RlY2xhcmVcIl0gPSBfZGVjbGFyZV0gPSBcIl9kZWNsYXJlXCI7XG4gIGNvbnN0IF9lbnVtID0gX2RlY2xhcmUgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9lbnVtXCJdID0gX2VudW1dID0gXCJfZW51bVwiO1xuICBjb25zdCBfZXhwb3J0cyA9IF9lbnVtICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfZXhwb3J0c1wiXSA9IF9leHBvcnRzXSA9IFwiX2V4cG9ydHNcIjtcbiAgY29uc3QgX2Zyb20gPSBfZXhwb3J0cyArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2Zyb21cIl0gPSBfZnJvbV0gPSBcIl9mcm9tXCI7XG4gIGNvbnN0IF9nZXQgPSBfZnJvbSArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2dldFwiXSA9IF9nZXRdID0gXCJfZ2V0XCI7XG4gIGNvbnN0IF9nbG9iYWwgPSBfZ2V0ICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfZ2xvYmFsXCJdID0gX2dsb2JhbF0gPSBcIl9nbG9iYWxcIjtcbiAgY29uc3QgX2ltcGxlbWVudHMgPSBfZ2xvYmFsICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfaW1wbGVtZW50c1wiXSA9IF9pbXBsZW1lbnRzXSA9IFwiX2ltcGxlbWVudHNcIjtcbiAgY29uc3QgX2luZmVyID0gX2ltcGxlbWVudHMgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9pbmZlclwiXSA9IF9pbmZlcl0gPSBcIl9pbmZlclwiO1xuICBjb25zdCBfaW50ZXJmYWNlID0gX2luZmVyICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfaW50ZXJmYWNlXCJdID0gX2ludGVyZmFjZV0gPSBcIl9pbnRlcmZhY2VcIjtcbiAgY29uc3QgX2lzID0gX2ludGVyZmFjZSArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2lzXCJdID0gX2lzXSA9IFwiX2lzXCI7XG4gIGNvbnN0IF9rZXlvZiA9IF9pcyArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX2tleW9mXCJdID0gX2tleW9mXSA9IFwiX2tleW9mXCI7XG4gIGNvbnN0IF9taXhpbnMgPSBfa2V5b2YgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9taXhpbnNcIl0gPSBfbWl4aW5zXSA9IFwiX21peGluc1wiO1xuICBjb25zdCBfbW9kdWxlID0gX21peGlucyArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX21vZHVsZVwiXSA9IF9tb2R1bGVdID0gXCJfbW9kdWxlXCI7XG4gIGNvbnN0IF9uYW1lc3BhY2UgPSBfbW9kdWxlICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfbmFtZXNwYWNlXCJdID0gX25hbWVzcGFjZV0gPSBcIl9uYW1lc3BhY2VcIjtcbiAgY29uc3QgX29mID0gX25hbWVzcGFjZSArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX29mXCJdID0gX29mXSA9IFwiX29mXCI7XG4gIGNvbnN0IF9vcGFxdWUgPSBfb2YgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9vcGFxdWVcIl0gPSBfb3BhcXVlXSA9IFwiX29wYXF1ZVwiO1xuICBjb25zdCBfb3V0ID0gX29wYXF1ZSArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX291dFwiXSA9IF9vdXRdID0gXCJfb3V0XCI7XG4gIGNvbnN0IF9vdmVycmlkZSA9IF9vdXQgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9vdmVycmlkZVwiXSA9IF9vdmVycmlkZV0gPSBcIl9vdmVycmlkZVwiO1xuICBjb25zdCBfcHJpdmF0ZSA9IF9vdmVycmlkZSArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX3ByaXZhdGVcIl0gPSBfcHJpdmF0ZV0gPSBcIl9wcml2YXRlXCI7XG4gIGNvbnN0IF9wcm90ZWN0ZWQgPSBfcHJpdmF0ZSArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX3Byb3RlY3RlZFwiXSA9IF9wcm90ZWN0ZWRdID0gXCJfcHJvdGVjdGVkXCI7XG4gIGNvbnN0IF9wcm90byA9IF9wcm90ZWN0ZWQgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9wcm90b1wiXSA9IF9wcm90b10gPSBcIl9wcm90b1wiO1xuICBjb25zdCBfcHVibGljID0gX3Byb3RvICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfcHVibGljXCJdID0gX3B1YmxpY10gPSBcIl9wdWJsaWNcIjtcbiAgY29uc3QgX3JlYWRvbmx5ID0gX3B1YmxpYyArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX3JlYWRvbmx5XCJdID0gX3JlYWRvbmx5XSA9IFwiX3JlYWRvbmx5XCI7XG4gIGNvbnN0IF9yZXF1aXJlID0gX3JlYWRvbmx5ICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfcmVxdWlyZVwiXSA9IF9yZXF1aXJlXSA9IFwiX3JlcXVpcmVcIjtcbiAgY29uc3QgX3NhdGlzZmllcyA9IF9yZXF1aXJlICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfc2F0aXNmaWVzXCJdID0gX3NhdGlzZmllc10gPSBcIl9zYXRpc2ZpZXNcIjtcbiAgY29uc3QgX3NldCA9IF9zYXRpc2ZpZXMgKyAxOyBDb250ZXh0dWFsS2V5d29yZFtDb250ZXh0dWFsS2V5d29yZFtcIl9zZXRcIl0gPSBfc2V0XSA9IFwiX3NldFwiO1xuICBjb25zdCBfc3RhdGljID0gX3NldCArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX3N0YXRpY1wiXSA9IF9zdGF0aWNdID0gXCJfc3RhdGljXCI7XG4gIGNvbnN0IF9zeW1ib2wgPSBfc3RhdGljICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfc3ltYm9sXCJdID0gX3N5bWJvbF0gPSBcIl9zeW1ib2xcIjtcbiAgY29uc3QgX3R5cGUgPSBfc3ltYm9sICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfdHlwZVwiXSA9IF90eXBlXSA9IFwiX3R5cGVcIjtcbiAgY29uc3QgX3VuaXF1ZSA9IF90eXBlICsgMTsgQ29udGV4dHVhbEtleXdvcmRbQ29udGV4dHVhbEtleXdvcmRbXCJfdW5pcXVlXCJdID0gX3VuaXF1ZV0gPSBcIl91bmlxdWVcIjtcbiAgY29uc3QgX3VzaW5nID0gX3VuaXF1ZSArIDE7IENvbnRleHR1YWxLZXl3b3JkW0NvbnRleHR1YWxLZXl3b3JkW1wiX3VzaW5nXCJdID0gX3VzaW5nXSA9IFwiX3VzaW5nXCI7XG59KShDb250ZXh0dWFsS2V5d29yZCB8fCAoQ29udGV4dHVhbEtleXdvcmQgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/readWord.js":
/*!********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/tokenizer/readWord.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ readWord; }\n/* harmony export */ });\n/* harmony import */ var _traverser_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../traverser/base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _util_identifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/identifier */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/identifier.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _readWordTree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./readWordTree */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/readWordTree.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n\n\n\n/**\n * Read an identifier, producing either a name token or matching on one of the existing keywords.\n * For performance, we pre-generate big decision tree that we traverse. Each node represents a\n * prefix and has 27 values, where the first value is the token or contextual token, if any (-1 if\n * not), and the other 26 values are the transitions to other nodes, or -1 to stop.\n */\nfunction readWord() {\n  let treePos = 0;\n  let code = 0;\n  let pos = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos;\n  while (pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n    code = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(pos);\n    if (code < _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.lowercaseA || code > _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.lowercaseZ) {\n      break;\n    }\n    const next = _readWordTree__WEBPACK_IMPORTED_MODULE_4__.READ_WORD_TREE[treePos + (code - _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.lowercaseA) + 1];\n    if (next === -1) {\n      break;\n    } else {\n      treePos = next;\n      pos++;\n    }\n  }\n\n  const keywordValue = _readWordTree__WEBPACK_IMPORTED_MODULE_4__.READ_WORD_TREE[treePos];\n  if (keywordValue > -1 && !_util_identifier__WEBPACK_IMPORTED_MODULE_2__.IS_IDENTIFIER_CHAR[code]) {\n    _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos = pos;\n    if (keywordValue & 1) {\n      (0,_index__WEBPACK_IMPORTED_MODULE_3__.finishToken)(keywordValue >>> 1);\n    } else {\n      (0,_index__WEBPACK_IMPORTED_MODULE_3__.finishToken)(_types__WEBPACK_IMPORTED_MODULE_5__.TokenType.name, keywordValue >>> 1);\n    }\n    return;\n  }\n\n  while (pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length) {\n    const ch = _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(pos);\n    if (_util_identifier__WEBPACK_IMPORTED_MODULE_2__.IS_IDENTIFIER_CHAR[ch]) {\n      pos++;\n    } else if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.backslash) {\n      // \\u\n      pos += 2;\n      if (_traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(pos) === _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.leftCurlyBrace) {\n        while (pos < _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.length && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(pos) !== _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.rightCurlyBrace) {\n          pos++;\n        }\n        pos++;\n      }\n    } else if (ch === _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.atSign && _traverser_base__WEBPACK_IMPORTED_MODULE_0__.input.charCodeAt(pos + 1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.atSign) {\n      pos += 2;\n    } else {\n      break;\n    }\n  }\n  _traverser_base__WEBPACK_IMPORTED_MODULE_0__.state.pos = pos;\n  (0,_index__WEBPACK_IMPORTED_MODULE_3__.finishToken)(_types__WEBPACK_IMPORTED_MODULE_5__.TokenType.name);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90b2tlbml6ZXIvcmVhZFdvcmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQztBQUNIO0FBQ1U7QUFDbEI7QUFDVTtBQUNOOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQSxZQUFZLGtEQUFLO0FBQ2pCLGVBQWUsa0RBQUs7QUFDcEIsV0FBVyxrREFBSztBQUNoQixlQUFlLHNEQUFTLHNCQUFzQixzREFBUztBQUN2RDtBQUNBO0FBQ0EsaUJBQWlCLHlEQUFjLG1CQUFtQixzREFBUztBQUMzRDtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1Qix5REFBYztBQUNyQyw0QkFBNEIsZ0VBQWtCO0FBQzlDLElBQUksa0RBQUs7QUFDVDtBQUNBLE1BQU0sbURBQVc7QUFDakIsTUFBTTtBQUNOLE1BQU0sbURBQVcsQ0FBQyw2Q0FBRTtBQUNwQjtBQUNBO0FBQ0E7O0FBRUEsZUFBZSxrREFBSztBQUNwQixlQUFlLGtEQUFLO0FBQ3BCLFFBQVEsZ0VBQWtCO0FBQzFCO0FBQ0EsTUFBTSxnQkFBZ0Isc0RBQVM7QUFDL0I7QUFDQTtBQUNBLFVBQVUsa0RBQUsscUJBQXFCLHNEQUFTO0FBQzdDLHFCQUFxQixrREFBSyxXQUFXLGtEQUFLLHFCQUFxQixzREFBUztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sZ0JBQWdCLHNEQUFTLFdBQVcsa0RBQUsseUJBQXlCLHNEQUFTO0FBQ2pGO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLEVBQUUsa0RBQUs7QUFDUCxFQUFFLG1EQUFXLENBQUMsNkNBQUU7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vcGFyc2VyL3Rva2VuaXplci9yZWFkV29yZC5qcz9lNjZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5wdXQsIHN0YXRlfSBmcm9tIFwiLi4vdHJhdmVyc2VyL2Jhc2VcIjtcbmltcG9ydCB7Y2hhckNvZGVzfSBmcm9tIFwiLi4vdXRpbC9jaGFyY29kZXNcIjtcbmltcG9ydCB7SVNfSURFTlRJRklFUl9DSEFSfSBmcm9tIFwiLi4vdXRpbC9pZGVudGlmaWVyXCI7XG5pbXBvcnQge2ZpbmlzaFRva2VufSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHtSRUFEX1dPUkRfVFJFRX0gZnJvbSBcIi4vcmVhZFdvcmRUcmVlXCI7XG5pbXBvcnQge1Rva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuLyoqXG4gKiBSZWFkIGFuIGlkZW50aWZpZXIsIHByb2R1Y2luZyBlaXRoZXIgYSBuYW1lIHRva2VuIG9yIG1hdGNoaW5nIG9uIG9uZSBvZiB0aGUgZXhpc3Rpbmcga2V5d29yZHMuXG4gKiBGb3IgcGVyZm9ybWFuY2UsIHdlIHByZS1nZW5lcmF0ZSBiaWcgZGVjaXNpb24gdHJlZSB0aGF0IHdlIHRyYXZlcnNlLiBFYWNoIG5vZGUgcmVwcmVzZW50cyBhXG4gKiBwcmVmaXggYW5kIGhhcyAyNyB2YWx1ZXMsIHdoZXJlIHRoZSBmaXJzdCB2YWx1ZSBpcyB0aGUgdG9rZW4gb3IgY29udGV4dHVhbCB0b2tlbiwgaWYgYW55ICgtMSBpZlxuICogbm90KSwgYW5kIHRoZSBvdGhlciAyNiB2YWx1ZXMgYXJlIHRoZSB0cmFuc2l0aW9ucyB0byBvdGhlciBub2Rlcywgb3IgLTEgdG8gc3RvcC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVhZFdvcmQoKSB7XG4gIGxldCB0cmVlUG9zID0gMDtcbiAgbGV0IGNvZGUgPSAwO1xuICBsZXQgcG9zID0gc3RhdGUucG9zO1xuICB3aGlsZSAocG9zIDwgaW5wdXQubGVuZ3RoKSB7XG4gICAgY29kZSA9IGlucHV0LmNoYXJDb2RlQXQocG9zKTtcbiAgICBpZiAoY29kZSA8IGNoYXJDb2Rlcy5sb3dlcmNhc2VBIHx8IGNvZGUgPiBjaGFyQ29kZXMubG93ZXJjYXNlWikge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGNvbnN0IG5leHQgPSBSRUFEX1dPUkRfVFJFRVt0cmVlUG9zICsgKGNvZGUgLSBjaGFyQ29kZXMubG93ZXJjYXNlQSkgKyAxXTtcbiAgICBpZiAobmV4dCA9PT0gLTEpIHtcbiAgICAgIGJyZWFrO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmVlUG9zID0gbmV4dDtcbiAgICAgIHBvcysrO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGtleXdvcmRWYWx1ZSA9IFJFQURfV09SRF9UUkVFW3RyZWVQb3NdO1xuICBpZiAoa2V5d29yZFZhbHVlID4gLTEgJiYgIUlTX0lERU5USUZJRVJfQ0hBUltjb2RlXSkge1xuICAgIHN0YXRlLnBvcyA9IHBvcztcbiAgICBpZiAoa2V5d29yZFZhbHVlICYgMSkge1xuICAgICAgZmluaXNoVG9rZW4oa2V5d29yZFZhbHVlID4+PiAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmluaXNoVG9rZW4odHQubmFtZSwga2V5d29yZFZhbHVlID4+PiAxKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgd2hpbGUgKHBvcyA8IGlucHV0Lmxlbmd0aCkge1xuICAgIGNvbnN0IGNoID0gaW5wdXQuY2hhckNvZGVBdChwb3MpO1xuICAgIGlmIChJU19JREVOVElGSUVSX0NIQVJbY2hdKSB7XG4gICAgICBwb3MrKztcbiAgICB9IGVsc2UgaWYgKGNoID09PSBjaGFyQ29kZXMuYmFja3NsYXNoKSB7XG4gICAgICAvLyBcXHVcbiAgICAgIHBvcyArPSAyO1xuICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocG9zKSA9PT0gY2hhckNvZGVzLmxlZnRDdXJseUJyYWNlKSB7XG4gICAgICAgIHdoaWxlIChwb3MgPCBpbnB1dC5sZW5ndGggJiYgaW5wdXQuY2hhckNvZGVBdChwb3MpICE9PSBjaGFyQ29kZXMucmlnaHRDdXJseUJyYWNlKSB7XG4gICAgICAgICAgcG9zKys7XG4gICAgICAgIH1cbiAgICAgICAgcG9zKys7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjaCA9PT0gY2hhckNvZGVzLmF0U2lnbiAmJiBpbnB1dC5jaGFyQ29kZUF0KHBvcyArIDEpID09PSBjaGFyQ29kZXMuYXRTaWduKSB7XG4gICAgICBwb3MgKz0gMjtcbiAgICB9IGVsc2Uge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHN0YXRlLnBvcyA9IHBvcztcbiAgZmluaXNoVG9rZW4odHQubmFtZSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/readWord.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/readWordTree.js":
/*!************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/tokenizer/readWordTree.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   READ_WORD_TREE: function() { return /* binding */ READ_WORD_TREE; }\n/* harmony export */ });\n/* harmony import */ var _keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n// Generated file, do not edit! Run \"yarn generate\" to re-generate this file.\n\n\n\n// prettier-ignore\nconst READ_WORD_TREE = new Int32Array([\n  // \"\"\n  -1, 27, 783, 918, 1755, 2376, 2862, 3483, -1, 3699, -1, 4617, 4752, 4833, 5130, 5508, 5940, -1, 6480, 6939, 7749, 8181, 8451, 8613, -1, 8829, -1,\n  // \"a\"\n  -1, -1, 54, 243, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 432, -1, -1, -1, 675, -1, -1, -1,\n  // \"ab\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, -1, -1, -1, -1, -1, -1, -1,\n  // \"abs\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1,\n  // \"abst\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 135, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"abstr\"\n  -1, 162, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"abstra\"\n  -1, -1, -1, 189, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"abstrac\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 216, -1, -1, -1, -1, -1, -1,\n  // \"abstract\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._abstract << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ac\"\n  -1, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"acc\"\n  -1, -1, -1, -1, -1, 297, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"acce\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 324, -1, -1, -1, -1, -1, -1, -1,\n  // \"acces\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 351, -1, -1, -1, -1, -1, -1, -1,\n  // \"access\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 378, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"accesso\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 405, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"accessor\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._accessor << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"as\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._as << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 459, -1, -1, -1, -1, -1, 594, -1,\n  // \"ass\"\n  -1, -1, -1, -1, -1, 486, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"asse\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 513, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"asser\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 540, -1, -1, -1, -1, -1, -1,\n  // \"assert\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._assert << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 567, -1, -1, -1, -1, -1, -1, -1,\n  // \"asserts\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._asserts << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"asy\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 621, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"asyn\"\n  -1, -1, -1, 648, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"async\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._async << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"aw\"\n  -1, 702, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"awa\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 729, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"awai\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 756, -1, -1, -1, -1, -1, -1,\n  // \"await\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._await << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"b\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 810, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"br\"\n  -1, -1, -1, -1, -1, 837, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"bre\"\n  -1, 864, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"brea\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 891, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"break\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._break << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"c\"\n  -1, 945, -1, -1, -1, -1, -1, -1, 1107, -1, -1, -1, 1242, -1, -1, 1350, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ca\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 972, 1026, -1, -1, -1, -1, -1, -1,\n  // \"cas\"\n  -1, -1, -1, -1, -1, 999, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"case\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._case << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"cat\"\n  -1, -1, -1, 1053, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"catc\"\n  -1, -1, -1, -1, -1, -1, -1, -1, 1080, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"catch\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._catch << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ch\"\n  -1, -1, -1, -1, -1, 1134, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"che\"\n  -1, -1, -1, 1161, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"chec\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1188, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"check\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1215, -1, -1, -1, -1, -1, -1, -1,\n  // \"checks\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._checks << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"cl\"\n  -1, 1269, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"cla\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1296, -1, -1, -1, -1, -1, -1, -1,\n  // \"clas\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1323, -1, -1, -1, -1, -1, -1, -1,\n  // \"class\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._class << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"co\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1377, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"con\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1404, 1620, -1, -1, -1, -1, -1, -1,\n  // \"cons\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1431, -1, -1, -1, -1, -1, -1,\n  // \"const\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._const << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1458, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"constr\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1485, -1, -1, -1, -1, -1,\n  // \"constru\"\n  -1, -1, -1, 1512, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"construc\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1539, -1, -1, -1, -1, -1, -1,\n  // \"construct\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1566, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"constructo\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1593, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"constructor\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._constructor << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"cont\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 1647, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"conti\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1674, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"contin\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1701, -1, -1, -1, -1, -1,\n  // \"continu\"\n  -1, -1, -1, -1, -1, 1728, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"continue\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._continue << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"d\"\n  -1, -1, -1, -1, -1, 1782, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2349, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"de\"\n  -1, -1, 1809, 1971, -1, -1, 2106, -1, -1, -1, -1, -1, 2241, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"deb\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1836, -1, -1, -1, -1, -1,\n  // \"debu\"\n  -1, -1, -1, -1, -1, -1, -1, 1863, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"debug\"\n  -1, -1, -1, -1, -1, -1, -1, 1890, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"debugg\"\n  -1, -1, -1, -1, -1, 1917, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"debugge\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1944, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"debugger\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._debugger << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"dec\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1998, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"decl\"\n  -1, 2025, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"decla\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2052, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"declar\"\n  -1, -1, -1, -1, -1, 2079, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"declare\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._declare << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"def\"\n  -1, 2133, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"defa\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2160, -1, -1, -1, -1, -1,\n  // \"defau\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2187, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"defaul\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2214, -1, -1, -1, -1, -1, -1,\n  // \"default\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"del\"\n  -1, -1, -1, -1, -1, 2268, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"dele\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2295, -1, -1, -1, -1, -1, -1,\n  // \"delet\"\n  -1, -1, -1, -1, -1, 2322, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"delete\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._delete << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"do\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._do << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"e\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2403, -1, 2484, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2565, -1, -1,\n  // \"el\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2430, -1, -1, -1, -1, -1, -1, -1,\n  // \"els\"\n  -1, -1, -1, -1, -1, 2457, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"else\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._else << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"en\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2511, -1, -1, -1, -1, -1,\n  // \"enu\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2538, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"enum\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._enum << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ex\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2592, -1, -1, -1, 2727, -1, -1, -1, -1, -1, -1,\n  // \"exp\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2619, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"expo\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2646, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"expor\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2673, -1, -1, -1, -1, -1, -1,\n  // \"export\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2700, -1, -1, -1, -1, -1, -1, -1,\n  // \"exports\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._exports << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ext\"\n  -1, -1, -1, -1, -1, 2754, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"exte\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2781, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"exten\"\n  -1, -1, -1, -1, 2808, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"extend\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2835, -1, -1, -1, -1, -1, -1, -1,\n  // \"extends\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._extends << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"f\"\n  -1, 2889, -1, -1, -1, -1, -1, -1, -1, 2997, -1, -1, -1, -1, -1, 3159, -1, -1, 3213, -1, -1, 3294, -1, -1, -1, -1, -1,\n  // \"fa\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2916, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fal\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2943, -1, -1, -1, -1, -1, -1, -1,\n  // \"fals\"\n  -1, -1, -1, -1, -1, 2970, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"false\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._false << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3024, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fin\"\n  -1, 3051, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fina\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3078, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"final\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3105, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"finall\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3132, -1,\n  // \"finally\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._finally << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fo\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3186, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"for\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._for << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fr\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3240, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fro\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3267, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"from\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._from << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fu\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3321, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"fun\"\n  -1, -1, -1, 3348, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"func\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3375, -1, -1, -1, -1, -1, -1,\n  // \"funct\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 3402, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"functi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3429, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"functio\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3456, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"function\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._function << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"g\"\n  -1, -1, -1, -1, -1, 3510, -1, -1, -1, -1, -1, -1, 3564, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ge\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3537, -1, -1, -1, -1, -1, -1,\n  // \"get\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._get << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"gl\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3591, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"glo\"\n  -1, -1, 3618, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"glob\"\n  -1, 3645, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"globa\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3672, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"global\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._global << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"i\"\n  -1, -1, -1, -1, -1, -1, 3726, -1, -1, -1, -1, -1, -1, 3753, 4077, -1, -1, -1, -1, 4590, -1, -1, -1, -1, -1, -1, -1,\n  // \"if\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._if << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"im\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3780, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"imp\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3807, -1, -1, 3996, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"impl\"\n  -1, -1, -1, -1, -1, 3834, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"imple\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3861, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"implem\"\n  -1, -1, -1, -1, -1, 3888, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"impleme\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3915, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"implemen\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3942, -1, -1, -1, -1, -1, -1,\n  // \"implement\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3969, -1, -1, -1, -1, -1, -1, -1,\n  // \"implements\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._implements << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"impo\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4023, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"impor\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4050, -1, -1, -1, -1, -1, -1,\n  // \"import\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._import << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"in\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._in << 1) + 1, -1, -1, -1, -1, -1, 4104, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4185, 4401, -1, -1, -1, -1, -1, -1,\n  // \"inf\"\n  -1, -1, -1, -1, -1, 4131, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"infe\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4158, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"infer\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._infer << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ins\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4212, -1, -1, -1, -1, -1, -1,\n  // \"inst\"\n  -1, 4239, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"insta\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4266, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"instan\"\n  -1, -1, -1, 4293, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"instanc\"\n  -1, -1, -1, -1, -1, 4320, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"instance\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4347, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"instanceo\"\n  -1, -1, -1, -1, -1, -1, 4374, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"instanceof\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._instanceof << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"int\"\n  -1, -1, -1, -1, -1, 4428, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"inte\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4455, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"inter\"\n  -1, -1, -1, -1, -1, -1, 4482, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"interf\"\n  -1, 4509, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"interfa\"\n  -1, -1, -1, 4536, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"interfac\"\n  -1, -1, -1, -1, -1, 4563, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"interface\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._interface << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"is\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._is << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"k\"\n  -1, -1, -1, -1, -1, 4644, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ke\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4671, -1,\n  // \"key\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4698, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"keyo\"\n  -1, -1, -1, -1, -1, -1, 4725, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"keyof\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._keyof << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"l\"\n  -1, -1, -1, -1, -1, 4779, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"le\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4806, -1, -1, -1, -1, -1, -1,\n  // \"let\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._let << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"m\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4860, -1, -1, -1, -1, -1, 4995, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"mi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4887, -1, -1,\n  // \"mix\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4914, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"mixi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4941, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"mixin\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4968, -1, -1, -1, -1, -1, -1, -1,\n  // \"mixins\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._mixins << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"mo\"\n  -1, -1, -1, -1, 5022, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"mod\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5049, -1, -1, -1, -1, -1,\n  // \"modu\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5076, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"modul\"\n  -1, -1, -1, -1, -1, 5103, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"module\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._module << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"n\"\n  -1, 5157, -1, -1, -1, 5373, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5427, -1, -1, -1, -1, -1,\n  // \"na\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5184, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"nam\"\n  -1, -1, -1, -1, -1, 5211, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"name\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5238, -1, -1, -1, -1, -1, -1, -1,\n  // \"names\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5265, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"namesp\"\n  -1, 5292, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"namespa\"\n  -1, -1, -1, 5319, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"namespac\"\n  -1, -1, -1, -1, -1, 5346, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"namespace\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._namespace << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ne\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5400, -1, -1, -1,\n  // \"new\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._new << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"nu\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5454, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"nul\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5481, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"null\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._null << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"o\"\n  -1, -1, -1, -1, -1, -1, 5535, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5562, -1, -1, -1, -1, 5697, 5751, -1, -1, -1, -1,\n  // \"of\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._of << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"op\"\n  -1, 5589, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"opa\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5616, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"opaq\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5643, -1, -1, -1, -1, -1,\n  // \"opaqu\"\n  -1, -1, -1, -1, -1, 5670, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"opaque\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._opaque << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ou\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5724, -1, -1, -1, -1, -1, -1,\n  // \"out\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._out << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ov\"\n  -1, -1, -1, -1, -1, 5778, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ove\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5805, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"over\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5832, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"overr\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 5859, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"overri\"\n  -1, -1, -1, -1, 5886, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"overrid\"\n  -1, -1, -1, -1, -1, 5913, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"override\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._override << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"p\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5967, -1, -1, 6345, -1, -1, -1, -1, -1,\n  // \"pr\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 5994, -1, -1, -1, -1, -1, 6129, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"pri\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6021, -1, -1, -1, -1,\n  // \"priv\"\n  -1, 6048, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"priva\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6075, -1, -1, -1, -1, -1, -1,\n  // \"privat\"\n  -1, -1, -1, -1, -1, 6102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"private\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._private << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"pro\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6156, -1, -1, -1, -1, -1, -1,\n  // \"prot\"\n  -1, -1, -1, -1, -1, 6183, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6318, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"prote\"\n  -1, -1, -1, 6210, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"protec\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6237, -1, -1, -1, -1, -1, -1,\n  // \"protect\"\n  -1, -1, -1, -1, -1, 6264, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"protecte\"\n  -1, -1, -1, -1, 6291, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"protected\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._protected << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"proto\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._proto << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"pu\"\n  -1, -1, 6372, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"pub\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6399, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"publ\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 6426, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"publi\"\n  -1, -1, -1, 6453, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"public\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._public << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"r\"\n  -1, -1, -1, -1, -1, 6507, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"re\"\n  -1, 6534, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6696, -1, -1, 6831, -1, -1, -1, -1, -1, -1,\n  // \"rea\"\n  -1, -1, -1, -1, 6561, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"read\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6588, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"reado\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6615, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"readon\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6642, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"readonl\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6669, -1,\n  // \"readonly\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._readonly << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"req\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6723, -1, -1, -1, -1, -1,\n  // \"requ\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 6750, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"requi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6777, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"requir\"\n  -1, -1, -1, -1, -1, 6804, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"require\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._require << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ret\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6858, -1, -1, -1, -1, -1,\n  // \"retu\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6885, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"retur\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6912, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"return\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._return << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"s\"\n  -1, 6966, -1, -1, -1, 7182, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7236, 7371, -1, 7479, -1, 7614, -1,\n  // \"sa\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6993, -1, -1, -1, -1, -1, -1,\n  // \"sat\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7020, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"sati\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7047, -1, -1, -1, -1, -1, -1, -1,\n  // \"satis\"\n  -1, -1, -1, -1, -1, -1, 7074, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"satisf\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7101, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"satisfi\"\n  -1, -1, -1, -1, -1, 7128, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"satisfie\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7155, -1, -1, -1, -1, -1, -1, -1,\n  // \"satisfies\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._satisfies << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"se\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7209, -1, -1, -1, -1, -1, -1,\n  // \"set\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._set << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"st\"\n  -1, 7263, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"sta\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7290, -1, -1, -1, -1, -1, -1,\n  // \"stat\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7317, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"stati\"\n  -1, -1, -1, 7344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"static\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._static << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"su\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7398, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"sup\"\n  -1, -1, -1, -1, -1, 7425, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"supe\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7452, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"super\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._super << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"sw\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7506, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"swi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7533, -1, -1, -1, -1, -1, -1,\n  // \"swit\"\n  -1, -1, -1, 7560, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"switc\"\n  -1, -1, -1, -1, -1, -1, -1, -1, 7587, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"switch\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._switch << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"sy\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7641, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"sym\"\n  -1, -1, 7668, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"symb\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7695, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"symbo\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7722, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"symbol\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._symbol << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"t\"\n  -1, -1, -1, -1, -1, -1, -1, -1, 7776, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7938, -1, -1, -1, -1, -1, -1, 8046, -1,\n  // \"th\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7803, -1, -1, -1, -1, -1, -1, -1, -1, 7857, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"thi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7830, -1, -1, -1, -1, -1, -1, -1,\n  // \"this\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._this << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"thr\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7884, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"thro\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7911, -1, -1, -1,\n  // \"throw\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._throw << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"tr\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7965, -1, -1, -1, 8019, -1,\n  // \"tru\"\n  -1, -1, -1, -1, -1, 7992, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"true\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._true << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"try\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._try << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"ty\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8073, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"typ\"\n  -1, -1, -1, -1, -1, 8100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"type\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._type << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8127, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"typeo\"\n  -1, -1, -1, -1, -1, -1, 8154, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"typeof\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._typeof << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"u\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8208, -1, -1, -1, -1, 8343, -1, -1, -1, -1, -1, -1, -1,\n  // \"un\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8235, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"uni\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8262, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"uniq\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8289, -1, -1, -1, -1, -1,\n  // \"uniqu\"\n  -1, -1, -1, -1, -1, 8316, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"unique\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._unique << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"us\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8370, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"usi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8397, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"usin\"\n  -1, -1, -1, -1, -1, -1, -1, 8424, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"using\"\n  _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._using << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"v\"\n  -1, 8478, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8532, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"va\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8505, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"var\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._var << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"vo\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8559, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"voi\"\n  -1, -1, -1, -1, 8586, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"void\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._void << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"w\"\n  -1, -1, -1, -1, -1, -1, -1, -1, 8640, 8748, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"wh\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8667, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"whi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8694, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"whil\"\n  -1, -1, -1, -1, -1, 8721, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"while\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._while << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"wi\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8775, -1, -1, -1, -1, -1, -1,\n  // \"wit\"\n  -1, -1, -1, -1, -1, -1, -1, -1, 8802, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"with\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._with << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"y\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8856, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"yi\"\n  -1, -1, -1, -1, -1, 8883, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"yie\"\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8910, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"yiel\"\n  -1, -1, -1, -1, 8937, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  // \"yield\"\n  (_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._yield << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/readWordTree.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/state.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/tokenizer/state.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scope: function() { return /* binding */ Scope; },\n/* harmony export */   StateSnapshot: function() { return /* binding */ StateSnapshot; },\n/* harmony export */   \"default\": function() { return /* binding */ State; }\n/* harmony export */ });\n/* harmony import */ var _keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\nclass Scope {\n  \n  \n  \n\n  constructor(startTokenIndex, endTokenIndex, isFunctionScope) {\n    this.startTokenIndex = startTokenIndex;\n    this.endTokenIndex = endTokenIndex;\n    this.isFunctionScope = isFunctionScope;\n  }\n}\n\nclass StateSnapshot {\n  constructor(\n     potentialArrowAt,\n     noAnonFunctionType,\n     inDisallowConditionalTypesContext,\n     tokensLength,\n     scopesLength,\n     pos,\n     type,\n     contextualKeyword,\n     start,\n     end,\n     isType,\n     scopeDepth,\n     error,\n  ) {;this.potentialArrowAt = potentialArrowAt;this.noAnonFunctionType = noAnonFunctionType;this.inDisallowConditionalTypesContext = inDisallowConditionalTypesContext;this.tokensLength = tokensLength;this.scopesLength = scopesLength;this.pos = pos;this.type = type;this.contextualKeyword = contextualKeyword;this.start = start;this.end = end;this.isType = isType;this.scopeDepth = scopeDepth;this.error = error;}\n}\n\nclass State {constructor() { State.prototype.__init.call(this);State.prototype.__init2.call(this);State.prototype.__init3.call(this);State.prototype.__init4.call(this);State.prototype.__init5.call(this);State.prototype.__init6.call(this);State.prototype.__init7.call(this);State.prototype.__init8.call(this);State.prototype.__init9.call(this);State.prototype.__init10.call(this);State.prototype.__init11.call(this);State.prototype.__init12.call(this);State.prototype.__init13.call(this); }\n  // Used to signify the start of a potential arrow function\n  __init() {this.potentialArrowAt = -1}\n\n  // Used by Flow to handle an edge case involving function type parsing.\n  __init2() {this.noAnonFunctionType = false}\n\n  // Used by TypeScript to handle ambiguities when parsing conditional types.\n  __init3() {this.inDisallowConditionalTypesContext = false}\n\n  // Token store.\n  __init4() {this.tokens = []}\n\n  // Array of all observed scopes, ordered by their ending position.\n  __init5() {this.scopes = []}\n\n  // The current position of the tokenizer in the input.\n  __init6() {this.pos = 0}\n\n  // Information about the current token.\n  __init7() {this.type = _types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eof}\n  __init8() {this.contextualKeyword = _keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword.NONE}\n  __init9() {this.start = 0}\n  __init10() {this.end = 0}\n\n  __init11() {this.isType = false}\n  __init12() {this.scopeDepth = 0}\n\n  /**\n   * If the parser is in an error state, then the token is always tt.eof and all functions can\n   * keep executing but should be written so they don't get into an infinite loop in this situation.\n   *\n   * This approach, combined with the ability to snapshot and restore state, allows us to implement\n   * backtracking without exceptions and without needing to explicitly propagate error states\n   * everywhere.\n   */\n  __init13() {this.error = null}\n\n  snapshot() {\n    return new StateSnapshot(\n      this.potentialArrowAt,\n      this.noAnonFunctionType,\n      this.inDisallowConditionalTypesContext,\n      this.tokens.length,\n      this.scopes.length,\n      this.pos,\n      this.type,\n      this.contextualKeyword,\n      this.start,\n      this.end,\n      this.isType,\n      this.scopeDepth,\n      this.error,\n    );\n  }\n\n  restoreFromSnapshot(snapshot) {\n    this.potentialArrowAt = snapshot.potentialArrowAt;\n    this.noAnonFunctionType = snapshot.noAnonFunctionType;\n    this.inDisallowConditionalTypesContext = snapshot.inDisallowConditionalTypesContext;\n    this.tokens.length = snapshot.tokensLength;\n    this.scopes.length = snapshot.scopesLength;\n    this.pos = snapshot.pos;\n    this.type = snapshot.type;\n    this.contextualKeyword = snapshot.contextualKeyword;\n    this.start = snapshot.start;\n    this.end = snapshot.end;\n    this.isType = snapshot.isType;\n    this.scopeDepth = snapshot.scopeDepth;\n    this.error = snapshot.error;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90b2tlbml6ZXIvc3RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQzZDO0FBQ0o7O0FBRWxDO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHlDQUF5Qyw2Q0FBNkMsMkVBQTJFLGlDQUFpQyxpQ0FBaUMsZUFBZSxpQkFBaUIsMkNBQTJDLG1CQUFtQixlQUFlLHFCQUFxQiw2QkFBNkI7QUFDeFk7O0FBRWUsYUFBYSxnQkFBZ0Isa0NBQWtDLG1DQUFtQyxtQ0FBbUMsbUNBQW1DLG1DQUFtQyxtQ0FBbUMsbUNBQW1DLG1DQUFtQyxtQ0FBbUMsb0NBQW9DLG9DQUFvQyxvQ0FBb0M7QUFDbGQ7QUFDQSxZQUFZOztBQUVaO0FBQ0EsYUFBYTs7QUFFYjtBQUNBLGFBQWE7O0FBRWI7QUFDQSxhQUFhOztBQUViO0FBQ0EsYUFBYTs7QUFFYjtBQUNBLGFBQWE7O0FBRWI7QUFDQSxhQUFhLFlBQVksNkNBQUU7QUFDM0IsYUFBYSx5QkFBeUIsd0RBQWlCO0FBQ3ZELGFBQWE7QUFDYixjQUFjOztBQUVkLGNBQWM7QUFDZCxjQUFjOztBQUVkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjOztBQUVkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vcGFyc2VyL3Rva2VuaXplci9zdGF0ZS5qcz9mNTg3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtDb250ZXh0dWFsS2V5d29yZH0gZnJvbSBcIi4va2V5d29yZHNcIjtcbmltcG9ydCB7IFRva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgXG4gIFxuICBcblxuICBjb25zdHJ1Y3RvcihzdGFydFRva2VuSW5kZXgsIGVuZFRva2VuSW5kZXgsIGlzRnVuY3Rpb25TY29wZSkge1xuICAgIHRoaXMuc3RhcnRUb2tlbkluZGV4ID0gc3RhcnRUb2tlbkluZGV4O1xuICAgIHRoaXMuZW5kVG9rZW5JbmRleCA9IGVuZFRva2VuSW5kZXg7XG4gICAgdGhpcy5pc0Z1bmN0aW9uU2NvcGUgPSBpc0Z1bmN0aW9uU2NvcGU7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFN0YXRlU25hcHNob3Qge1xuICBjb25zdHJ1Y3RvcihcbiAgICAgcG90ZW50aWFsQXJyb3dBdCxcbiAgICAgbm9Bbm9uRnVuY3Rpb25UeXBlLFxuICAgICBpbkRpc2FsbG93Q29uZGl0aW9uYWxUeXBlc0NvbnRleHQsXG4gICAgIHRva2Vuc0xlbmd0aCxcbiAgICAgc2NvcGVzTGVuZ3RoLFxuICAgICBwb3MsXG4gICAgIHR5cGUsXG4gICAgIGNvbnRleHR1YWxLZXl3b3JkLFxuICAgICBzdGFydCxcbiAgICAgZW5kLFxuICAgICBpc1R5cGUsXG4gICAgIHNjb3BlRGVwdGgsXG4gICAgIGVycm9yLFxuICApIHs7dGhpcy5wb3RlbnRpYWxBcnJvd0F0ID0gcG90ZW50aWFsQXJyb3dBdDt0aGlzLm5vQW5vbkZ1bmN0aW9uVHlwZSA9IG5vQW5vbkZ1bmN0aW9uVHlwZTt0aGlzLmluRGlzYWxsb3dDb25kaXRpb25hbFR5cGVzQ29udGV4dCA9IGluRGlzYWxsb3dDb25kaXRpb25hbFR5cGVzQ29udGV4dDt0aGlzLnRva2Vuc0xlbmd0aCA9IHRva2Vuc0xlbmd0aDt0aGlzLnNjb3Blc0xlbmd0aCA9IHNjb3Blc0xlbmd0aDt0aGlzLnBvcyA9IHBvczt0aGlzLnR5cGUgPSB0eXBlO3RoaXMuY29udGV4dHVhbEtleXdvcmQgPSBjb250ZXh0dWFsS2V5d29yZDt0aGlzLnN0YXJ0ID0gc3RhcnQ7dGhpcy5lbmQgPSBlbmQ7dGhpcy5pc1R5cGUgPSBpc1R5cGU7dGhpcy5zY29wZURlcHRoID0gc2NvcGVEZXB0aDt0aGlzLmVycm9yID0gZXJyb3I7fVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0ZSB7Y29uc3RydWN0b3IoKSB7IFN0YXRlLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtTdGF0ZS5wcm90b3R5cGUuX19pbml0Mi5jYWxsKHRoaXMpO1N0YXRlLnByb3RvdHlwZS5fX2luaXQzLmNhbGwodGhpcyk7U3RhdGUucHJvdG90eXBlLl9faW5pdDQuY2FsbCh0aGlzKTtTdGF0ZS5wcm90b3R5cGUuX19pbml0NS5jYWxsKHRoaXMpO1N0YXRlLnByb3RvdHlwZS5fX2luaXQ2LmNhbGwodGhpcyk7U3RhdGUucHJvdG90eXBlLl9faW5pdDcuY2FsbCh0aGlzKTtTdGF0ZS5wcm90b3R5cGUuX19pbml0OC5jYWxsKHRoaXMpO1N0YXRlLnByb3RvdHlwZS5fX2luaXQ5LmNhbGwodGhpcyk7U3RhdGUucHJvdG90eXBlLl9faW5pdDEwLmNhbGwodGhpcyk7U3RhdGUucHJvdG90eXBlLl9faW5pdDExLmNhbGwodGhpcyk7U3RhdGUucHJvdG90eXBlLl9faW5pdDEyLmNhbGwodGhpcyk7U3RhdGUucHJvdG90eXBlLl9faW5pdDEzLmNhbGwodGhpcyk7IH1cbiAgLy8gVXNlZCB0byBzaWduaWZ5IHRoZSBzdGFydCBvZiBhIHBvdGVudGlhbCBhcnJvdyBmdW5jdGlvblxuICBfX2luaXQoKSB7dGhpcy5wb3RlbnRpYWxBcnJvd0F0ID0gLTF9XG5cbiAgLy8gVXNlZCBieSBGbG93IHRvIGhhbmRsZSBhbiBlZGdlIGNhc2UgaW52b2x2aW5nIGZ1bmN0aW9uIHR5cGUgcGFyc2luZy5cbiAgX19pbml0MigpIHt0aGlzLm5vQW5vbkZ1bmN0aW9uVHlwZSA9IGZhbHNlfVxuXG4gIC8vIFVzZWQgYnkgVHlwZVNjcmlwdCB0byBoYW5kbGUgYW1iaWd1aXRpZXMgd2hlbiBwYXJzaW5nIGNvbmRpdGlvbmFsIHR5cGVzLlxuICBfX2luaXQzKCkge3RoaXMuaW5EaXNhbGxvd0NvbmRpdGlvbmFsVHlwZXNDb250ZXh0ID0gZmFsc2V9XG5cbiAgLy8gVG9rZW4gc3RvcmUuXG4gIF9faW5pdDQoKSB7dGhpcy50b2tlbnMgPSBbXX1cblxuICAvLyBBcnJheSBvZiBhbGwgb2JzZXJ2ZWQgc2NvcGVzLCBvcmRlcmVkIGJ5IHRoZWlyIGVuZGluZyBwb3NpdGlvbi5cbiAgX19pbml0NSgpIHt0aGlzLnNjb3BlcyA9IFtdfVxuXG4gIC8vIFRoZSBjdXJyZW50IHBvc2l0aW9uIG9mIHRoZSB0b2tlbml6ZXIgaW4gdGhlIGlucHV0LlxuICBfX2luaXQ2KCkge3RoaXMucG9zID0gMH1cblxuICAvLyBJbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCB0b2tlbi5cbiAgX19pbml0NygpIHt0aGlzLnR5cGUgPSB0dC5lb2Z9XG4gIF9faW5pdDgoKSB7dGhpcy5jb250ZXh0dWFsS2V5d29yZCA9IENvbnRleHR1YWxLZXl3b3JkLk5PTkV9XG4gIF9faW5pdDkoKSB7dGhpcy5zdGFydCA9IDB9XG4gIF9faW5pdDEwKCkge3RoaXMuZW5kID0gMH1cblxuICBfX2luaXQxMSgpIHt0aGlzLmlzVHlwZSA9IGZhbHNlfVxuICBfX2luaXQxMigpIHt0aGlzLnNjb3BlRGVwdGggPSAwfVxuXG4gIC8qKlxuICAgKiBJZiB0aGUgcGFyc2VyIGlzIGluIGFuIGVycm9yIHN0YXRlLCB0aGVuIHRoZSB0b2tlbiBpcyBhbHdheXMgdHQuZW9mIGFuZCBhbGwgZnVuY3Rpb25zIGNhblxuICAgKiBrZWVwIGV4ZWN1dGluZyBidXQgc2hvdWxkIGJlIHdyaXR0ZW4gc28gdGhleSBkb24ndCBnZXQgaW50byBhbiBpbmZpbml0ZSBsb29wIGluIHRoaXMgc2l0dWF0aW9uLlxuICAgKlxuICAgKiBUaGlzIGFwcHJvYWNoLCBjb21iaW5lZCB3aXRoIHRoZSBhYmlsaXR5IHRvIHNuYXBzaG90IGFuZCByZXN0b3JlIHN0YXRlLCBhbGxvd3MgdXMgdG8gaW1wbGVtZW50XG4gICAqIGJhY2t0cmFja2luZyB3aXRob3V0IGV4Y2VwdGlvbnMgYW5kIHdpdGhvdXQgbmVlZGluZyB0byBleHBsaWNpdGx5IHByb3BhZ2F0ZSBlcnJvciBzdGF0ZXNcbiAgICogZXZlcnl3aGVyZS5cbiAgICovXG4gIF9faW5pdDEzKCkge3RoaXMuZXJyb3IgPSBudWxsfVxuXG4gIHNuYXBzaG90KCkge1xuICAgIHJldHVybiBuZXcgU3RhdGVTbmFwc2hvdChcbiAgICAgIHRoaXMucG90ZW50aWFsQXJyb3dBdCxcbiAgICAgIHRoaXMubm9Bbm9uRnVuY3Rpb25UeXBlLFxuICAgICAgdGhpcy5pbkRpc2FsbG93Q29uZGl0aW9uYWxUeXBlc0NvbnRleHQsXG4gICAgICB0aGlzLnRva2Vucy5sZW5ndGgsXG4gICAgICB0aGlzLnNjb3Blcy5sZW5ndGgsXG4gICAgICB0aGlzLnBvcyxcbiAgICAgIHRoaXMudHlwZSxcbiAgICAgIHRoaXMuY29udGV4dHVhbEtleXdvcmQsXG4gICAgICB0aGlzLnN0YXJ0LFxuICAgICAgdGhpcy5lbmQsXG4gICAgICB0aGlzLmlzVHlwZSxcbiAgICAgIHRoaXMuc2NvcGVEZXB0aCxcbiAgICAgIHRoaXMuZXJyb3IsXG4gICAgKTtcbiAgfVxuXG4gIHJlc3RvcmVGcm9tU25hcHNob3Qoc25hcHNob3QpIHtcbiAgICB0aGlzLnBvdGVudGlhbEFycm93QXQgPSBzbmFwc2hvdC5wb3RlbnRpYWxBcnJvd0F0O1xuICAgIHRoaXMubm9Bbm9uRnVuY3Rpb25UeXBlID0gc25hcHNob3Qubm9Bbm9uRnVuY3Rpb25UeXBlO1xuICAgIHRoaXMuaW5EaXNhbGxvd0NvbmRpdGlvbmFsVHlwZXNDb250ZXh0ID0gc25hcHNob3QuaW5EaXNhbGxvd0NvbmRpdGlvbmFsVHlwZXNDb250ZXh0O1xuICAgIHRoaXMudG9rZW5zLmxlbmd0aCA9IHNuYXBzaG90LnRva2Vuc0xlbmd0aDtcbiAgICB0aGlzLnNjb3Blcy5sZW5ndGggPSBzbmFwc2hvdC5zY29wZXNMZW5ndGg7XG4gICAgdGhpcy5wb3MgPSBzbmFwc2hvdC5wb3M7XG4gICAgdGhpcy50eXBlID0gc25hcHNob3QudHlwZTtcbiAgICB0aGlzLmNvbnRleHR1YWxLZXl3b3JkID0gc25hcHNob3QuY29udGV4dHVhbEtleXdvcmQ7XG4gICAgdGhpcy5zdGFydCA9IHNuYXBzaG90LnN0YXJ0O1xuICAgIHRoaXMuZW5kID0gc25hcHNob3QuZW5kO1xuICAgIHRoaXMuaXNUeXBlID0gc25hcHNob3QuaXNUeXBlO1xuICAgIHRoaXMuc2NvcGVEZXB0aCA9IHNuYXBzaG90LnNjb3BlRGVwdGg7XG4gICAgdGhpcy5lcnJvciA9IHNuYXBzaG90LmVycm9yO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/state.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/tokenizer/types.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenType: function() { return /* binding */ TokenType; },\n/* harmony export */   formatTokenType: function() { return /* binding */ formatTokenType; }\n/* harmony export */ });\n// Generated file, do not edit! Run \"yarn generate\" to re-generate this file.\n/* istanbul ignore file */\n/**\n * Enum of all token types, with bit fields to signify meaningful properties.\n */\nvar TokenType; (function (TokenType) {\n  // Precedence 0 means not an operator; otherwise it is a positive number up to 12.\n  const PRECEDENCE_MASK = 0xf; TokenType[TokenType[\"PRECEDENCE_MASK\"] = PRECEDENCE_MASK] = \"PRECEDENCE_MASK\";\n  const IS_KEYWORD = 1 << 4; TokenType[TokenType[\"IS_KEYWORD\"] = IS_KEYWORD] = \"IS_KEYWORD\";\n  const IS_ASSIGN = 1 << 5; TokenType[TokenType[\"IS_ASSIGN\"] = IS_ASSIGN] = \"IS_ASSIGN\";\n  const IS_RIGHT_ASSOCIATIVE = 1 << 6; TokenType[TokenType[\"IS_RIGHT_ASSOCIATIVE\"] = IS_RIGHT_ASSOCIATIVE] = \"IS_RIGHT_ASSOCIATIVE\";\n  const IS_PREFIX = 1 << 7; TokenType[TokenType[\"IS_PREFIX\"] = IS_PREFIX] = \"IS_PREFIX\";\n  const IS_POSTFIX = 1 << 8; TokenType[TokenType[\"IS_POSTFIX\"] = IS_POSTFIX] = \"IS_POSTFIX\";\n  const IS_EXPRESSION_START = 1 << 9; TokenType[TokenType[\"IS_EXPRESSION_START\"] = IS_EXPRESSION_START] = \"IS_EXPRESSION_START\";\n\n  const num = 512; TokenType[TokenType[\"num\"] = num] = \"num\"; // num startsExpr\n  const bigint = 1536; TokenType[TokenType[\"bigint\"] = bigint] = \"bigint\"; // bigint startsExpr\n  const decimal = 2560; TokenType[TokenType[\"decimal\"] = decimal] = \"decimal\"; // decimal startsExpr\n  const regexp = 3584; TokenType[TokenType[\"regexp\"] = regexp] = \"regexp\"; // regexp startsExpr\n  const string = 4608; TokenType[TokenType[\"string\"] = string] = \"string\"; // string startsExpr\n  const name = 5632; TokenType[TokenType[\"name\"] = name] = \"name\"; // name startsExpr\n  const eof = 6144; TokenType[TokenType[\"eof\"] = eof] = \"eof\"; // eof\n  const bracketL = 7680; TokenType[TokenType[\"bracketL\"] = bracketL] = \"bracketL\"; // [ startsExpr\n  const bracketR = 8192; TokenType[TokenType[\"bracketR\"] = bracketR] = \"bracketR\"; // ]\n  const braceL = 9728; TokenType[TokenType[\"braceL\"] = braceL] = \"braceL\"; // { startsExpr\n  const braceBarL = 10752; TokenType[TokenType[\"braceBarL\"] = braceBarL] = \"braceBarL\"; // {| startsExpr\n  const braceR = 11264; TokenType[TokenType[\"braceR\"] = braceR] = \"braceR\"; // }\n  const braceBarR = 12288; TokenType[TokenType[\"braceBarR\"] = braceBarR] = \"braceBarR\"; // |}\n  const parenL = 13824; TokenType[TokenType[\"parenL\"] = parenL] = \"parenL\"; // ( startsExpr\n  const parenR = 14336; TokenType[TokenType[\"parenR\"] = parenR] = \"parenR\"; // )\n  const comma = 15360; TokenType[TokenType[\"comma\"] = comma] = \"comma\"; // ,\n  const semi = 16384; TokenType[TokenType[\"semi\"] = semi] = \"semi\"; // ;\n  const colon = 17408; TokenType[TokenType[\"colon\"] = colon] = \"colon\"; // :\n  const doubleColon = 18432; TokenType[TokenType[\"doubleColon\"] = doubleColon] = \"doubleColon\"; // ::\n  const dot = 19456; TokenType[TokenType[\"dot\"] = dot] = \"dot\"; // .\n  const question = 20480; TokenType[TokenType[\"question\"] = question] = \"question\"; // ?\n  const questionDot = 21504; TokenType[TokenType[\"questionDot\"] = questionDot] = \"questionDot\"; // ?.\n  const arrow = 22528; TokenType[TokenType[\"arrow\"] = arrow] = \"arrow\"; // =>\n  const template = 23552; TokenType[TokenType[\"template\"] = template] = \"template\"; // template\n  const ellipsis = 24576; TokenType[TokenType[\"ellipsis\"] = ellipsis] = \"ellipsis\"; // ...\n  const backQuote = 25600; TokenType[TokenType[\"backQuote\"] = backQuote] = \"backQuote\"; // `\n  const dollarBraceL = 27136; TokenType[TokenType[\"dollarBraceL\"] = dollarBraceL] = \"dollarBraceL\"; // ${ startsExpr\n  const at = 27648; TokenType[TokenType[\"at\"] = at] = \"at\"; // @\n  const hash = 29184; TokenType[TokenType[\"hash\"] = hash] = \"hash\"; // # startsExpr\n  const eq = 29728; TokenType[TokenType[\"eq\"] = eq] = \"eq\"; // = isAssign\n  const assign = 30752; TokenType[TokenType[\"assign\"] = assign] = \"assign\"; // _= isAssign\n  const preIncDec = 32640; TokenType[TokenType[\"preIncDec\"] = preIncDec] = \"preIncDec\"; // ++/-- prefix postfix startsExpr\n  const postIncDec = 33664; TokenType[TokenType[\"postIncDec\"] = postIncDec] = \"postIncDec\"; // ++/-- prefix postfix startsExpr\n  const bang = 34432; TokenType[TokenType[\"bang\"] = bang] = \"bang\"; // ! prefix startsExpr\n  const tilde = 35456; TokenType[TokenType[\"tilde\"] = tilde] = \"tilde\"; // ~ prefix startsExpr\n  const pipeline = 35841; TokenType[TokenType[\"pipeline\"] = pipeline] = \"pipeline\"; // |> prec:1\n  const nullishCoalescing = 36866; TokenType[TokenType[\"nullishCoalescing\"] = nullishCoalescing] = \"nullishCoalescing\"; // ?? prec:2\n  const logicalOR = 37890; TokenType[TokenType[\"logicalOR\"] = logicalOR] = \"logicalOR\"; // || prec:2\n  const logicalAND = 38915; TokenType[TokenType[\"logicalAND\"] = logicalAND] = \"logicalAND\"; // && prec:3\n  const bitwiseOR = 39940; TokenType[TokenType[\"bitwiseOR\"] = bitwiseOR] = \"bitwiseOR\"; // | prec:4\n  const bitwiseXOR = 40965; TokenType[TokenType[\"bitwiseXOR\"] = bitwiseXOR] = \"bitwiseXOR\"; // ^ prec:5\n  const bitwiseAND = 41990; TokenType[TokenType[\"bitwiseAND\"] = bitwiseAND] = \"bitwiseAND\"; // & prec:6\n  const equality = 43015; TokenType[TokenType[\"equality\"] = equality] = \"equality\"; // ==/!= prec:7\n  const lessThan = 44040; TokenType[TokenType[\"lessThan\"] = lessThan] = \"lessThan\"; // < prec:8\n  const greaterThan = 45064; TokenType[TokenType[\"greaterThan\"] = greaterThan] = \"greaterThan\"; // > prec:8\n  const relationalOrEqual = 46088; TokenType[TokenType[\"relationalOrEqual\"] = relationalOrEqual] = \"relationalOrEqual\"; // <=/>= prec:8\n  const bitShiftL = 47113; TokenType[TokenType[\"bitShiftL\"] = bitShiftL] = \"bitShiftL\"; // << prec:9\n  const bitShiftR = 48137; TokenType[TokenType[\"bitShiftR\"] = bitShiftR] = \"bitShiftR\"; // >>/>>> prec:9\n  const plus = 49802; TokenType[TokenType[\"plus\"] = plus] = \"plus\"; // + prec:10 prefix startsExpr\n  const minus = 50826; TokenType[TokenType[\"minus\"] = minus] = \"minus\"; // - prec:10 prefix startsExpr\n  const modulo = 51723; TokenType[TokenType[\"modulo\"] = modulo] = \"modulo\"; // % prec:11 startsExpr\n  const star = 52235; TokenType[TokenType[\"star\"] = star] = \"star\"; // * prec:11\n  const slash = 53259; TokenType[TokenType[\"slash\"] = slash] = \"slash\"; // / prec:11\n  const exponent = 54348; TokenType[TokenType[\"exponent\"] = exponent] = \"exponent\"; // ** prec:12 rightAssociative\n  const jsxName = 55296; TokenType[TokenType[\"jsxName\"] = jsxName] = \"jsxName\"; // jsxName\n  const jsxText = 56320; TokenType[TokenType[\"jsxText\"] = jsxText] = \"jsxText\"; // jsxText\n  const jsxEmptyText = 57344; TokenType[TokenType[\"jsxEmptyText\"] = jsxEmptyText] = \"jsxEmptyText\"; // jsxEmptyText\n  const jsxTagStart = 58880; TokenType[TokenType[\"jsxTagStart\"] = jsxTagStart] = \"jsxTagStart\"; // jsxTagStart startsExpr\n  const jsxTagEnd = 59392; TokenType[TokenType[\"jsxTagEnd\"] = jsxTagEnd] = \"jsxTagEnd\"; // jsxTagEnd\n  const typeParameterStart = 60928; TokenType[TokenType[\"typeParameterStart\"] = typeParameterStart] = \"typeParameterStart\"; // typeParameterStart startsExpr\n  const nonNullAssertion = 61440; TokenType[TokenType[\"nonNullAssertion\"] = nonNullAssertion] = \"nonNullAssertion\"; // nonNullAssertion\n  const _break = 62480; TokenType[TokenType[\"_break\"] = _break] = \"_break\"; // break keyword\n  const _case = 63504; TokenType[TokenType[\"_case\"] = _case] = \"_case\"; // case keyword\n  const _catch = 64528; TokenType[TokenType[\"_catch\"] = _catch] = \"_catch\"; // catch keyword\n  const _continue = 65552; TokenType[TokenType[\"_continue\"] = _continue] = \"_continue\"; // continue keyword\n  const _debugger = 66576; TokenType[TokenType[\"_debugger\"] = _debugger] = \"_debugger\"; // debugger keyword\n  const _default = 67600; TokenType[TokenType[\"_default\"] = _default] = \"_default\"; // default keyword\n  const _do = 68624; TokenType[TokenType[\"_do\"] = _do] = \"_do\"; // do keyword\n  const _else = 69648; TokenType[TokenType[\"_else\"] = _else] = \"_else\"; // else keyword\n  const _finally = 70672; TokenType[TokenType[\"_finally\"] = _finally] = \"_finally\"; // finally keyword\n  const _for = 71696; TokenType[TokenType[\"_for\"] = _for] = \"_for\"; // for keyword\n  const _function = 73232; TokenType[TokenType[\"_function\"] = _function] = \"_function\"; // function keyword startsExpr\n  const _if = 73744; TokenType[TokenType[\"_if\"] = _if] = \"_if\"; // if keyword\n  const _return = 74768; TokenType[TokenType[\"_return\"] = _return] = \"_return\"; // return keyword\n  const _switch = 75792; TokenType[TokenType[\"_switch\"] = _switch] = \"_switch\"; // switch keyword\n  const _throw = 77456; TokenType[TokenType[\"_throw\"] = _throw] = \"_throw\"; // throw keyword prefix startsExpr\n  const _try = 77840; TokenType[TokenType[\"_try\"] = _try] = \"_try\"; // try keyword\n  const _var = 78864; TokenType[TokenType[\"_var\"] = _var] = \"_var\"; // var keyword\n  const _let = 79888; TokenType[TokenType[\"_let\"] = _let] = \"_let\"; // let keyword\n  const _const = 80912; TokenType[TokenType[\"_const\"] = _const] = \"_const\"; // const keyword\n  const _while = 81936; TokenType[TokenType[\"_while\"] = _while] = \"_while\"; // while keyword\n  const _with = 82960; TokenType[TokenType[\"_with\"] = _with] = \"_with\"; // with keyword\n  const _new = 84496; TokenType[TokenType[\"_new\"] = _new] = \"_new\"; // new keyword startsExpr\n  const _this = 85520; TokenType[TokenType[\"_this\"] = _this] = \"_this\"; // this keyword startsExpr\n  const _super = 86544; TokenType[TokenType[\"_super\"] = _super] = \"_super\"; // super keyword startsExpr\n  const _class = 87568; TokenType[TokenType[\"_class\"] = _class] = \"_class\"; // class keyword startsExpr\n  const _extends = 88080; TokenType[TokenType[\"_extends\"] = _extends] = \"_extends\"; // extends keyword\n  const _export = 89104; TokenType[TokenType[\"_export\"] = _export] = \"_export\"; // export keyword\n  const _import = 90640; TokenType[TokenType[\"_import\"] = _import] = \"_import\"; // import keyword startsExpr\n  const _yield = 91664; TokenType[TokenType[\"_yield\"] = _yield] = \"_yield\"; // yield keyword startsExpr\n  const _null = 92688; TokenType[TokenType[\"_null\"] = _null] = \"_null\"; // null keyword startsExpr\n  const _true = 93712; TokenType[TokenType[\"_true\"] = _true] = \"_true\"; // true keyword startsExpr\n  const _false = 94736; TokenType[TokenType[\"_false\"] = _false] = \"_false\"; // false keyword startsExpr\n  const _in = 95256; TokenType[TokenType[\"_in\"] = _in] = \"_in\"; // in prec:8 keyword\n  const _instanceof = 96280; TokenType[TokenType[\"_instanceof\"] = _instanceof] = \"_instanceof\"; // instanceof prec:8 keyword\n  const _typeof = 97936; TokenType[TokenType[\"_typeof\"] = _typeof] = \"_typeof\"; // typeof keyword prefix startsExpr\n  const _void = 98960; TokenType[TokenType[\"_void\"] = _void] = \"_void\"; // void keyword prefix startsExpr\n  const _delete = 99984; TokenType[TokenType[\"_delete\"] = _delete] = \"_delete\"; // delete keyword prefix startsExpr\n  const _async = 100880; TokenType[TokenType[\"_async\"] = _async] = \"_async\"; // async keyword startsExpr\n  const _get = 101904; TokenType[TokenType[\"_get\"] = _get] = \"_get\"; // get keyword startsExpr\n  const _set = 102928; TokenType[TokenType[\"_set\"] = _set] = \"_set\"; // set keyword startsExpr\n  const _declare = 103952; TokenType[TokenType[\"_declare\"] = _declare] = \"_declare\"; // declare keyword startsExpr\n  const _readonly = 104976; TokenType[TokenType[\"_readonly\"] = _readonly] = \"_readonly\"; // readonly keyword startsExpr\n  const _abstract = 106000; TokenType[TokenType[\"_abstract\"] = _abstract] = \"_abstract\"; // abstract keyword startsExpr\n  const _static = 107024; TokenType[TokenType[\"_static\"] = _static] = \"_static\"; // static keyword startsExpr\n  const _public = 107536; TokenType[TokenType[\"_public\"] = _public] = \"_public\"; // public keyword\n  const _private = 108560; TokenType[TokenType[\"_private\"] = _private] = \"_private\"; // private keyword\n  const _protected = 109584; TokenType[TokenType[\"_protected\"] = _protected] = \"_protected\"; // protected keyword\n  const _override = 110608; TokenType[TokenType[\"_override\"] = _override] = \"_override\"; // override keyword\n  const _as = 112144; TokenType[TokenType[\"_as\"] = _as] = \"_as\"; // as keyword startsExpr\n  const _enum = 113168; TokenType[TokenType[\"_enum\"] = _enum] = \"_enum\"; // enum keyword startsExpr\n  const _type = 114192; TokenType[TokenType[\"_type\"] = _type] = \"_type\"; // type keyword startsExpr\n  const _implements = 115216; TokenType[TokenType[\"_implements\"] = _implements] = \"_implements\"; // implements keyword startsExpr\n})(TokenType || (TokenType = {}));\nfunction formatTokenType(tokenType) {\n  switch (tokenType) {\n    case TokenType.num:\n      return \"num\";\n    case TokenType.bigint:\n      return \"bigint\";\n    case TokenType.decimal:\n      return \"decimal\";\n    case TokenType.regexp:\n      return \"regexp\";\n    case TokenType.string:\n      return \"string\";\n    case TokenType.name:\n      return \"name\";\n    case TokenType.eof:\n      return \"eof\";\n    case TokenType.bracketL:\n      return \"[\";\n    case TokenType.bracketR:\n      return \"]\";\n    case TokenType.braceL:\n      return \"{\";\n    case TokenType.braceBarL:\n      return \"{|\";\n    case TokenType.braceR:\n      return \"}\";\n    case TokenType.braceBarR:\n      return \"|}\";\n    case TokenType.parenL:\n      return \"(\";\n    case TokenType.parenR:\n      return \")\";\n    case TokenType.comma:\n      return \",\";\n    case TokenType.semi:\n      return \";\";\n    case TokenType.colon:\n      return \":\";\n    case TokenType.doubleColon:\n      return \"::\";\n    case TokenType.dot:\n      return \".\";\n    case TokenType.question:\n      return \"?\";\n    case TokenType.questionDot:\n      return \"?.\";\n    case TokenType.arrow:\n      return \"=>\";\n    case TokenType.template:\n      return \"template\";\n    case TokenType.ellipsis:\n      return \"...\";\n    case TokenType.backQuote:\n      return \"`\";\n    case TokenType.dollarBraceL:\n      return \"${\";\n    case TokenType.at:\n      return \"@\";\n    case TokenType.hash:\n      return \"#\";\n    case TokenType.eq:\n      return \"=\";\n    case TokenType.assign:\n      return \"_=\";\n    case TokenType.preIncDec:\n      return \"++/--\";\n    case TokenType.postIncDec:\n      return \"++/--\";\n    case TokenType.bang:\n      return \"!\";\n    case TokenType.tilde:\n      return \"~\";\n    case TokenType.pipeline:\n      return \"|>\";\n    case TokenType.nullishCoalescing:\n      return \"??\";\n    case TokenType.logicalOR:\n      return \"||\";\n    case TokenType.logicalAND:\n      return \"&&\";\n    case TokenType.bitwiseOR:\n      return \"|\";\n    case TokenType.bitwiseXOR:\n      return \"^\";\n    case TokenType.bitwiseAND:\n      return \"&\";\n    case TokenType.equality:\n      return \"==/!=\";\n    case TokenType.lessThan:\n      return \"<\";\n    case TokenType.greaterThan:\n      return \">\";\n    case TokenType.relationalOrEqual:\n      return \"<=/>=\";\n    case TokenType.bitShiftL:\n      return \"<<\";\n    case TokenType.bitShiftR:\n      return \">>/>>>\";\n    case TokenType.plus:\n      return \"+\";\n    case TokenType.minus:\n      return \"-\";\n    case TokenType.modulo:\n      return \"%\";\n    case TokenType.star:\n      return \"*\";\n    case TokenType.slash:\n      return \"/\";\n    case TokenType.exponent:\n      return \"**\";\n    case TokenType.jsxName:\n      return \"jsxName\";\n    case TokenType.jsxText:\n      return \"jsxText\";\n    case TokenType.jsxEmptyText:\n      return \"jsxEmptyText\";\n    case TokenType.jsxTagStart:\n      return \"jsxTagStart\";\n    case TokenType.jsxTagEnd:\n      return \"jsxTagEnd\";\n    case TokenType.typeParameterStart:\n      return \"typeParameterStart\";\n    case TokenType.nonNullAssertion:\n      return \"nonNullAssertion\";\n    case TokenType._break:\n      return \"break\";\n    case TokenType._case:\n      return \"case\";\n    case TokenType._catch:\n      return \"catch\";\n    case TokenType._continue:\n      return \"continue\";\n    case TokenType._debugger:\n      return \"debugger\";\n    case TokenType._default:\n      return \"default\";\n    case TokenType._do:\n      return \"do\";\n    case TokenType._else:\n      return \"else\";\n    case TokenType._finally:\n      return \"finally\";\n    case TokenType._for:\n      return \"for\";\n    case TokenType._function:\n      return \"function\";\n    case TokenType._if:\n      return \"if\";\n    case TokenType._return:\n      return \"return\";\n    case TokenType._switch:\n      return \"switch\";\n    case TokenType._throw:\n      return \"throw\";\n    case TokenType._try:\n      return \"try\";\n    case TokenType._var:\n      return \"var\";\n    case TokenType._let:\n      return \"let\";\n    case TokenType._const:\n      return \"const\";\n    case TokenType._while:\n      return \"while\";\n    case TokenType._with:\n      return \"with\";\n    case TokenType._new:\n      return \"new\";\n    case TokenType._this:\n      return \"this\";\n    case TokenType._super:\n      return \"super\";\n    case TokenType._class:\n      return \"class\";\n    case TokenType._extends:\n      return \"extends\";\n    case TokenType._export:\n      return \"export\";\n    case TokenType._import:\n      return \"import\";\n    case TokenType._yield:\n      return \"yield\";\n    case TokenType._null:\n      return \"null\";\n    case TokenType._true:\n      return \"true\";\n    case TokenType._false:\n      return \"false\";\n    case TokenType._in:\n      return \"in\";\n    case TokenType._instanceof:\n      return \"instanceof\";\n    case TokenType._typeof:\n      return \"typeof\";\n    case TokenType._void:\n      return \"void\";\n    case TokenType._delete:\n      return \"delete\";\n    case TokenType._async:\n      return \"async\";\n    case TokenType._get:\n      return \"get\";\n    case TokenType._set:\n      return \"set\";\n    case TokenType._declare:\n      return \"declare\";\n    case TokenType._readonly:\n      return \"readonly\";\n    case TokenType._abstract:\n      return \"abstract\";\n    case TokenType._static:\n      return \"static\";\n    case TokenType._public:\n      return \"public\";\n    case TokenType._private:\n      return \"private\";\n    case TokenType._protected:\n      return \"protected\";\n    case TokenType._override:\n      return \"override\";\n    case TokenType._as:\n      return \"as\";\n    case TokenType._enum:\n      return \"enum\";\n    case TokenType._type:\n      return \"type\";\n    case TokenType._implements:\n      return \"implements\";\n    default:\n      return \"\";\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js":
/*!****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/traverser/base.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Loc: function() { return /* binding */ Loc; },\n/* harmony export */   augmentError: function() { return /* binding */ augmentError; },\n/* harmony export */   getNextContextId: function() { return /* binding */ getNextContextId; },\n/* harmony export */   initParser: function() { return /* binding */ initParser; },\n/* harmony export */   input: function() { return /* binding */ input; },\n/* harmony export */   isFlowEnabled: function() { return /* binding */ isFlowEnabled; },\n/* harmony export */   isJSXEnabled: function() { return /* binding */ isJSXEnabled; },\n/* harmony export */   isTypeScriptEnabled: function() { return /* binding */ isTypeScriptEnabled; },\n/* harmony export */   locationForIndex: function() { return /* binding */ locationForIndex; },\n/* harmony export */   nextContextId: function() { return /* binding */ nextContextId; },\n/* harmony export */   state: function() { return /* binding */ state; }\n/* harmony export */ });\n/* harmony import */ var _tokenizer_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/state */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/state.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n\n\n\nlet isJSXEnabled;\nlet isTypeScriptEnabled;\nlet isFlowEnabled;\nlet state;\nlet input;\nlet nextContextId;\n\nfunction getNextContextId() {\n  return nextContextId++;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction augmentError(error) {\n  if (\"pos\" in error) {\n    const loc = locationForIndex(error.pos);\n    error.message += ` (${loc.line}:${loc.column})`;\n    error.loc = loc;\n  }\n  return error;\n}\n\nclass Loc {\n  \n  \n  constructor(line, column) {\n    this.line = line;\n    this.column = column;\n  }\n}\n\nfunction locationForIndex(pos) {\n  let line = 1;\n  let column = 1;\n  for (let i = 0; i < pos; i++) {\n    if (input.charCodeAt(i) === _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.lineFeed) {\n      line++;\n      column = 1;\n    } else {\n      column++;\n    }\n  }\n  return new Loc(line, column);\n}\n\nfunction initParser(\n  inputCode,\n  isJSXEnabledArg,\n  isTypeScriptEnabledArg,\n  isFlowEnabledArg,\n) {\n  input = inputCode;\n  state = new _tokenizer_state__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  nextContextId = 1;\n  isJSXEnabled = isJSXEnabledArg;\n  isTypeScriptEnabled = isTypeScriptEnabledArg;\n  isFlowEnabled = isFlowEnabledArg;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90cmF2ZXJzZXIvYmFzZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ0s7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNQO0FBQ0E7O0FBRUE7QUFDTztBQUNQO0FBQ0E7QUFDQSwwQkFBMEIsU0FBUyxHQUFHLFdBQVc7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQSxrQkFBa0IsU0FBUztBQUMzQixnQ0FBZ0Msc0RBQVM7QUFDekM7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3REFBSztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90cmF2ZXJzZXIvYmFzZS5qcz8zZDI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdGF0ZSBmcm9tIFwiLi4vdG9rZW5pemVyL3N0YXRlXCI7XG5pbXBvcnQge2NoYXJDb2Rlc30gZnJvbSBcIi4uL3V0aWwvY2hhcmNvZGVzXCI7XG5cbmV4cG9ydCBsZXQgaXNKU1hFbmFibGVkO1xuZXhwb3J0IGxldCBpc1R5cGVTY3JpcHRFbmFibGVkO1xuZXhwb3J0IGxldCBpc0Zsb3dFbmFibGVkO1xuZXhwb3J0IGxldCBzdGF0ZTtcbmV4cG9ydCBsZXQgaW5wdXQ7XG5leHBvcnQgbGV0IG5leHRDb250ZXh0SWQ7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROZXh0Q29udGV4dElkKCkge1xuICByZXR1cm4gbmV4dENvbnRleHRJZCsrO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZXhwb3J0IGZ1bmN0aW9uIGF1Z21lbnRFcnJvcihlcnJvcikge1xuICBpZiAoXCJwb3NcIiBpbiBlcnJvcikge1xuICAgIGNvbnN0IGxvYyA9IGxvY2F0aW9uRm9ySW5kZXgoZXJyb3IucG9zKTtcbiAgICBlcnJvci5tZXNzYWdlICs9IGAgKCR7bG9jLmxpbmV9OiR7bG9jLmNvbHVtbn0pYDtcbiAgICBlcnJvci5sb2MgPSBsb2M7XG4gIH1cbiAgcmV0dXJuIGVycm9yO1xufVxuXG5leHBvcnQgY2xhc3MgTG9jIHtcbiAgXG4gIFxuICBjb25zdHJ1Y3RvcihsaW5lLCBjb2x1bW4pIHtcbiAgICB0aGlzLmxpbmUgPSBsaW5lO1xuICAgIHRoaXMuY29sdW1uID0gY29sdW1uO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2NhdGlvbkZvckluZGV4KHBvcykge1xuICBsZXQgbGluZSA9IDE7XG4gIGxldCBjb2x1bW4gPSAxO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvczsgaSsrKSB7XG4gICAgaWYgKGlucHV0LmNoYXJDb2RlQXQoaSkgPT09IGNoYXJDb2Rlcy5saW5lRmVlZCkge1xuICAgICAgbGluZSsrO1xuICAgICAgY29sdW1uID0gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29sdW1uKys7XG4gICAgfVxuICB9XG4gIHJldHVybiBuZXcgTG9jKGxpbmUsIGNvbHVtbik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0UGFyc2VyKFxuICBpbnB1dENvZGUsXG4gIGlzSlNYRW5hYmxlZEFyZyxcbiAgaXNUeXBlU2NyaXB0RW5hYmxlZEFyZyxcbiAgaXNGbG93RW5hYmxlZEFyZyxcbikge1xuICBpbnB1dCA9IGlucHV0Q29kZTtcbiAgc3RhdGUgPSBuZXcgU3RhdGUoKTtcbiAgbmV4dENvbnRleHRJZCA9IDE7XG4gIGlzSlNYRW5hYmxlZCA9IGlzSlNYRW5hYmxlZEFyZztcbiAgaXNUeXBlU2NyaXB0RW5hYmxlZCA9IGlzVHlwZVNjcmlwdEVuYWJsZWRBcmc7XG4gIGlzRmxvd0VuYWJsZWQgPSBpc0Zsb3dFbmFibGVkQXJnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/traverser/expression.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StopState: function() { return /* binding */ StopState; },\n/* harmony export */   atPossibleAsync: function() { return /* binding */ atPossibleAsync; },\n/* harmony export */   baseParseConditional: function() { return /* binding */ baseParseConditional; },\n/* harmony export */   baseParseMaybeAssign: function() { return /* binding */ baseParseMaybeAssign; },\n/* harmony export */   baseParseSubscript: function() { return /* binding */ baseParseSubscript; },\n/* harmony export */   baseParseSubscripts: function() { return /* binding */ baseParseSubscripts; },\n/* harmony export */   parseArrow: function() { return /* binding */ parseArrow; },\n/* harmony export */   parseArrowExpression: function() { return /* binding */ parseArrowExpression; },\n/* harmony export */   parseCallExpressionArguments: function() { return /* binding */ parseCallExpressionArguments; },\n/* harmony export */   parseExprAtom: function() { return /* binding */ parseExprAtom; },\n/* harmony export */   parseExprSubscripts: function() { return /* binding */ parseExprSubscripts; },\n/* harmony export */   parseExpression: function() { return /* binding */ parseExpression; },\n/* harmony export */   parseFunctionBody: function() { return /* binding */ parseFunctionBody; },\n/* harmony export */   parseFunctionBodyAndFinish: function() { return /* binding */ parseFunctionBodyAndFinish; },\n/* harmony export */   parseIdentifier: function() { return /* binding */ parseIdentifier; },\n/* harmony export */   parseLiteral: function() { return /* binding */ parseLiteral; },\n/* harmony export */   parseMaybeAssign: function() { return /* binding */ parseMaybeAssign; },\n/* harmony export */   parseMaybeUnary: function() { return /* binding */ parseMaybeUnary; },\n/* harmony export */   parseMethod: function() { return /* binding */ parseMethod; },\n/* harmony export */   parseObj: function() { return /* binding */ parseObj; },\n/* harmony export */   parseParenExpression: function() { return /* binding */ parseParenExpression; },\n/* harmony export */   parsePropertyName: function() { return /* binding */ parsePropertyName; },\n/* harmony export */   parseTemplate: function() { return /* binding */ parseTemplate; }\n/* harmony export */ });\n/* harmony import */ var _plugins_flow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../plugins/flow */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/flow.js\");\n/* harmony import */ var _plugins_jsx_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../plugins/jsx/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/jsx/index.js\");\n/* harmony import */ var _plugins_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../plugins/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/types.js\");\n/* harmony import */ var _plugins_typescript__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../plugins/typescript */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/typescript.js\");\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _tokenizer_state__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../tokenizer/state */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/state.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _util_identifier__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/identifier */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/identifier.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _lval__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lval */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/lval.js\");\n/* harmony import */ var _statement__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./statement */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/statement.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\");\n/* eslint max-len: 0 */\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass StopState {\n  \n  constructor(stop) {\n    this.stop = stop;\n  }\n}\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function (s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\nfunction parseExpression(noIn = false) {\n  parseMaybeAssign(noIn);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma)) {\n    while ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma)) {\n      parseMaybeAssign(noIn);\n    }\n  }\n}\n\n/**\n * noIn is used when parsing a for loop so that we don't interpret a following \"in\" as the binary\n * operatior.\n * isWithinParens is used to indicate that we're parsing something that might be a comma expression\n * or might be an arrow function or might be a Flow type assertion (which requires explicit parens).\n * In these cases, we should allow : and ?: after the initial \"left\" part.\n */\nfunction parseMaybeAssign(noIn = false, isWithinParens = false) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled) {\n    return (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsParseMaybeAssign)(noIn, isWithinParens);\n  } else if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    return (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowParseMaybeAssign)(noIn, isWithinParens);\n  } else {\n    return baseParseMaybeAssign(noIn, isWithinParens);\n  }\n}\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n// Returns true if the expression was an arrow function.\nfunction baseParseMaybeAssign(noIn, isWithinParens) {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._yield)) {\n    parseYield();\n    return false;\n  }\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.name) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._yield)) {\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.potentialArrowAt = _base__WEBPACK_IMPORTED_MODULE_10__.state.start;\n  }\n\n  const wasArrow = parseMaybeConditional(noIn);\n  if (isWithinParens) {\n    parseParenItem();\n  }\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.IS_ASSIGN) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n    parseMaybeAssign(noIn);\n    return false;\n  }\n  return wasArrow;\n}\n\n// Parse a ternary conditional (`?:`) operator.\n// Returns true if the expression was an arrow function.\nfunction parseMaybeConditional(noIn) {\n  const wasArrow = parseExprOps(noIn);\n  if (wasArrow) {\n    return true;\n  }\n  parseConditional(noIn);\n  return false;\n}\n\nfunction parseConditional(noIn) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled || _base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_types__WEBPACK_IMPORTED_MODULE_2__.typedParseConditional)(noIn);\n  } else {\n    baseParseConditional(noIn);\n  }\n}\n\nfunction baseParseConditional(noIn) {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.question)) {\n    parseMaybeAssign();\n    (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.colon);\n    parseMaybeAssign(noIn);\n  }\n}\n\n// Start the precedence parser.\n// Returns true if this was an arrow function\nfunction parseExprOps(noIn) {\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n  const wasArrow = parseMaybeUnary();\n  if (wasArrow) {\n    return true;\n  }\n  parseExprOp(startTokenIndex, -1, noIn);\n  return false;\n}\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\nfunction parseExprOp(startTokenIndex, minPrec, noIn) {\n  if (\n    _base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled &&\n    (_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._in & _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.PRECEDENCE_MASK) > minPrec &&\n    !(0,_util__WEBPACK_IMPORTED_MODULE_13__.hasPrecedingLineBreak)() &&\n    ((0,_util__WEBPACK_IMPORTED_MODULE_13__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._as) || (0,_util__WEBPACK_IMPORTED_MODULE_13__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._satisfies))\n  ) {\n    const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.pushTypeContext)(1);\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsParseType)();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.popTypeContext)(oldIsType);\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.rescan_gt)();\n    parseExprOp(startTokenIndex, minPrec, noIn);\n    return;\n  }\n\n  const prec = _base__WEBPACK_IMPORTED_MODULE_10__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.PRECEDENCE_MASK;\n  if (prec > 0 && (!noIn || !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._in))) {\n    if (prec > minPrec) {\n      const op = _base__WEBPACK_IMPORTED_MODULE_10__.state.type;\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      if (op === _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.nullishCoalescing) {\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].nullishStartIndex = startTokenIndex;\n      }\n\n      const rhsStartTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n      parseMaybeUnary();\n      // Extend the right operand of this operator if possible.\n      parseExprOp(rhsStartTokenIndex, op & _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.IS_RIGHT_ASSOCIATIVE ? prec - 1 : prec, noIn);\n      if (op === _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.nullishCoalescing) {\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[startTokenIndex].numNullishCoalesceStarts++;\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].numNullishCoalesceEnds++;\n      }\n      // Continue with any future operator holding this expression as the left operand.\n      parseExprOp(startTokenIndex, minPrec, noIn);\n    }\n  }\n}\n\n// Parse unary operators, both prefix and postfix.\n// Returns true if this was an arrow function.\nfunction parseMaybeUnary() {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled && !_base__WEBPACK_IMPORTED_MODULE_10__.isJSXEnabled && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.lessThan)) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsParseTypeAssertion)();\n    return false;\n  }\n  if (\n    (0,_util__WEBPACK_IMPORTED_MODULE_13__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._module) &&\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.lookaheadCharCode)() === _util_charcodes__WEBPACK_IMPORTED_MODULE_8__.charCodes.leftCurlyBrace &&\n    !(0,_util__WEBPACK_IMPORTED_MODULE_13__.hasFollowingLineBreak)()\n  ) {\n    parseModuleExpression();\n    return false;\n  }\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.IS_PREFIX) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n    parseMaybeUnary();\n    return false;\n  }\n\n  const wasArrow = parseExprSubscripts();\n  if (wasArrow) {\n    return true;\n  }\n  while (_base__WEBPACK_IMPORTED_MODULE_10__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.IS_POSTFIX && !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)()) {\n    // The tokenizer calls everything a preincrement, so make it a postincrement when\n    // we see it in that context.\n    if (_base__WEBPACK_IMPORTED_MODULE_10__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.preIncDec) {\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.postIncDec;\n    }\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n  }\n  return false;\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n// Returns true if this was an arrow function.\nfunction parseExprSubscripts() {\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n  const wasArrow = parseExprAtom();\n  if (wasArrow) {\n    return true;\n  }\n  parseSubscripts(startTokenIndex);\n  // If there was any optional chain operation, the start token would be marked\n  // as such, so also mark the end now.\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length > startTokenIndex && _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[startTokenIndex].isOptionalChainStart) {\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].isOptionalChainEnd = true;\n  }\n  return false;\n}\n\nfunction parseSubscripts(startTokenIndex, noCalls = false) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowParseSubscripts)(startTokenIndex, noCalls);\n  } else {\n    baseParseSubscripts(startTokenIndex, noCalls);\n  }\n}\n\nfunction baseParseSubscripts(startTokenIndex, noCalls = false) {\n  const stopState = new StopState(false);\n  do {\n    parseSubscript(startTokenIndex, noCalls, stopState);\n  } while (!stopState.stop && !_base__WEBPACK_IMPORTED_MODULE_10__.state.error);\n}\n\nfunction parseSubscript(startTokenIndex, noCalls, stopState) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsParseSubscript)(startTokenIndex, noCalls, stopState);\n  } else if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowParseSubscript)(startTokenIndex, noCalls, stopState);\n  } else {\n    baseParseSubscript(startTokenIndex, noCalls, stopState);\n  }\n}\n\n/** Set 'state.stop = true' to indicate that we should stop parsing subscripts. */\nfunction baseParseSubscript(\n  startTokenIndex,\n  noCalls,\n  stopState,\n) {\n  if (!noCalls && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.doubleColon)) {\n    parseNoCallExpr();\n    stopState.stop = true;\n    // Propagate startTokenIndex so that `a::b?.()` will keep `a` as the first token. We may want\n    // to revisit this in the future when fully supporting bind syntax.\n    parseSubscripts(startTokenIndex, noCalls);\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.questionDot)) {\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[startTokenIndex].isOptionalChainStart = true;\n    if (noCalls && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL) {\n      stopState.stop = true;\n      return;\n    }\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\n\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketL)) {\n      parseExpression();\n      (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketR);\n    } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL)) {\n      parseCallExpressionArguments();\n    } else {\n      parseMaybePrivateName();\n    }\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.dot)) {\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\n    parseMaybePrivateName();\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketL)) {\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\n    parseExpression();\n    (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketR);\n  } else if (!noCalls && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL)) {\n    if (atPossibleAsync()) {\n      // We see \"async\", but it's possible it's a usage of the name \"async\". Parse as if it's a\n      // function call, and if we see an arrow later, backtrack and re-parse as a parameter list.\n      const snapshot = _base__WEBPACK_IMPORTED_MODULE_10__.state.snapshot();\n      const asyncStartTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\n\n      const callContextId = (0,_base__WEBPACK_IMPORTED_MODULE_10__.getNextContextId)();\n\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = callContextId;\n      parseCallExpressionArguments();\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = callContextId;\n\n      if (shouldParseAsyncArrow()) {\n        // We hit an arrow, so backtrack and start again parsing function parameters.\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.restoreFromSnapshot(snapshot);\n        stopState.stop = true;\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth++;\n\n        (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseFunctionParams)();\n        parseAsyncArrowFromCallExpression(asyncStartTokenIndex);\n      }\n    } else {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].subscriptStartIndex = startTokenIndex;\n      const callContextId = (0,_base__WEBPACK_IMPORTED_MODULE_10__.getNextContextId)();\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = callContextId;\n      parseCallExpressionArguments();\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = callContextId;\n    }\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.backQuote)) {\n    // Tagged template expression.\n    parseTemplate();\n  } else {\n    stopState.stop = true;\n  }\n}\n\nfunction atPossibleAsync() {\n  // This was made less strict than the original version to avoid passing around nodes, but it\n  // should be safe to have rare false positives here.\n  return (\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._async &&\n    !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)()\n  );\n}\n\nfunction parseCallExpressionArguments() {\n  let first = true;\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR) && !_base__WEBPACK_IMPORTED_MODULE_10__.state.error) {\n    if (first) {\n      first = false;\n    } else {\n      (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma);\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR)) {\n        break;\n      }\n    }\n\n    parseExprListItem(false);\n  }\n}\n\nfunction shouldParseAsyncArrow() {\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.colon) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.arrow);\n}\n\nfunction parseAsyncArrowFromCallExpression(startTokenIndex) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsStartParseAsyncArrowFromCallExpression)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowStartParseAsyncArrowFromCallExpression)();\n  }\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.arrow);\n  parseArrowExpression(startTokenIndex);\n}\n\n// Parse a no-call expression (like argument of `new` or `::` operators).\n\nfunction parseNoCallExpr() {\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n  parseExprAtom();\n  parseSubscripts(startTokenIndex, true);\n}\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n// Returns true if the parsed expression was an arrow function.\nfunction parseExprAtom() {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.modulo)) {\n    // V8 intrinsic expression. Just parse the identifier, and the function invocation is parsed\n    // naturally.\n    parseIdentifier();\n    return false;\n  }\n\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.jsxText) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.jsxEmptyText)) {\n    parseLiteral();\n    return false;\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.lessThan) && _base__WEBPACK_IMPORTED_MODULE_10__.isJSXEnabled) {\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.jsxTagStart;\n    (0,_plugins_jsx_index__WEBPACK_IMPORTED_MODULE_1__.jsxParseElement)();\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n    return false;\n  }\n\n  const canBeArrow = _base__WEBPACK_IMPORTED_MODULE_10__.state.potentialArrowAt === _base__WEBPACK_IMPORTED_MODULE_10__.state.start;\n  switch (_base__WEBPACK_IMPORTED_MODULE_10__.state.type) {\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.slash:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.assign:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.retokenizeSlashAsRegex)();\n    // Fall through.\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._super:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._this:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.regexp:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.num:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bigint:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.decimal:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.string:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._null:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._true:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._false:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._import:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.dot)) {\n        // import.meta\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.name;\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n        parseIdentifier();\n      }\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.name: {\n      const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n      const functionStart = _base__WEBPACK_IMPORTED_MODULE_10__.state.start;\n      const contextualKeyword = _base__WEBPACK_IMPORTED_MODULE_10__.state.contextualKeyword;\n      parseIdentifier();\n      if (contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._await) {\n        parseAwait();\n        return false;\n      } else if (\n        contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._async &&\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._function) &&\n        !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)()\n      ) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n        (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseFunction)(functionStart, false);\n        return false;\n      } else if (\n        canBeArrow &&\n        contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._async &&\n        !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)() &&\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.name)\n      ) {\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth++;\n        (0,_lval__WEBPACK_IMPORTED_MODULE_11__.parseBindingIdentifier)(false);\n        (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.arrow);\n        // let foo = async bar => {};\n        parseArrowExpression(startTokenIndex);\n        return true;\n      } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._do) && !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)()) {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n        (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseBlock)();\n        return false;\n      }\n\n      if (canBeArrow && !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)() && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.arrow)) {\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth++;\n        (0,_lval__WEBPACK_IMPORTED_MODULE_11__.markPriorBindingIdentifier)(false);\n        (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.arrow);\n        parseArrowExpression(startTokenIndex);\n        return true;\n      }\n\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.IdentifierRole.Access;\n      return false;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._do: {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseBlock)();\n      return false;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL: {\n      const wasArrow = parseParenAndDistinguishExpression(canBeArrow);\n      return wasArrow;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketL:\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      parseExprList(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketR, true);\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceL:\n      parseObj(false, false);\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._function:\n      parseFunctionExpression();\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.at:\n      (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseDecorators)();\n    // Fall through.\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._class:\n      (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseClass)(false);\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._new:\n      parseNew();\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.backQuote:\n      parseTemplate();\n      return false;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.doubleColon: {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      parseNoCallExpr();\n      return false;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.hash: {\n      const code = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.lookaheadCharCode)();\n      if (_util_identifier__WEBPACK_IMPORTED_MODULE_9__.IS_IDENTIFIER_START[code] || code === _util_charcodes__WEBPACK_IMPORTED_MODULE_8__.charCodes.backslash) {\n        parseMaybePrivateName();\n      } else {\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n      }\n      // Smart pipeline topic reference.\n      return false;\n    }\n\n    default:\n      (0,_util__WEBPACK_IMPORTED_MODULE_13__.unexpected)();\n      return false;\n  }\n}\n\nfunction parseMaybePrivateName() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.hash);\n  parseIdentifier();\n}\n\nfunction parseFunctionExpression() {\n  const functionStart = _base__WEBPACK_IMPORTED_MODULE_10__.state.start;\n  parseIdentifier();\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.dot)) {\n    // function.sent\n    parseIdentifier();\n  }\n  (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseFunction)(functionStart, false);\n}\n\nfunction parseLiteral() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n}\n\nfunction parseParenExpression() {\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL);\n  parseExpression();\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR);\n}\n\n// Returns true if this was an arrow expression.\nfunction parseParenAndDistinguishExpression(canBeArrow) {\n  // Assume this is a normal parenthesized expression, but if we see an arrow, we'll bail and\n  // start over as a parameter list.\n  const snapshot = _base__WEBPACK_IMPORTED_MODULE_10__.state.snapshot();\n\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL);\n\n  let first = true;\n\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR) && !_base__WEBPACK_IMPORTED_MODULE_10__.state.error) {\n    if (first) {\n      first = false;\n    } else {\n      (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma);\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR)) {\n        break;\n      }\n    }\n\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.ellipsis)) {\n      (0,_lval__WEBPACK_IMPORTED_MODULE_11__.parseRest)(false /* isBlockScope */);\n      parseParenItem();\n      break;\n    } else {\n      parseMaybeAssign(false, true);\n    }\n  }\n\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR);\n\n  if (canBeArrow && shouldParseArrow()) {\n    const wasArrow = parseArrow();\n    if (wasArrow) {\n      // It was an arrow function this whole time, so start over and parse it as params so that we\n      // get proper token annotations.\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.restoreFromSnapshot(snapshot);\n      _base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth++;\n      // Don't specify a context ID because arrow functions don't need a context ID.\n      (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseFunctionParams)();\n      parseArrow();\n      parseArrowExpression(startTokenIndex);\n      if (_base__WEBPACK_IMPORTED_MODULE_10__.state.error) {\n        // Nevermind! This must have been something that looks very much like an\n        // arrow function but where its \"parameter list\" isn't actually a valid\n        // parameter list. Force non-arrow parsing.\n        // See https://github.com/alangpierce/sucrase/issues/666 for an example.\n        _base__WEBPACK_IMPORTED_MODULE_10__.state.restoreFromSnapshot(snapshot);\n        parseParenAndDistinguishExpression(false);\n        return false;\n      }\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction shouldParseArrow() {\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.colon) || !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)();\n}\n\n// Returns whether there was an arrow token.\nfunction parseArrow() {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled) {\n    return (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsParseArrow)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    return (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowParseArrow)();\n  } else {\n    return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.arrow);\n  }\n}\n\nfunction parseParenItem() {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled || _base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_types__WEBPACK_IMPORTED_MODULE_2__.typedParseParenItem)();\n  }\n}\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\nfunction parseNew() {\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType._new);\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.dot)) {\n    // new.target\n    parseIdentifier();\n    return;\n  }\n  parseNewCallee();\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowStartParseNewArguments)();\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL)) {\n    parseExprList(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenR);\n  }\n}\n\nfunction parseNewCallee() {\n  parseNoCallExpr();\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.questionDot);\n}\n\nfunction parseTemplate() {\n  // Finish `, read quasi\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.nextTemplateToken)();\n  // Finish quasi, read ${\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.nextTemplateToken)();\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.backQuote) && !_base__WEBPACK_IMPORTED_MODULE_10__.state.error) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.dollarBraceL);\n    parseExpression();\n    // Finish }, read quasi\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.nextTemplateToken)();\n    // Finish quasi, read either ${ or `\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.nextTemplateToken)();\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n}\n\n// Parse an object literal or binding pattern.\nfunction parseObj(isPattern, isBlockScope) {\n  // Attach a context ID to the object open and close brace and each object key.\n  const contextId = (0,_base__WEBPACK_IMPORTED_MODULE_10__.getNextContextId)();\n  let first = true;\n\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = contextId;\n\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceR) && !_base__WEBPACK_IMPORTED_MODULE_10__.state.error) {\n    if (first) {\n      first = false;\n    } else {\n      (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma);\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceR)) {\n        break;\n      }\n    }\n\n    let isGenerator = false;\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.ellipsis)) {\n      const previousIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n      (0,_lval__WEBPACK_IMPORTED_MODULE_11__.parseSpread)();\n      if (isPattern) {\n        // Mark role when the only thing being spread over is an identifier.\n        if (_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length === previousIndex + 2) {\n          (0,_lval__WEBPACK_IMPORTED_MODULE_11__.markPriorBindingIdentifier)(isBlockScope);\n        }\n        if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceR)) {\n          break;\n        }\n      }\n      continue;\n    }\n\n    if (!isPattern) {\n      isGenerator = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.star);\n    }\n\n    if (!isPattern && (0,_util__WEBPACK_IMPORTED_MODULE_13__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._async)) {\n      if (isGenerator) (0,_util__WEBPACK_IMPORTED_MODULE_13__.unexpected)();\n\n      parseIdentifier();\n      if (\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.colon) ||\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL) ||\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceR) ||\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.eq) ||\n        (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma)\n      ) {\n        // This is a key called \"async\" rather than an async function.\n      } else {\n        if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.star)) {\n          (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n          isGenerator = true;\n        }\n        parsePropertyName(contextId);\n      }\n    } else {\n      parsePropertyName(contextId);\n    }\n\n    parseObjPropValue(isPattern, isBlockScope, contextId);\n  }\n\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = contextId;\n}\n\nfunction isGetterOrSetterMethod(isPattern) {\n  // We go off of the next and don't bother checking if the node key is actually \"get\" or \"set\".\n  // This lets us avoid generating a node, and should only make the validation worse.\n  return (\n    !isPattern &&\n    ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.string) || // get \"string\"() {}\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.num) || // get 1() {}\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketL) || // get [\"string\"]() {}\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.name) || // get foo() {}\n      !!(_base__WEBPACK_IMPORTED_MODULE_10__.state.type & _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.IS_KEYWORD)) // get debugger() {}\n  );\n}\n\n// Returns true if this was a method.\nfunction parseObjectMethod(isPattern, objectContextId) {\n  // We don't need to worry about modifiers because object methods can't have optional bodies, so\n  // the start will never be used.\n  const functionStart = _base__WEBPACK_IMPORTED_MODULE_10__.state.start;\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.parenL)) {\n    if (isPattern) (0,_util__WEBPACK_IMPORTED_MODULE_13__.unexpected)();\n    parseMethod(functionStart, /* isConstructor */ false);\n    return true;\n  }\n\n  if (isGetterOrSetterMethod(isPattern)) {\n    parsePropertyName(objectContextId);\n    parseMethod(functionStart, /* isConstructor */ false);\n    return true;\n  }\n  return false;\n}\n\nfunction parseObjectProperty(isPattern, isBlockScope) {\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.colon)) {\n    if (isPattern) {\n      (0,_lval__WEBPACK_IMPORTED_MODULE_11__.parseMaybeDefault)(isBlockScope);\n    } else {\n      parseMaybeAssign(false);\n    }\n    return;\n  }\n\n  // Since there's no colon, we assume this is an object shorthand.\n\n  // If we're in a destructuring, we've now discovered that the key was actually an assignee, so\n  // we need to tag it as a declaration with the appropriate scope. Otherwise, we might need to\n  // transform it on access, so mark it as a normal object shorthand.\n  let identifierRole;\n  if (isPattern) {\n    if (_base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth === 0) {\n      identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.IdentifierRole.ObjectShorthandTopLevelDeclaration;\n    } else if (isBlockScope) {\n      identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.IdentifierRole.ObjectShorthandBlockScopedDeclaration;\n    } else {\n      identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.IdentifierRole.ObjectShorthandFunctionScopedDeclaration;\n    }\n  } else {\n    identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.IdentifierRole.ObjectShorthand;\n  }\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].identifierRole = identifierRole;\n\n  // Regardless of whether we know this to be a pattern or if we're in an ambiguous context, allow\n  // parsing as if there's a default value.\n  (0,_lval__WEBPACK_IMPORTED_MODULE_11__.parseMaybeDefault)(isBlockScope, true);\n}\n\nfunction parseObjPropValue(\n  isPattern,\n  isBlockScope,\n  objectContextId,\n) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsStartParseObjPropValue)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowStartParseObjPropValue)();\n  }\n  const wasMethod = parseObjectMethod(isPattern, objectContextId);\n  if (!wasMethod) {\n    parseObjectProperty(isPattern, isBlockScope);\n  }\n}\n\nfunction parsePropertyName(objectContextId) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowParseVariance)();\n  }\n  if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketL)) {\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = objectContextId;\n    parseMaybeAssign();\n    (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bracketR);\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = objectContextId;\n  } else {\n    if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.num) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.string) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.bigint) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.decimal)) {\n      parseExprAtom();\n    } else {\n      parseMaybePrivateName();\n    }\n\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.IdentifierRole.ObjectKey;\n    _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].contextId = objectContextId;\n  }\n}\n\n// Parse object or class method.\nfunction parseMethod(functionStart, isConstructor) {\n  const funcContextId = (0,_base__WEBPACK_IMPORTED_MODULE_10__.getNextContextId)();\n\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth++;\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n  const allowModifiers = isConstructor; // For TypeScript parameter properties\n  (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseFunctionParams)(allowModifiers, funcContextId);\n  parseFunctionBodyAndFinish(functionStart, funcContextId);\n  const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_6__.Scope(startTokenIndex, endTokenIndex, true));\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth--;\n}\n\n// Parse arrow function expression.\n// If the parameters are provided, they will be converted to an\n// assignable list.\nfunction parseArrowExpression(startTokenIndex) {\n  parseFunctionBody(true);\n  const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length;\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_6__.Scope(startTokenIndex, endTokenIndex, true));\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.scopeDepth--;\n}\n\nfunction parseFunctionBodyAndFinish(functionStart, funcContextId = 0) {\n  if (_base__WEBPACK_IMPORTED_MODULE_10__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_3__.tsParseFunctionBodyAndFinish)(functionStart, funcContextId);\n  } else if (_base__WEBPACK_IMPORTED_MODULE_10__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowParseFunctionBodyAndFinish)(funcContextId);\n  } else {\n    parseFunctionBody(false, funcContextId);\n  }\n}\n\nfunction parseFunctionBody(allowExpression, funcContextId = 0) {\n  const isExpression = allowExpression && !(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceL);\n\n  if (isExpression) {\n    parseMaybeAssign();\n  } else {\n    (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseBlock)(true /* isFunctionScope */, funcContextId);\n  }\n}\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\nfunction parseExprList(close, allowEmpty = false) {\n  let first = true;\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(close) && !_base__WEBPACK_IMPORTED_MODULE_10__.state.error) {\n    if (first) {\n      first = false;\n    } else {\n      (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma);\n      if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(close)) break;\n    }\n    parseExprListItem(allowEmpty);\n  }\n}\n\nfunction parseExprListItem(allowEmpty) {\n  if (allowEmpty && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.comma)) {\n    // Empty item; nothing more to parse for this item.\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.ellipsis)) {\n    (0,_lval__WEBPACK_IMPORTED_MODULE_11__.parseSpread)();\n    parseParenItem();\n  } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.question)) {\n    // Partial function application proposal.\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n  } else {\n    parseMaybeAssign(false, true);\n  }\n}\n\n// Parse the next token as an identifier.\nfunction parseIdentifier() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n  _base__WEBPACK_IMPORTED_MODULE_10__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_10__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.name;\n}\n\n// Parses await expression inside async function.\nfunction parseAwait() {\n  parseMaybeUnary();\n}\n\n// Parses yield expression inside generator.\nfunction parseYield() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.next)();\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.semi) && !(0,_util__WEBPACK_IMPORTED_MODULE_13__.canInsertSemicolon)()) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_4__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.star);\n    parseMaybeAssign();\n  }\n}\n\n// https://github.com/tc39/proposal-js-module-blocks\nfunction parseModuleExpression() {\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_5__.ContextualKeyword._module);\n  (0,_util__WEBPACK_IMPORTED_MODULE_13__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceL);\n  // For now, just call parseBlockBody to parse the block. In the future when we\n  // implement full support, we'll want to emit scopes and possibly other\n  // information.\n  (0,_statement__WEBPACK_IMPORTED_MODULE_12__.parseBlockBody)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_7__.TokenType.braceR);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/traverser/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseFile: function() { return /* binding */ parseFile; }\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _statement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./statement */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/statement.js\");\n\n\n\n\n\n\nfunction parseFile() {\n  // If enabled, skip leading hashbang line.\n  if (\n    _base__WEBPACK_IMPORTED_MODULE_2__.state.pos === 0 &&\n    _base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(0) === _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.numberSign &&\n    _base__WEBPACK_IMPORTED_MODULE_2__.input.charCodeAt(1) === _util_charcodes__WEBPACK_IMPORTED_MODULE_1__.charCodes.exclamationMark\n  ) {\n    (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.skipLineComment)(2);\n  }\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.nextToken)();\n  return (0,_statement__WEBPACK_IMPORTED_MODULE_3__.parseTopLevel)();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90cmF2ZXJzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQzhEO0FBQ2xCO0FBQ1I7QUFDTTs7QUFFbkM7QUFDUDtBQUNBO0FBQ0EsSUFBSSx3Q0FBSztBQUNULElBQUksd0NBQUssbUJBQW1CLHNEQUFTO0FBQ3JDLElBQUksd0NBQUssbUJBQW1CLHNEQUFTO0FBQ3JDO0FBQ0EsSUFBSSxpRUFBZTtBQUNuQjtBQUNBLEVBQUUsMkRBQVM7QUFDWCxTQUFTLHlEQUFhO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90cmF2ZXJzZXIvaW5kZXguanM/MWQwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7bmV4dFRva2VuLCBza2lwTGluZUNvbW1lbnR9IGZyb20gXCIuLi90b2tlbml6ZXIvaW5kZXhcIjtcbmltcG9ydCB7Y2hhckNvZGVzfSBmcm9tIFwiLi4vdXRpbC9jaGFyY29kZXNcIjtcbmltcG9ydCB7aW5wdXQsIHN0YXRlfSBmcm9tIFwiLi9iYXNlXCI7XG5pbXBvcnQge3BhcnNlVG9wTGV2ZWx9IGZyb20gXCIuL3N0YXRlbWVudFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VGaWxlKCkge1xuICAvLyBJZiBlbmFibGVkLCBza2lwIGxlYWRpbmcgaGFzaGJhbmcgbGluZS5cbiAgaWYgKFxuICAgIHN0YXRlLnBvcyA9PT0gMCAmJlxuICAgIGlucHV0LmNoYXJDb2RlQXQoMCkgPT09IGNoYXJDb2Rlcy5udW1iZXJTaWduICYmXG4gICAgaW5wdXQuY2hhckNvZGVBdCgxKSA9PT0gY2hhckNvZGVzLmV4Y2xhbWF0aW9uTWFya1xuICApIHtcbiAgICBza2lwTGluZUNvbW1lbnQoMik7XG4gIH1cbiAgbmV4dFRva2VuKCk7XG4gIHJldHVybiBwYXJzZVRvcExldmVsKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/lval.js":
/*!****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/traverser/lval.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   markPriorBindingIdentifier: function() { return /* binding */ markPriorBindingIdentifier; },\n/* harmony export */   parseBindingAtom: function() { return /* binding */ parseBindingAtom; },\n/* harmony export */   parseBindingIdentifier: function() { return /* binding */ parseBindingIdentifier; },\n/* harmony export */   parseBindingList: function() { return /* binding */ parseBindingList; },\n/* harmony export */   parseImportedIdentifier: function() { return /* binding */ parseImportedIdentifier; },\n/* harmony export */   parseMaybeDefault: function() { return /* binding */ parseMaybeDefault; },\n/* harmony export */   parseRest: function() { return /* binding */ parseRest; },\n/* harmony export */   parseSpread: function() { return /* binding */ parseSpread; }\n/* harmony export */ });\n/* harmony import */ var _plugins_flow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../plugins/flow */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/flow.js\");\n/* harmony import */ var _plugins_typescript__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../plugins/typescript */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/typescript.js\");\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./expression */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\");\n\n\n\n\n\n\n\n\n\nfunction parseSpread() {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.next)();\n  (0,_expression__WEBPACK_IMPORTED_MODULE_6__.parseMaybeAssign)(false);\n}\n\nfunction parseRest(isBlockScope) {\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.next)();\n  parseBindingAtom(isBlockScope);\n}\n\nfunction parseBindingIdentifier(isBlockScope) {\n  (0,_expression__WEBPACK_IMPORTED_MODULE_6__.parseIdentifier)();\n  markPriorBindingIdentifier(isBlockScope);\n}\n\nfunction parseImportedIdentifier() {\n  (0,_expression__WEBPACK_IMPORTED_MODULE_6__.parseIdentifier)();\n  _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_5__.state.tokens.length - 1].identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.IdentifierRole.ImportDeclaration;\n}\n\nfunction markPriorBindingIdentifier(isBlockScope) {\n  let identifierRole;\n  if (_base__WEBPACK_IMPORTED_MODULE_5__.state.scopeDepth === 0) {\n    identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.IdentifierRole.TopLevelDeclaration;\n  } else if (isBlockScope) {\n    identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.IdentifierRole.BlockScopedDeclaration;\n  } else {\n    identifierRole = _tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.IdentifierRole.FunctionScopedDeclaration;\n  }\n  _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_5__.state.tokens.length - 1].identifierRole = identifierRole;\n}\n\n// Parses lvalue (assignable) atom.\nfunction parseBindingAtom(isBlockScope) {\n  switch (_base__WEBPACK_IMPORTED_MODULE_5__.state.type) {\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType._this: {\n      // In TypeScript, \"this\" may be the name of a parameter, so allow it.\n      const oldIsType = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.pushTypeContext)(0);\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.next)();\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.popTypeContext)(oldIsType);\n      return;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType._yield:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.name: {\n      _base__WEBPACK_IMPORTED_MODULE_5__.state.type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.name;\n      parseBindingIdentifier(isBlockScope);\n      return;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.bracketL: {\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.next)();\n      parseBindingList(_tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.bracketR, isBlockScope, true /* allowEmpty */);\n      return;\n    }\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.braceL:\n      (0,_expression__WEBPACK_IMPORTED_MODULE_6__.parseObj)(true, isBlockScope);\n      return;\n\n    default:\n      (0,_util__WEBPACK_IMPORTED_MODULE_7__.unexpected)();\n  }\n}\n\nfunction parseBindingList(\n  close,\n  isBlockScope,\n  allowEmpty = false,\n  allowModifiers = false,\n  contextId = 0,\n) {\n  let first = true;\n\n  let hasRemovedComma = false;\n  const firstItemTokenIndex = _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens.length;\n\n  while (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.eat)(close) && !_base__WEBPACK_IMPORTED_MODULE_5__.state.error) {\n    if (first) {\n      first = false;\n    } else {\n      (0,_util__WEBPACK_IMPORTED_MODULE_7__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.comma);\n      _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_5__.state.tokens.length - 1].contextId = contextId;\n      // After a \"this\" type in TypeScript, we need to set the following comma (if any) to also be\n      // a type token so that it will be removed.\n      if (!hasRemovedComma && _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens[firstItemTokenIndex].isType) {\n        _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_5__.state.tokens.length - 1].isType = true;\n        hasRemovedComma = true;\n      }\n    }\n    if (allowEmpty && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.comma)) {\n      // Empty item; nothing further to parse for this item.\n    } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.eat)(close)) {\n      break;\n    } else if ((0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.ellipsis)) {\n      parseRest(isBlockScope);\n      parseAssignableListItemTypes();\n      // Support rest element trailing commas allowed by TypeScript <2.9.\n      (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.comma);\n      (0,_util__WEBPACK_IMPORTED_MODULE_7__.expect)(close);\n      break;\n    } else {\n      parseAssignableListItem(allowModifiers, isBlockScope);\n    }\n  }\n}\n\nfunction parseAssignableListItem(allowModifiers, isBlockScope) {\n  if (allowModifiers) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_1__.tsParseModifiers)([\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_3__.ContextualKeyword._public,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_3__.ContextualKeyword._protected,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_3__.ContextualKeyword._private,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_3__.ContextualKeyword._readonly,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_3__.ContextualKeyword._override,\n    ]);\n  }\n\n  parseMaybeDefault(isBlockScope);\n  parseAssignableListItemTypes();\n  parseMaybeDefault(isBlockScope, true /* leftAlreadyParsed */);\n}\n\nfunction parseAssignableListItemTypes() {\n  if (_base__WEBPACK_IMPORTED_MODULE_5__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_0__.flowParseAssignableListItemTypes)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_5__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_1__.tsParseAssignableListItemTypes)();\n  }\n}\n\n// Parses assignment pattern around given atom if possible.\nfunction parseMaybeDefault(isBlockScope, leftAlreadyParsed = false) {\n  if (!leftAlreadyParsed) {\n    parseBindingAtom(isBlockScope);\n  }\n  if (!(0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_2__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_4__.TokenType.eq)) {\n    return;\n  }\n  const eqIndex = _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens.length - 1;\n  (0,_expression__WEBPACK_IMPORTED_MODULE_6__.parseMaybeAssign)();\n  _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens[eqIndex].rhsEndIndex = _base__WEBPACK_IMPORTED_MODULE_5__.state.tokens.length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/lval.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/statement.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/traverser/statement.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   baseParseExportStar: function() { return /* binding */ baseParseExportStar; },\n/* harmony export */   baseParseMaybeDecoratorArguments: function() { return /* binding */ baseParseMaybeDecoratorArguments; },\n/* harmony export */   parseBlock: function() { return /* binding */ parseBlock; },\n/* harmony export */   parseBlockBody: function() { return /* binding */ parseBlockBody; },\n/* harmony export */   parseClass: function() { return /* binding */ parseClass; },\n/* harmony export */   parseClassProperty: function() { return /* binding */ parseClassProperty; },\n/* harmony export */   parseClassPropertyName: function() { return /* binding */ parseClassPropertyName; },\n/* harmony export */   parseDecorators: function() { return /* binding */ parseDecorators; },\n/* harmony export */   parseExport: function() { return /* binding */ parseExport; },\n/* harmony export */   parseExportFrom: function() { return /* binding */ parseExportFrom; },\n/* harmony export */   parseExportSpecifiers: function() { return /* binding */ parseExportSpecifiers; },\n/* harmony export */   parseFunction: function() { return /* binding */ parseFunction; },\n/* harmony export */   parseFunctionParams: function() { return /* binding */ parseFunctionParams; },\n/* harmony export */   parseImport: function() { return /* binding */ parseImport; },\n/* harmony export */   parsePostMemberNameModifiers: function() { return /* binding */ parsePostMemberNameModifiers; },\n/* harmony export */   parseStatement: function() { return /* binding */ parseStatement; },\n/* harmony export */   parseTopLevel: function() { return /* binding */ parseTopLevel; },\n/* harmony export */   parseVarStatement: function() { return /* binding */ parseVarStatement; }\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/index.js\");\n/* harmony import */ var _plugins_flow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../plugins/flow */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/flow.js\");\n/* harmony import */ var _plugins_typescript__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../plugins/typescript */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/typescript.js\");\n/* harmony import */ var _tokenizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tokenizer/state */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/state.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./expression */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/expression.js\");\n/* harmony import */ var _lval__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lval */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/lval.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\");\n/* eslint max-len: 0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction parseTopLevel() {\n  parseBlockBody(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.eof);\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(0, _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length, true));\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth !== 0) {\n    throw new Error(`Invalid scope depth at end of file: ${_base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth}`);\n  }\n  return new _index__WEBPACK_IMPORTED_MODULE_0__.File(_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens, _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes);\n}\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\nfunction parseStatement(declaration) {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    if ((0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowTryParseStatement)()) {\n      return;\n    }\n  }\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.at)) {\n    parseDecorators();\n  }\n  parseStatementContent(declaration);\n}\n\nfunction parseStatementContent(declaration) {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    if ((0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseStatementContent)()) {\n      return;\n    }\n  }\n\n  const starttype = _base__WEBPACK_IMPORTED_MODULE_8__.state.type;\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._break:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._continue:\n      parseBreakContinueStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._debugger:\n      parseDebuggerStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._do:\n      parseDoStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._for:\n      parseForStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._function:\n      if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.dot) break;\n      if (!declaration) (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)();\n      parseFunctionStatement();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._class:\n      if (!declaration) (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)();\n      parseClass(true);\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._if:\n      parseIfStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._return:\n      parseReturnStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._switch:\n      parseSwitchStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._throw:\n      parseThrowStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._try:\n      parseTryStatement();\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._let:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._const:\n      if (!declaration) (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)(); // NOTE: falls through to _var\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._var:\n      parseVarStatement(starttype !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._var);\n      return;\n\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._while:\n      parseWhileStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL:\n      parseBlock();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi:\n      parseEmptyStatement();\n      return;\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._export:\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._import: {\n      const nextType = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadType)();\n      if (nextType === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL || nextType === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.dot) {\n        break;\n      }\n      (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n      if (starttype === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._import) {\n        parseImport();\n      } else {\n        parseExport();\n      }\n      return;\n    }\n    case _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name:\n      if (_base__WEBPACK_IMPORTED_MODULE_8__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._async) {\n        const functionStart = _base__WEBPACK_IMPORTED_MODULE_8__.state.start;\n        // peek ahead and see if next token is a function\n        const snapshot = _base__WEBPACK_IMPORTED_MODULE_8__.state.snapshot();\n        (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n        if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._function) && !(0,_util__WEBPACK_IMPORTED_MODULE_11__.canInsertSemicolon)()) {\n          (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._function);\n          parseFunction(functionStart, true);\n          return;\n        } else {\n          _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n        }\n      } else if (\n        _base__WEBPACK_IMPORTED_MODULE_8__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._using &&\n        !(0,_util__WEBPACK_IMPORTED_MODULE_11__.hasFollowingLineBreak)() &&\n        // Statements like `using[0]` and `using in foo` aren't actual using\n        // declarations.\n        (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name\n      ) {\n        parseVarStatement(true);\n        return;\n      } else if (startsAwaitUsing()) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._await);\n        parseVarStatement(true);\n        return;\n      }\n    default:\n      // Do nothing.\n      break;\n  }\n\n  // If the statement does not start with a statement keyword or a\n  // brace, it's an ExpressionStatement or LabeledStatement. We\n  // simply start parsing an expression, and afterwards, if the\n  // next token is a colon and the expression was a simple\n  // Identifier node, we switch to interpreting it as a label.\n  const initialTokensLength = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n  let simpleName = null;\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length === initialTokensLength + 1) {\n    const token = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1];\n    if (token.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name) {\n      simpleName = token.contextualKeyword;\n    }\n  }\n  if (simpleName == null) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n    return;\n  }\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.colon)) {\n    parseLabeledStatement();\n  } else {\n    // This was an identifier, so we might want to handle flow/typescript-specific cases.\n    parseIdentifierStatement(simpleName);\n  }\n}\n\n/**\n * Determine if we're positioned at an `await using` declaration.\n *\n * Note that this can happen either in place of a regular variable declaration\n * or in a loop body, and in both places, there are similar-looking cases where\n * we need to return false.\n *\n * Examples returning true:\n * await using foo = bar();\n * for (await using a of b) {}\n *\n * Examples returning false:\n * await using\n * await using + 1\n * await using instanceof T\n * for (await using;;) {}\n *\n * For now, we early return if we don't see `await`, then do a simple\n * backtracking-based lookahead for the `using` and identifier tokens. In the\n * future, this could be optimized with a character-based approach.\n */\nfunction startsAwaitUsing() {\n  if (!(0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._await)) {\n    return false;\n  }\n  const snapshot = _base__WEBPACK_IMPORTED_MODULE_8__.state.snapshot();\n  // await\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  if (!(0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._using) || (0,_util__WEBPACK_IMPORTED_MODULE_11__.hasPrecedingLineBreak)()) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n    return false;\n  }\n  // using\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  if (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name) || (0,_util__WEBPACK_IMPORTED_MODULE_11__.hasPrecedingLineBreak)()) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n    return false;\n  }\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n  return true;\n}\n\nfunction parseDecorators() {\n  while ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.at)) {\n    parseDecorator();\n  }\n}\n\nfunction parseDecorator() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenR);\n  } else {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n    while ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.dot)) {\n      (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n    }\n    parseMaybeDecoratorArguments();\n  }\n}\n\nfunction parseMaybeDecoratorArguments() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseMaybeDecoratorArguments)();\n  } else {\n    baseParseMaybeDecoratorArguments();\n  }\n}\n\nfunction baseParseMaybeDecoratorArguments() {\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseCallExpressionArguments)();\n  }\n}\n\nfunction parseBreakContinueStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  if (!(0,_util__WEBPACK_IMPORTED_MODULE_11__.isLineTerminator)()) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n  }\n}\n\nfunction parseDebuggerStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n}\n\nfunction parseDoStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  parseStatement(false);\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._while);\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseParenExpression)();\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi);\n}\n\nfunction parseForStatement() {\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth++;\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  parseAmbiguousForStatement();\n  const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(startTokenIndex, endTokenIndex, false));\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth--;\n}\n\n/**\n * Determine if this token is a `using` declaration (explicit resource\n * management) as part of a loop.\n * https://github.com/tc39/proposal-explicit-resource-management\n */\nfunction isUsingInLoop() {\n  if (!(0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._using)) {\n    return false;\n  }\n  // This must be `for (using of`, where `using` is the name of the loop\n  // variable.\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isLookaheadContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._of)) {\n    return false;\n  }\n  return true;\n}\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\nfunction parseAmbiguousForStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n\n  let forAwait = false;\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._await)) {\n    forAwait = true;\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  }\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL);\n\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi)) {\n    if (forAwait) {\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)();\n    }\n    parseFor();\n    return;\n  }\n\n  const isAwaitUsing = startsAwaitUsing();\n  if (isAwaitUsing || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._var) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._let) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._const) || isUsingInLoop()) {\n    if (isAwaitUsing) {\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._await);\n    }\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n    parseVar(true, _base__WEBPACK_IMPORTED_MODULE_8__.state.type !== _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._var);\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._in) || (0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._of)) {\n      parseForIn(forAwait);\n      return;\n    }\n    parseFor();\n    return;\n  }\n\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)(true);\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._in) || (0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._of)) {\n    parseForIn(forAwait);\n    return;\n  }\n  if (forAwait) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)();\n  }\n  parseFor();\n}\n\nfunction parseFunctionStatement() {\n  const functionStart = _base__WEBPACK_IMPORTED_MODULE_8__.state.start;\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  parseFunction(functionStart, true);\n}\n\nfunction parseIfStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseParenExpression)();\n  parseStatement(false);\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._else)) {\n    parseStatement(false);\n  }\n}\n\nfunction parseReturnStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (!(0,_util__WEBPACK_IMPORTED_MODULE_11__.isLineTerminator)()) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n  }\n}\n\nfunction parseSwitchStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseParenExpression)();\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth++;\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL);\n\n  // Don't bother validation; just go through any sequence of cases, defaults, and statements.\n  while (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR) && !_base__WEBPACK_IMPORTED_MODULE_8__.state.error) {\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._case) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._default)) {\n      const isCase = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._case);\n      (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n      if (isCase) {\n        (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n      }\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.colon);\n    } else {\n      parseStatement(true);\n    }\n  }\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)(); // Closing brace\n  const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(startTokenIndex, endTokenIndex, false));\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth--;\n}\n\nfunction parseThrowStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n}\n\nfunction parseCatchClauseParam() {\n  (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseBindingAtom)(true /* isBlockScope */);\n\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseTypeAnnotation)();\n  }\n}\n\nfunction parseTryStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n\n  parseBlock();\n\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._catch)) {\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n    let catchBindingStartTokenIndex = null;\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL)) {\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth++;\n      catchBindingStartTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL);\n      parseCatchClauseParam();\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenR);\n    }\n    parseBlock();\n    if (catchBindingStartTokenIndex != null) {\n      // We need a special scope for the catch binding which includes the binding itself and the\n      // catch block.\n      const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(catchBindingStartTokenIndex, endTokenIndex, false));\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth--;\n    }\n  }\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._finally)) {\n    parseBlock();\n  }\n}\n\nfunction parseVarStatement(isBlockScope) {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  parseVar(false, isBlockScope);\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n}\n\nfunction parseWhileStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseParenExpression)();\n  parseStatement(false);\n}\n\nfunction parseEmptyStatement() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n}\n\nfunction parseLabeledStatement() {\n  parseStatement(true);\n}\n\n/**\n * Parse a statement starting with an identifier of the given name. Subclasses match on the name\n * to handle statements like \"declare\".\n */\nfunction parseIdentifierStatement(contextualKeyword) {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseIdentifierStatement)(contextualKeyword);\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowParseIdentifierStatement)(contextualKeyword);\n  } else {\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n  }\n}\n\n// Parse a semicolon-enclosed block of statements.\nfunction parseBlock(isFunctionScope = false, contextId = 0) {\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth++;\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL);\n  if (contextId) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].contextId = contextId;\n  }\n  parseBlockBody(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR);\n  if (contextId) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].contextId = contextId;\n  }\n  const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(startTokenIndex, endTokenIndex, isFunctionScope));\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth--;\n}\n\nfunction parseBlockBody(end) {\n  while (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(end) && !_base__WEBPACK_IMPORTED_MODULE_8__.state.error) {\n    parseStatement(true);\n  }\n}\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\nfunction parseFor() {\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi);\n  if (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n  }\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi);\n  if (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenR)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n  }\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenR);\n  parseStatement(false);\n}\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\nfunction parseForIn(forAwait) {\n  if (forAwait) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._of);\n  } else {\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  }\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExpression)();\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenR);\n  parseStatement(false);\n}\n\n// Parse a list of variable declarations.\n\nfunction parseVar(isFor, isBlockScope) {\n  while (true) {\n    parseVarHead(isBlockScope);\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.eq)) {\n      const eqIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1;\n      (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseMaybeAssign)(isFor);\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[eqIndex].rhsEndIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n    }\n    if (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma)) {\n      break;\n    }\n  }\n}\n\nfunction parseVarHead(isBlockScope) {\n  (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseBindingAtom)(isBlockScope);\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsAfterParseVarHead)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowAfterParseVarHead)();\n  }\n}\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\nfunction parseFunction(\n  functionStart,\n  isStatement,\n  optionalId = false,\n) {\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star)) {\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  }\n\n  if (isStatement && !optionalId && !(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name) && !(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._yield)) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)();\n  }\n\n  let nameScopeStartTokenIndex = null;\n\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name)) {\n    // Expression-style functions should limit their name's scope to the function body, so we make\n    // a new function scope to enforce that.\n    if (!isStatement) {\n      nameScopeStartTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth++;\n    }\n    (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseBindingIdentifier)(false);\n  }\n\n  const startTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth++;\n  parseFunctionParams();\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseFunctionBodyAndFinish)(functionStart);\n  const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  // In addition to the block scope of the function body, we need a separate function-style scope\n  // that includes the params.\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(startTokenIndex, endTokenIndex, true));\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth--;\n  if (nameScopeStartTokenIndex !== null) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(nameScopeStartTokenIndex, endTokenIndex, true));\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth--;\n  }\n}\n\nfunction parseFunctionParams(\n  allowModifiers = false,\n  funcContextId = 0,\n) {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsStartParseFunctionParams)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowStartParseFunctionParams)();\n  }\n\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL);\n  if (funcContextId) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].contextId = funcContextId;\n  }\n  (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseBindingList)(\n    _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenR,\n    false /* isBlockScope */,\n    false /* allowEmpty */,\n    allowModifiers,\n    funcContextId,\n  );\n  if (funcContextId) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].contextId = funcContextId;\n  }\n}\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\nfunction parseClass(isStatement, optionalId = false) {\n  // Put a context ID on the class keyword, the open-brace, and the close-brace, so that later\n  // code can easily navigate to meaningful points on the class.\n  const contextId = (0,_base__WEBPACK_IMPORTED_MODULE_8__.getNextContextId)();\n\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].contextId = contextId;\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].isExpression = !isStatement;\n  // Like with functions, we declare a special \"name scope\" from the start of the name to the end\n  // of the class, but only with expression-style classes, to represent the fact that the name is\n  // available to the body of the class but not an outer declaration.\n  let nameScopeStartTokenIndex = null;\n  if (!isStatement) {\n    nameScopeStartTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth++;\n  }\n  parseClassId(isStatement, optionalId);\n  parseClassSuper();\n  const openBraceIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  parseClassBody(contextId);\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.state.error) {\n    return;\n  }\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[openBraceIndex].contextId = contextId;\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].contextId = contextId;\n  if (nameScopeStartTokenIndex !== null) {\n    const endTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.scopes.push(new _tokenizer_state__WEBPACK_IMPORTED_MODULE_5__.Scope(nameScopeStartTokenIndex, endTokenIndex, false));\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.scopeDepth--;\n  }\n}\n\nfunction isClassProperty() {\n  return (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.eq) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.bang) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.colon);\n}\n\nfunction isClassMethod() {\n  return (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.parenL) || (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.lessThan);\n}\n\nfunction parseClassBody(classContextId) {\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL);\n\n  while (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR) && !_base__WEBPACK_IMPORTED_MODULE_8__.state.error) {\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.semi)) {\n      continue;\n    }\n\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.at)) {\n      parseDecorator();\n      continue;\n    }\n    const memberStart = _base__WEBPACK_IMPORTED_MODULE_8__.state.start;\n    parseClassMember(memberStart, classContextId);\n  }\n}\n\nfunction parseClassMember(memberStart, classContextId) {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseModifiers)([\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._declare,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._public,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._protected,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._private,\n      _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._override,\n    ]);\n  }\n  let isStatic = false;\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name) && _base__WEBPACK_IMPORTED_MODULE_8__.state.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._static) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)(); // eats 'static'\n    if (isClassMethod()) {\n      parseClassMethod(memberStart, /* isConstructor */ false);\n      return;\n    } else if (isClassProperty()) {\n      parseClassProperty();\n      return;\n    }\n    // otherwise something static\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._static;\n    isStatic = true;\n\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL)) {\n      // This is a static block. Mark the word \"static\" with the class context ID for class element\n      // detection and parse as a regular block.\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].contextId = classContextId;\n      parseBlock();\n      return;\n    }\n  }\n\n  parseClassMemberWithIsStatic(memberStart, isStatic, classContextId);\n}\n\nfunction parseClassMemberWithIsStatic(\n  memberStart,\n  isStatic,\n  classContextId,\n) {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    if ((0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseClassMemberWithIsStatic)(isStatic)) {\n      return;\n    }\n  }\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star)) {\n    // a generator\n    parseClassPropertyName(classContextId);\n    parseClassMethod(memberStart, /* isConstructor */ false);\n    return;\n  }\n\n  // Get the identifier name so we can tell if it's actually a keyword like \"async\", \"get\", or\n  // \"set\".\n  parseClassPropertyName(classContextId);\n  let isConstructor = false;\n  const token = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1];\n  // We allow \"constructor\" as either an identifier or a string.\n  if (token.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._constructor) {\n    isConstructor = true;\n  }\n  parsePostMemberNameModifiers();\n\n  if (isClassMethod()) {\n    parseClassMethod(memberStart, isConstructor);\n  } else if (isClassProperty()) {\n    parseClassProperty();\n  } else if (token.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._async && !(0,_util__WEBPACK_IMPORTED_MODULE_11__.isLineTerminator)()) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._async;\n    // an async method\n    const isGenerator = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star);\n    if (isGenerator) {\n      (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n    }\n\n    // The so-called parsed name would have been \"async\": get the real name.\n    parseClassPropertyName(classContextId);\n    parsePostMemberNameModifiers();\n    parseClassMethod(memberStart, false /* isConstructor */);\n  } else if (\n    (token.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._get ||\n      token.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._set) &&\n    !((0,_util__WEBPACK_IMPORTED_MODULE_11__.isLineTerminator)() && (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star))\n  ) {\n    if (token.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._get) {\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._get;\n    } else {\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._set;\n    }\n    // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n    // a getter or setter\n    // The so-called parsed name would have been \"get/set\": get the real name.\n    parseClassPropertyName(classContextId);\n    parseClassMethod(memberStart, /* isConstructor */ false);\n  } else if (token.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._accessor && !(0,_util__WEBPACK_IMPORTED_MODULE_11__.isLineTerminator)()) {\n    parseClassPropertyName(classContextId);\n    parseClassProperty();\n  } else if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isLineTerminator)()) {\n    // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n    parseClassProperty();\n  } else {\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)();\n  }\n}\n\nfunction parseClassMethod(functionStart, isConstructor) {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseTypeParameters)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.lessThan)) {\n      (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowParseTypeParameterDeclaration)();\n    }\n  }\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseMethod)(functionStart, isConstructor);\n}\n\n// Return the name of the class property, if it is a simple identifier.\nfunction parseClassPropertyName(classContextId) {\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parsePropertyName)(classContextId);\n}\n\nfunction parsePostMemberNameModifiers() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    const oldIsType = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.pushTypeContext)(0);\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.question);\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.popTypeContext)(oldIsType);\n  }\n}\n\nfunction parseClassProperty() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eatTypeToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.bang);\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseTypeAnnotation)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.colon)) {\n      (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowParseTypeAnnotation)();\n    }\n  }\n\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.eq)) {\n    const equalsTokenIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseMaybeAssign)();\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[equalsTokenIndex].rhsEndIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n  }\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n}\n\nfunction parseClassId(isStatement, optionalId = false) {\n  if (\n    _base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled &&\n    (!isStatement || optionalId) &&\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._implements)\n  ) {\n    return;\n  }\n\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name)) {\n    (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseBindingIdentifier)(true);\n  }\n\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseTypeParameters)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.lessThan)) {\n      (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowParseTypeParameterDeclaration)();\n    }\n  }\n}\n\n// Returns true if there was a superclass.\nfunction parseClassSuper() {\n  let hasSuper = false;\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._extends)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExprSubscripts)();\n    hasSuper = true;\n  } else {\n    hasSuper = false;\n  }\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsAfterParseClassSuper)(hasSuper);\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowAfterParseClassSuper)(hasSuper);\n  }\n}\n\n// Parses module export declaration.\n\nfunction parseExport() {\n  const exportIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1;\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    if ((0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseExport)()) {\n      return;\n    }\n  }\n  // export * from '...'\n  if (shouldParseExportStar()) {\n    parseExportStar();\n  } else if (isExportDefaultSpecifier()) {\n    // export default from\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n    if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma) && (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star) {\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma);\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star);\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._as);\n      (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n    } else {\n      parseExportSpecifiersMaybe();\n    }\n    parseExportFrom();\n  } else if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._default)) {\n    // export default ...\n    parseExportDefaultExpression();\n  } else if (shouldParseExportDeclaration()) {\n    parseExportDeclaration();\n  } else {\n    // export { x, y as z } [from '...']\n    parseExportSpecifiers();\n    parseExportFrom();\n  }\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[exportIndex].rhsEndIndex = _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length;\n}\n\nfunction parseExportDefaultExpression() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    if ((0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsTryParseExportDefaultExpression)()) {\n      return;\n    }\n  }\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    if ((0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowTryParseExportDefaultExpression)()) {\n      return;\n    }\n  }\n  const functionStart = _base__WEBPACK_IMPORTED_MODULE_8__.state.start;\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._function)) {\n    parseFunction(functionStart, true, true);\n  } else if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._async) && (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._function) {\n    // async function declaration\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._async);\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._function);\n    parseFunction(functionStart, true, true);\n  } else if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._class)) {\n    parseClass(true, true);\n  } else if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.at)) {\n    parseDecorators();\n    parseClass(true, true);\n  } else {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseMaybeAssign)();\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n  }\n}\n\nfunction parseExportDeclaration() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseExportDeclaration)();\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowParseExportDeclaration)();\n  } else {\n    parseStatement(true);\n  }\n}\n\nfunction isExportDefaultSpecifier() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled && (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsIsDeclarationStart)()) {\n    return false;\n  } else if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled && (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowShouldDisallowExportDefaultSpecifier)()) {\n    return false;\n  }\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name)) {\n    return _base__WEBPACK_IMPORTED_MODULE_8__.state.contextualKeyword !== _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._async;\n  }\n\n  if (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._default)) {\n    return false;\n  }\n\n  const _next = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.nextTokenStart)();\n  const lookahead = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadTypeAndKeyword)();\n  const hasFrom =\n    lookahead.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name && lookahead.contextualKeyword === _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._from;\n  if (lookahead.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma) {\n    return true;\n  }\n  // lookahead again when `export default from` is seen\n  if (hasFrom) {\n    const nextAfterFrom = _base__WEBPACK_IMPORTED_MODULE_8__.input.charCodeAt((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.nextTokenStartSince)(_next + 4));\n    return nextAfterFrom === _util_charcodes__WEBPACK_IMPORTED_MODULE_7__.charCodes.quotationMark || nextAfterFrom === _util_charcodes__WEBPACK_IMPORTED_MODULE_7__.charCodes.apostrophe;\n  }\n  return false;\n}\n\nfunction parseExportSpecifiersMaybe() {\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma)) {\n    parseExportSpecifiers();\n  }\n}\n\nfunction parseExportFrom() {\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._from)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExprAtom)();\n    maybeParseImportAttributes();\n  }\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n}\n\nfunction shouldParseExportStar() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    return (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowShouldParseExportStar)();\n  } else {\n    return (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star);\n  }\n}\n\nfunction parseExportStar() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowParseExportStar)();\n  } else {\n    baseParseExportStar();\n  }\n}\n\nfunction baseParseExportStar() {\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star);\n\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._as)) {\n    parseExportNamespace();\n  } else {\n    parseExportFrom();\n  }\n}\n\nfunction parseExportNamespace() {\n  (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].type = _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._as;\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n  parseExportSpecifiersMaybe();\n  parseExportFrom();\n}\n\nfunction shouldParseExportDeclaration() {\n  return (\n    (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled && (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsIsDeclarationStart)()) ||\n    (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled && (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowShouldParseExportDeclaration)()) ||\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._var ||\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._const ||\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._let ||\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._function ||\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._class ||\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._async) ||\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.at)\n  );\n}\n\n// Parses a comma-separated list of module exports.\nfunction parseExportSpecifiers() {\n  let first = true;\n\n  // export { x, y as z } [from '...']\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL);\n\n  while (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR) && !_base__WEBPACK_IMPORTED_MODULE_8__.state.error) {\n    if (first) {\n      first = false;\n    } else {\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma);\n      if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR)) {\n        break;\n      }\n    }\n    parseExportSpecifier();\n  }\n}\n\nfunction parseExportSpecifier() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseExportSpecifier)();\n    return;\n  }\n  (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n  _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].identifierRole = _tokenizer__WEBPACK_IMPORTED_MODULE_3__.IdentifierRole.ExportAccess;\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._as)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseIdentifier)();\n  }\n}\n\n/**\n * Starting at the `module` token in an import, determine if it was truly an\n * import reflection token or just looks like one.\n *\n * Returns true for:\n * import module foo from \"foo\";\n * import module from from \"foo\";\n *\n * Returns false for:\n * import module from \"foo\";\n * import module, {bar} from \"foo\";\n */\nfunction isImportReflection() {\n  const snapshot = _base__WEBPACK_IMPORTED_MODULE_8__.state.snapshot();\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._module);\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.eatContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._from)) {\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._from)) {\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n      return true;\n    } else {\n      _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n      return false;\n    }\n  } else if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma)) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n    return false;\n  } else {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.restoreFromSnapshot(snapshot);\n    return true;\n  }\n}\n\n/**\n * Eat the \"module\" token from the import reflection proposal.\n * https://github.com/tc39/proposal-import-reflection\n */\nfunction parseMaybeImportReflection() {\n  // isImportReflection does snapshot/restore, so only run it if we see the word\n  // \"module\".\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._module) && isImportReflection()) {\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n  }\n}\n\n// Parses import declaration.\n\nfunction parseImport() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled && (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name) && (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.eq) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseImportEqualsDeclaration)();\n    return;\n  }\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled && (0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._type)) {\n    const lookahead = (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadTypeAndKeyword)();\n    if (lookahead.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name && lookahead.contextualKeyword !== _tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._from) {\n      // One of these `import type` cases:\n      // import type T = require('T');\n      // import type A from 'A';\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._type);\n      if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.lookaheadType)() === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.eq) {\n        (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseImportEqualsDeclaration)();\n        return;\n      }\n      // If this is an `import type...from` statement, then we already ate the\n      // type token, so proceed to the regular import parser.\n    } else if (lookahead.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star || lookahead.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL) {\n      // One of these `import type` cases, in which case we can eat the type token\n      // and proceed as normal:\n      // import type * as A from 'A';\n      // import type {a} from 'A';\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._type);\n    }\n    // Otherwise, we are importing the name \"type\".\n  }\n\n  // import '...'\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.string)) {\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExprAtom)();\n  } else {\n    parseMaybeImportReflection();\n    parseImportSpecifiers();\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._from);\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseExprAtom)();\n  }\n  maybeParseImportAttributes();\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.semicolon)();\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction shouldParseDefaultImport() {\n  return (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.name);\n}\n\nfunction parseImportSpecifierLocal() {\n  (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseImportedIdentifier)();\n}\n\n// Parses a comma-separated list of module imports.\nfunction parseImportSpecifiers() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowStartParseImportSpecifiers)();\n  }\n\n  let first = true;\n  if (shouldParseDefaultImport()) {\n    // import defaultObj, { x, y as z } from '...'\n    parseImportSpecifierLocal();\n\n    if (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma)) return;\n  }\n\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.star)) {\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n    (0,_util__WEBPACK_IMPORTED_MODULE_11__.expectContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._as);\n\n    parseImportSpecifierLocal();\n\n    return;\n  }\n\n  (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceL);\n  while (!(0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR) && !_base__WEBPACK_IMPORTED_MODULE_8__.state.error) {\n    if (first) {\n      first = false;\n    } else {\n      // Detect an attempt to deep destructure\n      if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.colon)) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_11__.unexpected)(\n          \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n        );\n      }\n\n      (0,_util__WEBPACK_IMPORTED_MODULE_11__.expect)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.comma);\n      if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType.braceR)) {\n        break;\n      }\n    }\n\n    parseImportSpecifier();\n  }\n}\n\nfunction parseImportSpecifier() {\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isTypeScriptEnabled) {\n    (0,_plugins_typescript__WEBPACK_IMPORTED_MODULE_2__.tsParseImportSpecifier)();\n    return;\n  }\n  if (_base__WEBPACK_IMPORTED_MODULE_8__.isFlowEnabled) {\n    (0,_plugins_flow__WEBPACK_IMPORTED_MODULE_1__.flowParseImportSpecifier)();\n    return;\n  }\n  (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseImportedIdentifier)();\n  if ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._as)) {\n    _base__WEBPACK_IMPORTED_MODULE_8__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_8__.state.tokens.length - 1].identifierRole = _tokenizer__WEBPACK_IMPORTED_MODULE_3__.IdentifierRole.ImportAccess;\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n    (0,_lval__WEBPACK_IMPORTED_MODULE_10__.parseImportedIdentifier)();\n  }\n}\n\n/**\n * Parse import attributes like `with {type: \"json\"}`, or the legacy form\n * `assert {type: \"json\"}`.\n *\n * Import attributes technically have their own syntax, but are always parseable\n * as a plain JS object, so just do that for simplicity.\n */\nfunction maybeParseImportAttributes() {\n  if ((0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_6__.TokenType._with) || ((0,_util__WEBPACK_IMPORTED_MODULE_11__.isContextual)(_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_4__.ContextualKeyword._assert) && !(0,_util__WEBPACK_IMPORTED_MODULE_11__.hasPrecedingLineBreak)())) {\n    (0,_tokenizer__WEBPACK_IMPORTED_MODULE_3__.next)();\n    (0,_expression__WEBPACK_IMPORTED_MODULE_9__.parseObj)(false, false);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/statement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js":
/*!****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/traverser/util.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canInsertSemicolon: function() { return /* binding */ canInsertSemicolon; },\n/* harmony export */   eatContextual: function() { return /* binding */ eatContextual; },\n/* harmony export */   expect: function() { return /* binding */ expect; },\n/* harmony export */   expectContextual: function() { return /* binding */ expectContextual; },\n/* harmony export */   hasFollowingLineBreak: function() { return /* binding */ hasFollowingLineBreak; },\n/* harmony export */   hasPrecedingLineBreak: function() { return /* binding */ hasPrecedingLineBreak; },\n/* harmony export */   isContextual: function() { return /* binding */ isContextual; },\n/* harmony export */   isLineTerminator: function() { return /* binding */ isLineTerminator; },\n/* harmony export */   isLookaheadContextual: function() { return /* binding */ isLookaheadContextual; },\n/* harmony export */   semicolon: function() { return /* binding */ semicolon; },\n/* harmony export */   unexpected: function() { return /* binding */ unexpected; }\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/index */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_charcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/base.js\");\n\n\n\n\n\n\n// ## Parser utilities\n\n// Tests whether parsed token is a contextual keyword.\nfunction isContextual(contextualKeyword) {\n  return _base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === contextualKeyword;\n}\n\nfunction isLookaheadContextual(contextualKeyword) {\n  const l = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.lookaheadTypeAndKeyword)();\n  return l.type === _tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name && l.contextualKeyword === contextualKeyword;\n}\n\n// Consumes contextual keyword if possible.\nfunction eatContextual(contextualKeyword) {\n  return _base__WEBPACK_IMPORTED_MODULE_3__.state.contextualKeyword === contextualKeyword && (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name);\n}\n\n// Asserts that following token is given contextual keyword.\nfunction expectContextual(contextualKeyword) {\n  if (!eatContextual(contextualKeyword)) {\n    unexpected();\n  }\n}\n\n// Test whether a semicolon can be inserted at the current position.\nfunction canInsertSemicolon() {\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eof) || (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.match)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR) || hasPrecedingLineBreak();\n}\n\nfunction hasPrecedingLineBreak() {\n  const prevToken = _base__WEBPACK_IMPORTED_MODULE_3__.state.tokens[_base__WEBPACK_IMPORTED_MODULE_3__.state.tokens.length - 1];\n  const lastTokEnd = prevToken ? prevToken.end : 0;\n  for (let i = lastTokEnd; i < _base__WEBPACK_IMPORTED_MODULE_3__.state.start; i++) {\n    const code = _base__WEBPACK_IMPORTED_MODULE_3__.input.charCodeAt(i);\n    if (\n      code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lineFeed ||\n      code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.carriageReturn ||\n      code === 0x2028 ||\n      code === 0x2029\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction hasFollowingLineBreak() {\n  const nextStart = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.nextTokenStart)();\n  for (let i = _base__WEBPACK_IMPORTED_MODULE_3__.state.end; i < nextStart; i++) {\n    const code = _base__WEBPACK_IMPORTED_MODULE_3__.input.charCodeAt(i);\n    if (\n      code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.lineFeed ||\n      code === _util_charcodes__WEBPACK_IMPORTED_MODULE_2__.charCodes.carriageReturn ||\n      code === 0x2028 ||\n      code === 0x2029\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isLineTerminator() {\n  return (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.semi) || canInsertSemicolon();\n}\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\nfunction semicolon() {\n  if (!isLineTerminator()) {\n    unexpected('Unexpected token, expected \";\"');\n  }\n}\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error at given pos.\nfunction expect(type) {\n  const matched = (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.eat)(type);\n  if (!matched) {\n    unexpected(`Unexpected token, expected \"${(0,_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.formatTokenType)(type)}\"`);\n  }\n}\n\n/**\n * Transition the parser to an error state. All code needs to be written to naturally unwind in this\n * state, which allows us to backtrack without exceptions and without error plumbing everywhere.\n */\nfunction unexpected(message = \"Unexpected token\", pos = _base__WEBPACK_IMPORTED_MODULE_3__.state.start) {\n  if (_base__WEBPACK_IMPORTED_MODULE_3__.state.error) {\n    return;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const err = new SyntaxError(message);\n  err.pos = pos;\n  _base__WEBPACK_IMPORTED_MODULE_3__.state.error = err;\n  _base__WEBPACK_IMPORTED_MODULE_3__.state.pos = _base__WEBPACK_IMPORTED_MODULE_3__.input.length;\n  (0,_tokenizer_index__WEBPACK_IMPORTED_MODULE_0__.finishToken)(_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eof);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci90cmF2ZXJzZXIvdXRpbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0c7O0FBRWhDO0FBQ3hCO0FBQ1I7O0FBRXBDOztBQUVBO0FBQ087QUFDUCxTQUFTLHdDQUFLO0FBQ2Q7O0FBRU87QUFDUCxZQUFZLHlFQUF1QjtBQUNuQyxvQkFBb0IsdURBQUU7QUFDdEI7O0FBRUE7QUFDTztBQUNQLFNBQVMsd0NBQUssNENBQTRDLHFEQUFHLENBQUMsdURBQUU7QUFDaEU7O0FBRUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ087QUFDUCxTQUFTLHVEQUFLLENBQUMsdURBQUUsU0FBUyx1REFBSyxDQUFDLHVEQUFFO0FBQ2xDOztBQUVPO0FBQ1Asb0JBQW9CLHdDQUFLLFFBQVEsd0NBQUs7QUFDdEM7QUFDQSwyQkFBMkIsSUFBSSx3Q0FBSyxRQUFRO0FBQzVDLGlCQUFpQix3Q0FBSztBQUN0QjtBQUNBLGVBQWUsc0RBQVM7QUFDeEIsZUFBZSxzREFBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1Asb0JBQW9CLGdFQUFjO0FBQ2xDLGVBQWUsd0NBQUssTUFBTSxlQUFlO0FBQ3pDLGlCQUFpQix3Q0FBSztBQUN0QjtBQUNBLGVBQWUsc0RBQVM7QUFDeEIsZUFBZSxzREFBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1AsU0FBUyxxREFBRyxDQUFDLHVEQUFFO0FBQ2Y7O0FBRUE7QUFDQTtBQUNPO0FBQ1A7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTs7QUFFQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IscURBQUc7QUFDckI7QUFDQSw4Q0FBOEMsaUVBQWUsT0FBTztBQUNwRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sd0RBQXdELHdDQUFLO0FBQ3BFLE1BQU0sd0NBQUs7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSx3Q0FBSztBQUNQLEVBQUUsd0NBQUssT0FBTyx3Q0FBSztBQUNuQixFQUFFLDZEQUFXLENBQUMsdURBQUU7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vcGFyc2VyL3RyYXZlcnNlci91dGlsLmpzPzI5NzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtlYXQsIGZpbmlzaFRva2VuLCBsb29rYWhlYWRUeXBlQW5kS2V5d29yZCwgbWF0Y2gsIG5leHRUb2tlblN0YXJ0fSBmcm9tIFwiLi4vdG9rZW5pemVyL2luZGV4XCI7XG5cbmltcG9ydCB7Zm9ybWF0VG9rZW5UeXBlLCBUb2tlblR5cGUgYXMgdHR9IGZyb20gXCIuLi90b2tlbml6ZXIvdHlwZXNcIjtcbmltcG9ydCB7Y2hhckNvZGVzfSBmcm9tIFwiLi4vdXRpbC9jaGFyY29kZXNcIjtcbmltcG9ydCB7aW5wdXQsIHN0YXRlfSBmcm9tIFwiLi9iYXNlXCI7XG5cbi8vICMjIFBhcnNlciB1dGlsaXRpZXNcblxuLy8gVGVzdHMgd2hldGhlciBwYXJzZWQgdG9rZW4gaXMgYSBjb250ZXh0dWFsIGtleXdvcmQuXG5leHBvcnQgZnVuY3Rpb24gaXNDb250ZXh0dWFsKGNvbnRleHR1YWxLZXl3b3JkKSB7XG4gIHJldHVybiBzdGF0ZS5jb250ZXh0dWFsS2V5d29yZCA9PT0gY29udGV4dHVhbEtleXdvcmQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0xvb2thaGVhZENvbnRleHR1YWwoY29udGV4dHVhbEtleXdvcmQpIHtcbiAgY29uc3QgbCA9IGxvb2thaGVhZFR5cGVBbmRLZXl3b3JkKCk7XG4gIHJldHVybiBsLnR5cGUgPT09IHR0Lm5hbWUgJiYgbC5jb250ZXh0dWFsS2V5d29yZCA9PT0gY29udGV4dHVhbEtleXdvcmQ7XG59XG5cbi8vIENvbnN1bWVzIGNvbnRleHR1YWwga2V5d29yZCBpZiBwb3NzaWJsZS5cbmV4cG9ydCBmdW5jdGlvbiBlYXRDb250ZXh0dWFsKGNvbnRleHR1YWxLZXl3b3JkKSB7XG4gIHJldHVybiBzdGF0ZS5jb250ZXh0dWFsS2V5d29yZCA9PT0gY29udGV4dHVhbEtleXdvcmQgJiYgZWF0KHR0Lm5hbWUpO1xufVxuXG4vLyBBc3NlcnRzIHRoYXQgZm9sbG93aW5nIHRva2VuIGlzIGdpdmVuIGNvbnRleHR1YWwga2V5d29yZC5cbmV4cG9ydCBmdW5jdGlvbiBleHBlY3RDb250ZXh0dWFsKGNvbnRleHR1YWxLZXl3b3JkKSB7XG4gIGlmICghZWF0Q29udGV4dHVhbChjb250ZXh0dWFsS2V5d29yZCkpIHtcbiAgICB1bmV4cGVjdGVkKCk7XG4gIH1cbn1cblxuLy8gVGVzdCB3aGV0aGVyIGEgc2VtaWNvbG9uIGNhbiBiZSBpbnNlcnRlZCBhdCB0aGUgY3VycmVudCBwb3NpdGlvbi5cbmV4cG9ydCBmdW5jdGlvbiBjYW5JbnNlcnRTZW1pY29sb24oKSB7XG4gIHJldHVybiBtYXRjaCh0dC5lb2YpIHx8IG1hdGNoKHR0LmJyYWNlUikgfHwgaGFzUHJlY2VkaW5nTGluZUJyZWFrKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNQcmVjZWRpbmdMaW5lQnJlYWsoKSB7XG4gIGNvbnN0IHByZXZUb2tlbiA9IHN0YXRlLnRva2Vuc1tzdGF0ZS50b2tlbnMubGVuZ3RoIC0gMV07XG4gIGNvbnN0IGxhc3RUb2tFbmQgPSBwcmV2VG9rZW4gPyBwcmV2VG9rZW4uZW5kIDogMDtcbiAgZm9yIChsZXQgaSA9IGxhc3RUb2tFbmQ7IGkgPCBzdGF0ZS5zdGFydDsgaSsrKSB7XG4gICAgY29uc3QgY29kZSA9IGlucHV0LmNoYXJDb2RlQXQoaSk7XG4gICAgaWYgKFxuICAgICAgY29kZSA9PT0gY2hhckNvZGVzLmxpbmVGZWVkIHx8XG4gICAgICBjb2RlID09PSBjaGFyQ29kZXMuY2FycmlhZ2VSZXR1cm4gfHxcbiAgICAgIGNvZGUgPT09IDB4MjAyOCB8fFxuICAgICAgY29kZSA9PT0gMHgyMDI5XG4gICAgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFzRm9sbG93aW5nTGluZUJyZWFrKCkge1xuICBjb25zdCBuZXh0U3RhcnQgPSBuZXh0VG9rZW5TdGFydCgpO1xuICBmb3IgKGxldCBpID0gc3RhdGUuZW5kOyBpIDwgbmV4dFN0YXJ0OyBpKyspIHtcbiAgICBjb25zdCBjb2RlID0gaW5wdXQuY2hhckNvZGVBdChpKTtcbiAgICBpZiAoXG4gICAgICBjb2RlID09PSBjaGFyQ29kZXMubGluZUZlZWQgfHxcbiAgICAgIGNvZGUgPT09IGNoYXJDb2Rlcy5jYXJyaWFnZVJldHVybiB8fFxuICAgICAgY29kZSA9PT0gMHgyMDI4IHx8XG4gICAgICBjb2RlID09PSAweDIwMjlcbiAgICApIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0xpbmVUZXJtaW5hdG9yKCkge1xuICByZXR1cm4gZWF0KHR0LnNlbWkpIHx8IGNhbkluc2VydFNlbWljb2xvbigpO1xufVxuXG4vLyBDb25zdW1lIGEgc2VtaWNvbG9uLCBvciwgZmFpbGluZyB0aGF0LCBzZWUgaWYgd2UgYXJlIGFsbG93ZWQgdG9cbi8vIHByZXRlbmQgdGhhdCB0aGVyZSBpcyBhIHNlbWljb2xvbiBhdCB0aGlzIHBvc2l0aW9uLlxuZXhwb3J0IGZ1bmN0aW9uIHNlbWljb2xvbigpIHtcbiAgaWYgKCFpc0xpbmVUZXJtaW5hdG9yKCkpIHtcbiAgICB1bmV4cGVjdGVkKCdVbmV4cGVjdGVkIHRva2VuLCBleHBlY3RlZCBcIjtcIicpO1xuICB9XG59XG5cbi8vIEV4cGVjdCBhIHRva2VuIG9mIGEgZ2l2ZW4gdHlwZS4gSWYgZm91bmQsIGNvbnN1bWUgaXQsIG90aGVyd2lzZSxcbi8vIHJhaXNlIGFuIHVuZXhwZWN0ZWQgdG9rZW4gZXJyb3IgYXQgZ2l2ZW4gcG9zLlxuZXhwb3J0IGZ1bmN0aW9uIGV4cGVjdCh0eXBlKSB7XG4gIGNvbnN0IG1hdGNoZWQgPSBlYXQodHlwZSk7XG4gIGlmICghbWF0Y2hlZCkge1xuICAgIHVuZXhwZWN0ZWQoYFVuZXhwZWN0ZWQgdG9rZW4sIGV4cGVjdGVkIFwiJHtmb3JtYXRUb2tlblR5cGUodHlwZSl9XCJgKTtcbiAgfVxufVxuXG4vKipcbiAqIFRyYW5zaXRpb24gdGhlIHBhcnNlciB0byBhbiBlcnJvciBzdGF0ZS4gQWxsIGNvZGUgbmVlZHMgdG8gYmUgd3JpdHRlbiB0byBuYXR1cmFsbHkgdW53aW5kIGluIHRoaXNcbiAqIHN0YXRlLCB3aGljaCBhbGxvd3MgdXMgdG8gYmFja3RyYWNrIHdpdGhvdXQgZXhjZXB0aW9ucyBhbmQgd2l0aG91dCBlcnJvciBwbHVtYmluZyBldmVyeXdoZXJlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5leHBlY3RlZChtZXNzYWdlID0gXCJVbmV4cGVjdGVkIHRva2VuXCIsIHBvcyA9IHN0YXRlLnN0YXJ0KSB7XG4gIGlmIChzdGF0ZS5lcnJvcikge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBjb25zdCBlcnIgPSBuZXcgU3ludGF4RXJyb3IobWVzc2FnZSk7XG4gIGVyci5wb3MgPSBwb3M7XG4gIHN0YXRlLmVycm9yID0gZXJyO1xuICBzdGF0ZS5wb3MgPSBpbnB1dC5sZW5ndGg7XG4gIGZpbmlzaFRva2VuKHR0LmVvZik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/traverser/util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js":
/*!****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/util/charcodes.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   charCodes: function() { return /* binding */ charCodes; },\n/* harmony export */   isDigit: function() { return /* binding */ isDigit; }\n/* harmony export */ });\nvar charCodes; (function (charCodes) {\n  const backSpace = 8; charCodes[charCodes[\"backSpace\"] = backSpace] = \"backSpace\";\n  const lineFeed = 10; charCodes[charCodes[\"lineFeed\"] = lineFeed] = \"lineFeed\"; //  '\\n'\n  const tab = 9; charCodes[charCodes[\"tab\"] = tab] = \"tab\"; //  '\\t'\n  const carriageReturn = 13; charCodes[charCodes[\"carriageReturn\"] = carriageReturn] = \"carriageReturn\"; //  '\\r'\n  const shiftOut = 14; charCodes[charCodes[\"shiftOut\"] = shiftOut] = \"shiftOut\";\n  const space = 32; charCodes[charCodes[\"space\"] = space] = \"space\";\n  const exclamationMark = 33; charCodes[charCodes[\"exclamationMark\"] = exclamationMark] = \"exclamationMark\"; //  '!'\n  const quotationMark = 34; charCodes[charCodes[\"quotationMark\"] = quotationMark] = \"quotationMark\"; //  '\"'\n  const numberSign = 35; charCodes[charCodes[\"numberSign\"] = numberSign] = \"numberSign\"; //  '#'\n  const dollarSign = 36; charCodes[charCodes[\"dollarSign\"] = dollarSign] = \"dollarSign\"; //  '$'\n  const percentSign = 37; charCodes[charCodes[\"percentSign\"] = percentSign] = \"percentSign\"; //  '%'\n  const ampersand = 38; charCodes[charCodes[\"ampersand\"] = ampersand] = \"ampersand\"; //  '&'\n  const apostrophe = 39; charCodes[charCodes[\"apostrophe\"] = apostrophe] = \"apostrophe\"; //  '''\n  const leftParenthesis = 40; charCodes[charCodes[\"leftParenthesis\"] = leftParenthesis] = \"leftParenthesis\"; //  '('\n  const rightParenthesis = 41; charCodes[charCodes[\"rightParenthesis\"] = rightParenthesis] = \"rightParenthesis\"; //  ')'\n  const asterisk = 42; charCodes[charCodes[\"asterisk\"] = asterisk] = \"asterisk\"; //  '*'\n  const plusSign = 43; charCodes[charCodes[\"plusSign\"] = plusSign] = \"plusSign\"; //  '+'\n  const comma = 44; charCodes[charCodes[\"comma\"] = comma] = \"comma\"; //  ','\n  const dash = 45; charCodes[charCodes[\"dash\"] = dash] = \"dash\"; //  '-'\n  const dot = 46; charCodes[charCodes[\"dot\"] = dot] = \"dot\"; //  '.'\n  const slash = 47; charCodes[charCodes[\"slash\"] = slash] = \"slash\"; //  '/'\n  const digit0 = 48; charCodes[charCodes[\"digit0\"] = digit0] = \"digit0\"; //  '0'\n  const digit1 = 49; charCodes[charCodes[\"digit1\"] = digit1] = \"digit1\"; //  '1'\n  const digit2 = 50; charCodes[charCodes[\"digit2\"] = digit2] = \"digit2\"; //  '2'\n  const digit3 = 51; charCodes[charCodes[\"digit3\"] = digit3] = \"digit3\"; //  '3'\n  const digit4 = 52; charCodes[charCodes[\"digit4\"] = digit4] = \"digit4\"; //  '4'\n  const digit5 = 53; charCodes[charCodes[\"digit5\"] = digit5] = \"digit5\"; //  '5'\n  const digit6 = 54; charCodes[charCodes[\"digit6\"] = digit6] = \"digit6\"; //  '6'\n  const digit7 = 55; charCodes[charCodes[\"digit7\"] = digit7] = \"digit7\"; //  '7'\n  const digit8 = 56; charCodes[charCodes[\"digit8\"] = digit8] = \"digit8\"; //  '8'\n  const digit9 = 57; charCodes[charCodes[\"digit9\"] = digit9] = \"digit9\"; //  '9'\n  const colon = 58; charCodes[charCodes[\"colon\"] = colon] = \"colon\"; //  ':'\n  const semicolon = 59; charCodes[charCodes[\"semicolon\"] = semicolon] = \"semicolon\"; //  ';'\n  const lessThan = 60; charCodes[charCodes[\"lessThan\"] = lessThan] = \"lessThan\"; //  '<'\n  const equalsTo = 61; charCodes[charCodes[\"equalsTo\"] = equalsTo] = \"equalsTo\"; //  '='\n  const greaterThan = 62; charCodes[charCodes[\"greaterThan\"] = greaterThan] = \"greaterThan\"; //  '>'\n  const questionMark = 63; charCodes[charCodes[\"questionMark\"] = questionMark] = \"questionMark\"; //  '?'\n  const atSign = 64; charCodes[charCodes[\"atSign\"] = atSign] = \"atSign\"; //  '@'\n  const uppercaseA = 65; charCodes[charCodes[\"uppercaseA\"] = uppercaseA] = \"uppercaseA\"; //  'A'\n  const uppercaseB = 66; charCodes[charCodes[\"uppercaseB\"] = uppercaseB] = \"uppercaseB\"; //  'B'\n  const uppercaseC = 67; charCodes[charCodes[\"uppercaseC\"] = uppercaseC] = \"uppercaseC\"; //  'C'\n  const uppercaseD = 68; charCodes[charCodes[\"uppercaseD\"] = uppercaseD] = \"uppercaseD\"; //  'D'\n  const uppercaseE = 69; charCodes[charCodes[\"uppercaseE\"] = uppercaseE] = \"uppercaseE\"; //  'E'\n  const uppercaseF = 70; charCodes[charCodes[\"uppercaseF\"] = uppercaseF] = \"uppercaseF\"; //  'F'\n  const uppercaseG = 71; charCodes[charCodes[\"uppercaseG\"] = uppercaseG] = \"uppercaseG\"; //  'G'\n  const uppercaseH = 72; charCodes[charCodes[\"uppercaseH\"] = uppercaseH] = \"uppercaseH\"; //  'H'\n  const uppercaseI = 73; charCodes[charCodes[\"uppercaseI\"] = uppercaseI] = \"uppercaseI\"; //  'I'\n  const uppercaseJ = 74; charCodes[charCodes[\"uppercaseJ\"] = uppercaseJ] = \"uppercaseJ\"; //  'J'\n  const uppercaseK = 75; charCodes[charCodes[\"uppercaseK\"] = uppercaseK] = \"uppercaseK\"; //  'K'\n  const uppercaseL = 76; charCodes[charCodes[\"uppercaseL\"] = uppercaseL] = \"uppercaseL\"; //  'L'\n  const uppercaseM = 77; charCodes[charCodes[\"uppercaseM\"] = uppercaseM] = \"uppercaseM\"; //  'M'\n  const uppercaseN = 78; charCodes[charCodes[\"uppercaseN\"] = uppercaseN] = \"uppercaseN\"; //  'N'\n  const uppercaseO = 79; charCodes[charCodes[\"uppercaseO\"] = uppercaseO] = \"uppercaseO\"; //  'O'\n  const uppercaseP = 80; charCodes[charCodes[\"uppercaseP\"] = uppercaseP] = \"uppercaseP\"; //  'P'\n  const uppercaseQ = 81; charCodes[charCodes[\"uppercaseQ\"] = uppercaseQ] = \"uppercaseQ\"; //  'Q'\n  const uppercaseR = 82; charCodes[charCodes[\"uppercaseR\"] = uppercaseR] = \"uppercaseR\"; //  'R'\n  const uppercaseS = 83; charCodes[charCodes[\"uppercaseS\"] = uppercaseS] = \"uppercaseS\"; //  'S'\n  const uppercaseT = 84; charCodes[charCodes[\"uppercaseT\"] = uppercaseT] = \"uppercaseT\"; //  'T'\n  const uppercaseU = 85; charCodes[charCodes[\"uppercaseU\"] = uppercaseU] = \"uppercaseU\"; //  'U'\n  const uppercaseV = 86; charCodes[charCodes[\"uppercaseV\"] = uppercaseV] = \"uppercaseV\"; //  'V'\n  const uppercaseW = 87; charCodes[charCodes[\"uppercaseW\"] = uppercaseW] = \"uppercaseW\"; //  'W'\n  const uppercaseX = 88; charCodes[charCodes[\"uppercaseX\"] = uppercaseX] = \"uppercaseX\"; //  'X'\n  const uppercaseY = 89; charCodes[charCodes[\"uppercaseY\"] = uppercaseY] = \"uppercaseY\"; //  'Y'\n  const uppercaseZ = 90; charCodes[charCodes[\"uppercaseZ\"] = uppercaseZ] = \"uppercaseZ\"; //  'Z'\n  const leftSquareBracket = 91; charCodes[charCodes[\"leftSquareBracket\"] = leftSquareBracket] = \"leftSquareBracket\"; //  '['\n  const backslash = 92; charCodes[charCodes[\"backslash\"] = backslash] = \"backslash\"; //  '\\    '\n  const rightSquareBracket = 93; charCodes[charCodes[\"rightSquareBracket\"] = rightSquareBracket] = \"rightSquareBracket\"; //  ']'\n  const caret = 94; charCodes[charCodes[\"caret\"] = caret] = \"caret\"; //  '^'\n  const underscore = 95; charCodes[charCodes[\"underscore\"] = underscore] = \"underscore\"; //  '_'\n  const graveAccent = 96; charCodes[charCodes[\"graveAccent\"] = graveAccent] = \"graveAccent\"; //  '`'\n  const lowercaseA = 97; charCodes[charCodes[\"lowercaseA\"] = lowercaseA] = \"lowercaseA\"; //  'a'\n  const lowercaseB = 98; charCodes[charCodes[\"lowercaseB\"] = lowercaseB] = \"lowercaseB\"; //  'b'\n  const lowercaseC = 99; charCodes[charCodes[\"lowercaseC\"] = lowercaseC] = \"lowercaseC\"; //  'c'\n  const lowercaseD = 100; charCodes[charCodes[\"lowercaseD\"] = lowercaseD] = \"lowercaseD\"; //  'd'\n  const lowercaseE = 101; charCodes[charCodes[\"lowercaseE\"] = lowercaseE] = \"lowercaseE\"; //  'e'\n  const lowercaseF = 102; charCodes[charCodes[\"lowercaseF\"] = lowercaseF] = \"lowercaseF\"; //  'f'\n  const lowercaseG = 103; charCodes[charCodes[\"lowercaseG\"] = lowercaseG] = \"lowercaseG\"; //  'g'\n  const lowercaseH = 104; charCodes[charCodes[\"lowercaseH\"] = lowercaseH] = \"lowercaseH\"; //  'h'\n  const lowercaseI = 105; charCodes[charCodes[\"lowercaseI\"] = lowercaseI] = \"lowercaseI\"; //  'i'\n  const lowercaseJ = 106; charCodes[charCodes[\"lowercaseJ\"] = lowercaseJ] = \"lowercaseJ\"; //  'j'\n  const lowercaseK = 107; charCodes[charCodes[\"lowercaseK\"] = lowercaseK] = \"lowercaseK\"; //  'k'\n  const lowercaseL = 108; charCodes[charCodes[\"lowercaseL\"] = lowercaseL] = \"lowercaseL\"; //  'l'\n  const lowercaseM = 109; charCodes[charCodes[\"lowercaseM\"] = lowercaseM] = \"lowercaseM\"; //  'm'\n  const lowercaseN = 110; charCodes[charCodes[\"lowercaseN\"] = lowercaseN] = \"lowercaseN\"; //  'n'\n  const lowercaseO = 111; charCodes[charCodes[\"lowercaseO\"] = lowercaseO] = \"lowercaseO\"; //  'o'\n  const lowercaseP = 112; charCodes[charCodes[\"lowercaseP\"] = lowercaseP] = \"lowercaseP\"; //  'p'\n  const lowercaseQ = 113; charCodes[charCodes[\"lowercaseQ\"] = lowercaseQ] = \"lowercaseQ\"; //  'q'\n  const lowercaseR = 114; charCodes[charCodes[\"lowercaseR\"] = lowercaseR] = \"lowercaseR\"; //  'r'\n  const lowercaseS = 115; charCodes[charCodes[\"lowercaseS\"] = lowercaseS] = \"lowercaseS\"; //  's'\n  const lowercaseT = 116; charCodes[charCodes[\"lowercaseT\"] = lowercaseT] = \"lowercaseT\"; //  't'\n  const lowercaseU = 117; charCodes[charCodes[\"lowercaseU\"] = lowercaseU] = \"lowercaseU\"; //  'u'\n  const lowercaseV = 118; charCodes[charCodes[\"lowercaseV\"] = lowercaseV] = \"lowercaseV\"; //  'v'\n  const lowercaseW = 119; charCodes[charCodes[\"lowercaseW\"] = lowercaseW] = \"lowercaseW\"; //  'w'\n  const lowercaseX = 120; charCodes[charCodes[\"lowercaseX\"] = lowercaseX] = \"lowercaseX\"; //  'x'\n  const lowercaseY = 121; charCodes[charCodes[\"lowercaseY\"] = lowercaseY] = \"lowercaseY\"; //  'y'\n  const lowercaseZ = 122; charCodes[charCodes[\"lowercaseZ\"] = lowercaseZ] = \"lowercaseZ\"; //  'z'\n  const leftCurlyBrace = 123; charCodes[charCodes[\"leftCurlyBrace\"] = leftCurlyBrace] = \"leftCurlyBrace\"; //  '{'\n  const verticalBar = 124; charCodes[charCodes[\"verticalBar\"] = verticalBar] = \"verticalBar\"; //  '|'\n  const rightCurlyBrace = 125; charCodes[charCodes[\"rightCurlyBrace\"] = rightCurlyBrace] = \"rightCurlyBrace\"; //  '}'\n  const tilde = 126; charCodes[charCodes[\"tilde\"] = tilde] = \"tilde\"; //  '~'\n  const nonBreakingSpace = 160; charCodes[charCodes[\"nonBreakingSpace\"] = nonBreakingSpace] = \"nonBreakingSpace\";\n  // eslint-disable-next-line no-irregular-whitespace\n  const oghamSpaceMark = 5760; charCodes[charCodes[\"oghamSpaceMark\"] = oghamSpaceMark] = \"oghamSpaceMark\"; // ' '\n  const lineSeparator = 8232; charCodes[charCodes[\"lineSeparator\"] = lineSeparator] = \"lineSeparator\";\n  const paragraphSeparator = 8233; charCodes[charCodes[\"paragraphSeparator\"] = paragraphSeparator] = \"paragraphSeparator\";\n})(charCodes || (charCodes = {}));\n\nfunction isDigit(code) {\n  return (\n    (code >= charCodes.digit0 && code <= charCodes.digit9) ||\n    (code >= charCodes.lowercaseA && code <= charCodes.lowercaseF) ||\n    (code >= charCodes.uppercaseA && code <= charCodes.uppercaseF)\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/identifier.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/util/identifier.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IS_IDENTIFIER_CHAR: function() { return /* binding */ IS_IDENTIFIER_CHAR; },\n/* harmony export */   IS_IDENTIFIER_START: function() { return /* binding */ IS_IDENTIFIER_START; }\n/* harmony export */ });\n/* harmony import */ var _charcodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _whitespace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./whitespace */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/whitespace.js\");\n\n\n\nfunction computeIsIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code < 128) return false;\n  throw new Error(\"Should not be called with non-ASCII char code.\");\n}\n\nconst IS_IDENTIFIER_CHAR = new Uint8Array(65536);\nfor (let i = 0; i < 128; i++) {\n  IS_IDENTIFIER_CHAR[i] = computeIsIdentifierChar(i) ? 1 : 0;\n}\nfor (let i = 128; i < 65536; i++) {\n  IS_IDENTIFIER_CHAR[i] = 1;\n}\n// Aside from whitespace and newlines, all characters outside the ASCII space are either\n// identifier characters or invalid. Since we're not performing code validation, we can just\n// treat all invalid characters as identifier characters.\nfor (const whitespaceChar of _whitespace__WEBPACK_IMPORTED_MODULE_1__.WHITESPACE_CHARS) {\n  IS_IDENTIFIER_CHAR[whitespaceChar] = 0;\n}\nIS_IDENTIFIER_CHAR[0x2028] = 0;\nIS_IDENTIFIER_CHAR[0x2029] = 0;\n\nconst IS_IDENTIFIER_START = IS_IDENTIFIER_CHAR.slice();\nfor (let numChar = _charcodes__WEBPACK_IMPORTED_MODULE_0__.charCodes.digit0; numChar <= _charcodes__WEBPACK_IMPORTED_MODULE_0__.charCodes.digit9; numChar++) {\n  IS_IDENTIFIER_START[numChar] = 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci91dGlsL2lkZW50aWZpZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQztBQUNROztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQSxrQkFBa0IsV0FBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHlEQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQLG1CQUFtQixpREFBUyxTQUFTLFdBQVcsaURBQVMsU0FBUztBQUNsRTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci91dGlsL2lkZW50aWZpZXIuanM/YjYyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NoYXJDb2Rlc30gZnJvbSBcIi4vY2hhcmNvZGVzXCI7XG5pbXBvcnQge1dISVRFU1BBQ0VfQ0hBUlN9IGZyb20gXCIuL3doaXRlc3BhY2VcIjtcblxuZnVuY3Rpb24gY29tcHV0ZUlzSWRlbnRpZmllckNoYXIoY29kZSkge1xuICBpZiAoY29kZSA8IDQ4KSByZXR1cm4gY29kZSA9PT0gMzY7XG4gIGlmIChjb2RlIDwgNTgpIHJldHVybiB0cnVlO1xuICBpZiAoY29kZSA8IDY1KSByZXR1cm4gZmFsc2U7XG4gIGlmIChjb2RlIDwgOTEpIHJldHVybiB0cnVlO1xuICBpZiAoY29kZSA8IDk3KSByZXR1cm4gY29kZSA9PT0gOTU7XG4gIGlmIChjb2RlIDwgMTIzKSByZXR1cm4gdHJ1ZTtcbiAgaWYgKGNvZGUgPCAxMjgpIHJldHVybiBmYWxzZTtcbiAgdGhyb3cgbmV3IEVycm9yKFwiU2hvdWxkIG5vdCBiZSBjYWxsZWQgd2l0aCBub24tQVNDSUkgY2hhciBjb2RlLlwiKTtcbn1cblxuZXhwb3J0IGNvbnN0IElTX0lERU5USUZJRVJfQ0hBUiA9IG5ldyBVaW50OEFycmF5KDY1NTM2KTtcbmZvciAobGV0IGkgPSAwOyBpIDwgMTI4OyBpKyspIHtcbiAgSVNfSURFTlRJRklFUl9DSEFSW2ldID0gY29tcHV0ZUlzSWRlbnRpZmllckNoYXIoaSkgPyAxIDogMDtcbn1cbmZvciAobGV0IGkgPSAxMjg7IGkgPCA2NTUzNjsgaSsrKSB7XG4gIElTX0lERU5USUZJRVJfQ0hBUltpXSA9IDE7XG59XG4vLyBBc2lkZSBmcm9tIHdoaXRlc3BhY2UgYW5kIG5ld2xpbmVzLCBhbGwgY2hhcmFjdGVycyBvdXRzaWRlIHRoZSBBU0NJSSBzcGFjZSBhcmUgZWl0aGVyXG4vLyBpZGVudGlmaWVyIGNoYXJhY3RlcnMgb3IgaW52YWxpZC4gU2luY2Ugd2UncmUgbm90IHBlcmZvcm1pbmcgY29kZSB2YWxpZGF0aW9uLCB3ZSBjYW4ganVzdFxuLy8gdHJlYXQgYWxsIGludmFsaWQgY2hhcmFjdGVycyBhcyBpZGVudGlmaWVyIGNoYXJhY3RlcnMuXG5mb3IgKGNvbnN0IHdoaXRlc3BhY2VDaGFyIG9mIFdISVRFU1BBQ0VfQ0hBUlMpIHtcbiAgSVNfSURFTlRJRklFUl9DSEFSW3doaXRlc3BhY2VDaGFyXSA9IDA7XG59XG5JU19JREVOVElGSUVSX0NIQVJbMHgyMDI4XSA9IDA7XG5JU19JREVOVElGSUVSX0NIQVJbMHgyMDI5XSA9IDA7XG5cbmV4cG9ydCBjb25zdCBJU19JREVOVElGSUVSX1NUQVJUID0gSVNfSURFTlRJRklFUl9DSEFSLnNsaWNlKCk7XG5mb3IgKGxldCBudW1DaGFyID0gY2hhckNvZGVzLmRpZ2l0MDsgbnVtQ2hhciA8PSBjaGFyQ29kZXMuZGlnaXQ5OyBudW1DaGFyKyspIHtcbiAgSVNfSURFTlRJRklFUl9TVEFSVFtudW1DaGFyXSA9IDA7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/identifier.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/whitespace.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/parser/util/whitespace.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IS_WHITESPACE: function() { return /* binding */ IS_WHITESPACE; },\n/* harmony export */   WHITESPACE_CHARS: function() { return /* binding */ WHITESPACE_CHARS; },\n/* harmony export */   skipWhiteSpace: function() { return /* binding */ skipWhiteSpace; }\n/* harmony export */ });\n/* harmony import */ var _charcodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n\n\n// https://tc39.github.io/ecma262/#sec-white-space\nconst WHITESPACE_CHARS = [\n  0x0009,\n  0x000b,\n  0x000c,\n  _charcodes__WEBPACK_IMPORTED_MODULE_0__.charCodes.space,\n  _charcodes__WEBPACK_IMPORTED_MODULE_0__.charCodes.nonBreakingSpace,\n  _charcodes__WEBPACK_IMPORTED_MODULE_0__.charCodes.oghamSpaceMark,\n  0x2000, // EN QUAD\n  0x2001, // EM QUAD\n  0x2002, // EN SPACE\n  0x2003, // EM SPACE\n  0x2004, // THREE-PER-EM SPACE\n  0x2005, // FOUR-PER-EM SPACE\n  0x2006, // SIX-PER-EM SPACE\n  0x2007, // FIGURE SPACE\n  0x2008, // PUNCTUATION SPACE\n  0x2009, // THIN SPACE\n  0x200a, // HAIR SPACE\n  0x202f, // NARROW NO-BREAK SPACE\n  0x205f, // MEDIUM MATHEMATICAL SPACE\n  0x3000, // IDEOGRAPHIC SPACE\n  0xfeff, // ZERO WIDTH NO-BREAK SPACE\n];\n\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nconst IS_WHITESPACE = new Uint8Array(65536);\nfor (const char of WHITESPACE_CHARS) {\n  IS_WHITESPACE[char] = 1;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci91dGlsL3doaXRlc3BhY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQzs7QUFFdEM7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEVBQUUsaURBQVM7QUFDWCxFQUFFLGlEQUFTO0FBQ1gsRUFBRSxpREFBUztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPOztBQUVBO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3BhcnNlci91dGlsL3doaXRlc3BhY2UuanM/YjkxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NoYXJDb2Rlc30gZnJvbSBcIi4vY2hhcmNvZGVzXCI7XG5cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXdoaXRlLXNwYWNlXG5leHBvcnQgY29uc3QgV0hJVEVTUEFDRV9DSEFSUyA9IFtcbiAgMHgwMDA5LFxuICAweDAwMGIsXG4gIDB4MDAwYyxcbiAgY2hhckNvZGVzLnNwYWNlLFxuICBjaGFyQ29kZXMubm9uQnJlYWtpbmdTcGFjZSxcbiAgY2hhckNvZGVzLm9naGFtU3BhY2VNYXJrLFxuICAweDIwMDAsIC8vIEVOIFFVQURcbiAgMHgyMDAxLCAvLyBFTSBRVUFEXG4gIDB4MjAwMiwgLy8gRU4gU1BBQ0VcbiAgMHgyMDAzLCAvLyBFTSBTUEFDRVxuICAweDIwMDQsIC8vIFRIUkVFLVBFUi1FTSBTUEFDRVxuICAweDIwMDUsIC8vIEZPVVItUEVSLUVNIFNQQUNFXG4gIDB4MjAwNiwgLy8gU0lYLVBFUi1FTSBTUEFDRVxuICAweDIwMDcsIC8vIEZJR1VSRSBTUEFDRVxuICAweDIwMDgsIC8vIFBVTkNUVUFUSU9OIFNQQUNFXG4gIDB4MjAwOSwgLy8gVEhJTiBTUEFDRVxuICAweDIwMGEsIC8vIEhBSVIgU1BBQ0VcbiAgMHgyMDJmLCAvLyBOQVJST1cgTk8tQlJFQUsgU1BBQ0VcbiAgMHgyMDVmLCAvLyBNRURJVU0gTUFUSEVNQVRJQ0FMIFNQQUNFXG4gIDB4MzAwMCwgLy8gSURFT0dSQVBISUMgU1BBQ0VcbiAgMHhmZWZmLCAvLyBaRVJPIFdJRFRIIE5PLUJSRUFLIFNQQUNFXG5dO1xuXG5leHBvcnQgY29uc3Qgc2tpcFdoaXRlU3BhY2UgPSAvKD86XFxzfFxcL1xcLy4qfFxcL1xcKlteXSo/XFwqXFwvKSovZztcblxuZXhwb3J0IGNvbnN0IElTX1dISVRFU1BBQ0UgPSBuZXcgVWludDhBcnJheSg2NTUzNik7XG5mb3IgKGNvbnN0IGNoYXIgb2YgV0hJVEVTUEFDRV9DSEFSUykge1xuICBJU19XSElURVNQQUNFW2NoYXJdID0gMTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/whitespace.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/CJSImportTransformer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/CJSImportTransformer.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CJSImportTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_elideImportEquals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/elideImportEquals */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/elideImportEquals.js\");\n/* harmony import */ var _util_getDeclarationInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/getDeclarationInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getDeclarationInfo.js\");\n/* harmony import */ var _util_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/getImportExportSpecifierInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getImportExportSpecifierInfo.js\");\n/* harmony import */ var _util_isExportFrom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isExportFrom */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isExportFrom.js\");\n/* harmony import */ var _util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/removeMaybeImportAttributes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/removeMaybeImportAttributes.js\");\n/* harmony import */ var _util_shouldElideDefaultExport__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/shouldElideDefaultExport */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/shouldElideDefaultExport.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Class for editing import statements when we are transforming to commonjs.\n */\nclass CJSImportTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_9__[\"default\"] {\n   __init() {this.hadExport = false}\n   __init2() {this.hadNamedExport = false}\n   __init3() {this.hadDefaultExport = false}\n  \n\n  constructor(\n     rootTransformer,\n     tokens,\n     importProcessor,\n     nameManager,\n     helperManager,\n     reactHotLoaderTransformer,\n     enableLegacyBabel5ModuleInterop,\n     enableLegacyTypeScriptModuleInterop,\n     isTypeScriptTransformEnabled,\n     isFlowTransformEnabled,\n     preserveDynamicImport,\n     keepUnusedImports,\n  ) {\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.nameManager = nameManager;this.helperManager = helperManager;this.reactHotLoaderTransformer = reactHotLoaderTransformer;this.enableLegacyBabel5ModuleInterop = enableLegacyBabel5ModuleInterop;this.enableLegacyTypeScriptModuleInterop = enableLegacyTypeScriptModuleInterop;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.isFlowTransformEnabled = isFlowTransformEnabled;this.preserveDynamicImport = preserveDynamicImport;this.keepUnusedImports = keepUnusedImports;CJSImportTransformer.prototype.__init.call(this);CJSImportTransformer.prototype.__init2.call(this);CJSImportTransformer.prototype.__init3.call(this);;\n    this.declarationInfo = isTypeScriptTransformEnabled\n      ? (0,_util_getDeclarationInfo__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(tokens)\n      : _util_getDeclarationInfo__WEBPACK_IMPORTED_MODULE_4__.EMPTY_DECLARATION_INFO;\n  }\n\n  getPrefixCode() {\n    let prefix = \"\";\n    if (this.hadExport) {\n      prefix += 'Object.defineProperty(exports, \"__esModule\", {value: true});';\n    }\n    return prefix;\n  }\n\n  getSuffixCode() {\n    if (this.enableLegacyBabel5ModuleInterop && this.hadDefaultExport && !this.hadNamedExport) {\n      return \"\\nmodule.exports = exports.default;\\n\";\n    }\n    return \"\";\n  }\n\n  process() {\n    // TypeScript `import foo = require('foo');` should always just be translated to plain require.\n    if (this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n      return this.processImportEquals();\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import)) {\n      this.processImport();\n      return true;\n    }\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n      this.tokens.replaceToken(\"module.exports\");\n      return true;\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export) && !this.tokens.currentToken().isType) {\n      this.hadExport = true;\n      return this.processExport();\n    }\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.postIncDec)) {\n      // Fall through to normal identifier matching if this doesn't apply.\n      if (this.processPostIncDec()) {\n        return true;\n      }\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) || this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxName)) {\n      return this.processIdentifier();\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n      return this.processAssignment();\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.assign)) {\n      return this.processComplexAssignment();\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.preIncDec)) {\n      return this.processPreIncDec();\n    }\n    return false;\n  }\n\n   processImportEquals() {\n    const importName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\n    if (this.importProcessor.shouldAutomaticallyElideImportedName(importName)) {\n      // If this name is only used as a type, elide the whole import.\n      (0,_util_elideImportEquals__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.tokens);\n    } else {\n      // Otherwise, switch `import` to `const`.\n      this.tokens.replaceToken(\"const\");\n    }\n    return true;\n  }\n\n  /**\n   * Transform this:\n   * import foo, {bar} from 'baz';\n   * into\n   * var _baz = require('baz'); var _baz2 = _interopRequireDefault(_baz);\n   *\n   * The import code was already generated in the import preprocessing step, so\n   * we just need to look it up.\n   */\n   processImport() {\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n      if (this.preserveDynamicImport) {\n        // Bail out, only making progress for this one token.\n        this.tokens.copyToken();\n        return;\n      }\n      const requireWrapper = this.enableLegacyTypeScriptModuleInterop\n        ? \"\"\n        : `${this.helperManager.getHelperName(\"interopRequireWildcard\")}(`;\n      this.tokens.replaceToken(`Promise.resolve().then(() => ${requireWrapper}require`);\n      const contextId = this.tokens.currentToken().contextId;\n      if (contextId == null) {\n        throw new Error(\"Expected context ID on dynamic import invocation.\");\n      }\n      this.tokens.copyToken();\n      while (!this.tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR, contextId)) {\n        this.rootTransformer.processToken();\n      }\n      this.tokens.replaceToken(requireWrapper ? \")))\" : \"))\");\n      return;\n    }\n\n    const shouldElideImport = this.removeImportAndDetectIfShouldElide();\n    if (shouldElideImport) {\n      this.tokens.removeToken();\n    } else {\n      const path = this.tokens.stringValue();\n      this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));\n      this.tokens.appendCode(this.importProcessor.claimImportCode(path));\n    }\n    (0,_util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__.removeMaybeImportAttributes)(this.tokens);\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.semi)) {\n      this.tokens.removeToken();\n    }\n  }\n\n  /**\n   * Erase this import (since any CJS output would be completely different), and\n   * return true if this import is should be elided due to being a type-only\n   * import. Such imports will not be emitted at all to avoid side effects.\n   *\n   * Import elision only happens with the TypeScript or Flow transforms enabled.\n   *\n   * TODO: This function has some awkward overlap with\n   *  CJSImportProcessor.pruneTypeOnlyImports , and the two should be unified.\n   *  That function handles TypeScript implicit import name elision, and removes\n   *  an import if all typical imported names (without `type`) are removed due\n   *  to being type-only imports. This function handles Flow import removal and\n   *  properly distinguishes `import 'foo'` from `import {} from 'foo'` for TS\n   *  purposes.\n   *\n   * The position should end at the import string.\n   */\n   removeImportAndDetectIfShouldElide() {\n    this.tokens.removeInitialToken();\n    if (\n      this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type) &&\n      !this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) &&\n      !this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._from)\n    ) {\n      // This is an \"import type\" statement, so exit early.\n      this.removeRemainingImport();\n      return true;\n    }\n\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) || this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star)) {\n      // We have a default import or namespace import, so there must be some\n      // non-type import.\n      this.removeRemainingImport();\n      return false;\n    }\n\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n      // This is a bare import, so we should proceed with the import.\n      return false;\n    }\n\n    let foundNonTypeImport = false;\n    let foundAnyNamedImport = false;\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n      // Check if any named imports are of the form \"foo\" or \"foo as bar\", with\n      // no leading \"type\".\n      if (\n        (!foundNonTypeImport && this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) ||\n        this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma)\n      ) {\n        this.tokens.removeToken();\n        if (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n          foundAnyNamedImport = true;\n        }\n        if (\n          this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) ||\n          this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) ||\n          this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma) ||\n          this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)\n        ) {\n          foundNonTypeImport = true;\n        }\n      }\n      this.tokens.removeToken();\n    }\n    if (this.keepUnusedImports) {\n      return false;\n    }\n    if (this.isTypeScriptTransformEnabled) {\n      return !foundNonTypeImport;\n    } else if (this.isFlowTransformEnabled) {\n      // In Flow, unlike TS, `import {} from 'foo';` preserves the import.\n      return foundAnyNamedImport && !foundNonTypeImport;\n    } else {\n      return false;\n    }\n  }\n\n   removeRemainingImport() {\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n      this.tokens.removeToken();\n    }\n  }\n\n   processIdentifier() {\n    const token = this.tokens.currentToken();\n    if (token.shadowsGlobal) {\n      return false;\n    }\n\n    if (token.identifierRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ObjectShorthand) {\n      return this.processObjectShorthand();\n    }\n\n    if (token.identifierRole !== _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.Access) {\n      return false;\n    }\n    const replacement = this.importProcessor.getIdentifierReplacement(\n      this.tokens.identifierNameForToken(token),\n    );\n    if (!replacement) {\n      return false;\n    }\n    // Tolerate any number of closing parens while looking for an opening paren\n    // that indicates a function call.\n    let possibleOpenParenIndex = this.tokens.currentIndex() + 1;\n    while (\n      possibleOpenParenIndex < this.tokens.tokens.length &&\n      this.tokens.tokens[possibleOpenParenIndex].type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR\n    ) {\n      possibleOpenParenIndex++;\n    }\n    // Avoid treating imported functions as methods of their `exports` object\n    // by using `(0, f)` when the identifier is in a paren expression. Else\n    // use `Function.prototype.call` when the identifier is a guaranteed\n    // function call. When using `call`, pass undefined as the context.\n    if (this.tokens.tokens[possibleOpenParenIndex].type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL) {\n      if (\n        this.tokens.tokenAtRelativeIndex(1).type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL &&\n        this.tokens.tokenAtRelativeIndex(-1).type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._new\n      ) {\n        this.tokens.replaceToken(`${replacement}.call(void 0, `);\n        // Remove the old paren.\n        this.tokens.removeToken();\n        // Balance out the new paren.\n        this.rootTransformer.processBalancedCode();\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n      } else {\n        // See here: http://2ality.com/2015/12/references.html\n        this.tokens.replaceToken(`(0, ${replacement})`);\n      }\n    } else {\n      this.tokens.replaceToken(replacement);\n    }\n    return true;\n  }\n\n  processObjectShorthand() {\n    const identifier = this.tokens.identifierName();\n    const replacement = this.importProcessor.getIdentifierReplacement(identifier);\n    if (!replacement) {\n      return false;\n    }\n    this.tokens.replaceToken(`${identifier}: ${replacement}`);\n    return true;\n  }\n\n  processExport() {\n    if (\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._enum) ||\n      this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._enum)\n    ) {\n      this.hadNamedExport = true;\n      // Let the TypeScript transform handle it.\n      return false;\n    }\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default)) {\n      if (this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._enum)) {\n        this.hadDefaultExport = true;\n        // Flow export default enums need some special handling, so handle them\n        // in that tranform rather than this one.\n        return false;\n      }\n      this.processExportDefault();\n      return true;\n    } else if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n      this.processExportBindings();\n      return true;\n    } else if (\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) &&\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._type)\n    ) {\n      // export type {a};\n      // export type {a as b};\n      // export type {a} from './b';\n      // export type * from './b';\n      // export type * as ns from './b';\n      this.tokens.removeInitialToken();\n      this.tokens.removeToken();\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n        while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n          this.tokens.removeToken();\n        }\n        this.tokens.removeToken();\n      } else {\n        // *\n        this.tokens.removeToken();\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._as)) {\n          // as\n          this.tokens.removeToken();\n          // ns\n          this.tokens.removeToken();\n        }\n      }\n      // Remove type re-export `... } from './T'`\n      if (\n        this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._from) &&\n        this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)\n      ) {\n        this.tokens.removeToken();\n        this.tokens.removeToken();\n        (0,_util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__.removeMaybeImportAttributes)(this.tokens);\n      }\n      return true;\n    }\n    this.hadNamedExport = true;\n    if (\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var) ||\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._let) ||\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const)\n    ) {\n      this.processExportVar();\n      return true;\n    } else if (\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function) ||\n      // export async function\n      this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function)\n    ) {\n      this.processExportFunction();\n      return true;\n    } else if (\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class) ||\n      this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._abstract, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class) ||\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.at)\n    ) {\n      this.processExportClass();\n      return true;\n    } else if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star)) {\n      this.processExportStar();\n      return true;\n    } else {\n      throw new Error(\"Unrecognized export syntax.\");\n    }\n  }\n\n   processAssignment() {\n    const index = this.tokens.currentIndex();\n    const identifierToken = this.tokens.tokens[index - 1];\n    // If the LHS is a type identifier, this must be a declaration like `let a: b = c;`,\n    // with `b` as the identifier, so nothing needs to be done in that case.\n    if (identifierToken.isType || identifierToken.type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) {\n      return false;\n    }\n    if (identifierToken.shadowsGlobal) {\n      return false;\n    }\n    if (index >= 2 && this.tokens.matches1AtIndex(index - 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n      return false;\n    }\n    if (index >= 2 && [_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._var, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._let, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._const].includes(this.tokens.tokens[index - 2].type)) {\n      // Declarations don't need an extra assignment. This doesn't avoid the\n      // assignment for comma-separated declarations, but it's still correct\n      // since the assignment is just redundant.\n      return false;\n    }\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(\n      this.tokens.identifierNameForToken(identifierToken),\n    );\n    if (!assignmentSnippet) {\n      return false;\n    }\n    this.tokens.copyToken();\n    this.tokens.appendCode(` ${assignmentSnippet} =`);\n    return true;\n  }\n\n  /**\n   * Process something like `a += 3`, where `a` might be an exported value.\n   */\n   processComplexAssignment() {\n    const index = this.tokens.currentIndex();\n    const identifierToken = this.tokens.tokens[index - 1];\n    if (identifierToken.type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) {\n      return false;\n    }\n    if (identifierToken.shadowsGlobal) {\n      return false;\n    }\n    if (index >= 2 && this.tokens.matches1AtIndex(index - 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n      return false;\n    }\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(\n      this.tokens.identifierNameForToken(identifierToken),\n    );\n    if (!assignmentSnippet) {\n      return false;\n    }\n    this.tokens.appendCode(` = ${assignmentSnippet}`);\n    this.tokens.copyToken();\n    return true;\n  }\n\n  /**\n   * Process something like `++a`, where `a` might be an exported value.\n   */\n   processPreIncDec() {\n    const index = this.tokens.currentIndex();\n    const identifierToken = this.tokens.tokens[index + 1];\n    if (identifierToken.type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) {\n      return false;\n    }\n    if (identifierToken.shadowsGlobal) {\n      return false;\n    }\n    // Ignore things like ++a.b and ++a[b] and ++a().b.\n    if (\n      index + 2 < this.tokens.tokens.length &&\n      (this.tokens.matches1AtIndex(index + 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot) ||\n        this.tokens.matches1AtIndex(index + 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL) ||\n        this.tokens.matches1AtIndex(index + 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL))\n    ) {\n      return false;\n    }\n    const identifierName = this.tokens.identifierNameForToken(identifierToken);\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(identifierName);\n    if (!assignmentSnippet) {\n      return false;\n    }\n    this.tokens.appendCode(`${assignmentSnippet} = `);\n    this.tokens.copyToken();\n    return true;\n  }\n\n  /**\n   * Process something like `a++`, where `a` might be an exported value.\n   * This starts at the `a`, not at the `++`.\n   */\n   processPostIncDec() {\n    const index = this.tokens.currentIndex();\n    const identifierToken = this.tokens.tokens[index];\n    const operatorToken = this.tokens.tokens[index + 1];\n    if (identifierToken.type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) {\n      return false;\n    }\n    if (identifierToken.shadowsGlobal) {\n      return false;\n    }\n    if (index >= 1 && this.tokens.matches1AtIndex(index - 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n      return false;\n    }\n    const identifierName = this.tokens.identifierNameForToken(identifierToken);\n    const assignmentSnippet = this.importProcessor.resolveExportBinding(identifierName);\n    if (!assignmentSnippet) {\n      return false;\n    }\n    const operatorCode = this.tokens.rawCodeForToken(operatorToken);\n    // We might also replace the identifier with something like exports.x, so\n    // do that replacement here as well.\n    const base = this.importProcessor.getIdentifierReplacement(identifierName) || identifierName;\n    if (operatorCode === \"++\") {\n      this.tokens.replaceToken(`(${base} = ${assignmentSnippet} = ${base} + 1, ${base} - 1)`);\n    } else if (operatorCode === \"--\") {\n      this.tokens.replaceToken(`(${base} = ${assignmentSnippet} = ${base} - 1, ${base} + 1)`);\n    } else {\n      throw new Error(`Unexpected operator: ${operatorCode}`);\n    }\n    this.tokens.removeToken();\n    return true;\n  }\n\n   processExportDefault() {\n    let exportedRuntimeValue = true;\n    if (\n      this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) ||\n      // export default async function\n      (this.tokens.matches5(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) &&\n        this.tokens.matchesContextualAtIndex(\n          this.tokens.currentIndex() + 2,\n          _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._async,\n        ))\n    ) {\n      this.tokens.removeInitialToken();\n      this.tokens.removeToken();\n      // Named function export case: change it to a top-level function\n      // declaration followed by exports statement.\n      const name = this.processNamedFunction();\n      this.tokens.appendCode(` exports.default = ${name};`);\n    } else if (\n      this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) ||\n      this.tokens.matches5(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._abstract, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._class, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) ||\n      this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.at)\n    ) {\n      this.tokens.removeInitialToken();\n      this.tokens.removeToken();\n      this.copyDecorators();\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._abstract)) {\n        this.tokens.removeToken();\n      }\n      const name = this.rootTransformer.processNamedClass();\n      this.tokens.appendCode(` exports.default = ${name};`);\n      // After this point, this is a plain \"export default E\" statement.\n    } else if (\n      (0,_util_shouldElideDefaultExport__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n        this.isTypeScriptTransformEnabled,\n        this.keepUnusedImports,\n        this.tokens,\n        this.declarationInfo,\n      )\n    ) {\n      // If the exported value is just an identifier and should be elided by TypeScript\n      // rules, then remove it entirely. It will always have the form `export default e`,\n      // where `e` is an identifier.\n      exportedRuntimeValue = false;\n      this.tokens.removeInitialToken();\n      this.tokens.removeToken();\n      this.tokens.removeToken();\n    } else if (this.reactHotLoaderTransformer) {\n      // We need to assign E to a variable. Change \"export default E\" to\n      // \"let _default; exports.default = _default = E\"\n      const defaultVarName = this.nameManager.claimFreeName(\"_default\");\n      this.tokens.replaceToken(`let ${defaultVarName}; exports.`);\n      this.tokens.copyToken();\n      this.tokens.appendCode(` = ${defaultVarName} =`);\n      this.reactHotLoaderTransformer.setExtractedDefaultExportName(defaultVarName);\n    } else {\n      // Change \"export default E\" to \"exports.default = E\"\n      this.tokens.replaceToken(\"exports.\");\n      this.tokens.copyToken();\n      this.tokens.appendCode(\" =\");\n    }\n    if (exportedRuntimeValue) {\n      this.hadDefaultExport = true;\n    }\n  }\n\n   copyDecorators() {\n    while (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.at)) {\n      this.tokens.copyToken();\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n        this.rootTransformer.processBalancedCode();\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n      } else {\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name);\n        while (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot)) {\n          this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dot);\n          this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name);\n        }\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL)) {\n          this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n          this.rootTransformer.processBalancedCode();\n          this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform a declaration like `export var`, `export let`, or `export const`.\n   */\n   processExportVar() {\n    if (this.isSimpleExportVar()) {\n      this.processSimpleExportVar();\n    } else {\n      this.processComplexExportVar();\n    }\n  }\n\n  /**\n   * Determine if the export is of the form:\n   * export var/let/const [varName] = [expr];\n   * In other words, determine if function name inference might apply.\n   */\n   isSimpleExportVar() {\n    let tokenIndex = this.tokens.currentIndex();\n    // export\n    tokenIndex++;\n    // var/let/const\n    tokenIndex++;\n    if (!this.tokens.matches1AtIndex(tokenIndex, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n      return false;\n    }\n    tokenIndex++;\n    while (tokenIndex < this.tokens.tokens.length && this.tokens.tokens[tokenIndex].isType) {\n      tokenIndex++;\n    }\n    if (!this.tokens.matches1AtIndex(tokenIndex, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Transform an `export var` declaration initializing a single variable.\n   *\n   * For example, this:\n   * export const f = () => {};\n   * becomes this:\n   * const f = () => {}; exports.f = f;\n   *\n   * The variable is unused (e.g. exports.f has the true value of the export).\n   * We need to produce an assignment of this form so that the function will\n   * have an inferred name of \"f\", which wouldn't happen in the more general\n   * case below.\n   */\n   processSimpleExportVar() {\n    // export\n    this.tokens.removeInitialToken();\n    // var/let/const\n    this.tokens.copyToken();\n    const varName = this.tokens.identifierName();\n    // x: number  ->  x\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n      this.rootTransformer.processToken();\n    }\n    const endIndex = this.tokens.currentToken().rhsEndIndex;\n    if (endIndex == null) {\n      throw new Error(\"Expected = token with an end index.\");\n    }\n    while (this.tokens.currentIndex() < endIndex) {\n      this.rootTransformer.processToken();\n    }\n    this.tokens.appendCode(`; exports.${varName} = ${varName}`);\n  }\n\n  /**\n   * Transform normal declaration exports, including handling destructuring.\n   * For example, this:\n   * export const {x: [a = 2, b], c} = d;\n   * becomes this:\n   * ({x: [exports.a = 2, exports.b], c: exports.c} = d;)\n   */\n   processComplexExportVar() {\n    this.tokens.removeInitialToken();\n    this.tokens.removeToken();\n    const needsParens = this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n    if (needsParens) {\n      this.tokens.appendCode(\"(\");\n    }\n\n    let depth = 0;\n    while (true) {\n      if (\n        this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) ||\n        this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.dollarBraceL) ||\n        this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketL)\n      ) {\n        depth++;\n        this.tokens.copyToken();\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR) || this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.bracketR)) {\n        depth--;\n        this.tokens.copyToken();\n      } else if (\n        depth === 0 &&\n        !this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name) &&\n        !this.tokens.currentToken().isType\n      ) {\n        break;\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n        // Default values might have assignments in the RHS that we want to ignore, so skip past\n        // them.\n        const endIndex = this.tokens.currentToken().rhsEndIndex;\n        if (endIndex == null) {\n          throw new Error(\"Expected = token with an end index.\");\n        }\n        while (this.tokens.currentIndex() < endIndex) {\n          this.rootTransformer.processToken();\n        }\n      } else {\n        const token = this.tokens.currentToken();\n        if ((0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isDeclaration)(token)) {\n          const name = this.tokens.identifierName();\n          let replacement = this.importProcessor.getIdentifierReplacement(name);\n          if (replacement === null) {\n            throw new Error(`Expected a replacement for ${name} in \\`export var\\` syntax.`);\n          }\n          if ((0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isObjectShorthandDeclaration)(token)) {\n            replacement = `${name}: ${replacement}`;\n          }\n          this.tokens.replaceToken(replacement);\n        } else {\n          this.rootTransformer.processToken();\n        }\n      }\n    }\n\n    if (needsParens) {\n      // Seek to the end of the RHS.\n      const endIndex = this.tokens.currentToken().rhsEndIndex;\n      if (endIndex == null) {\n        throw new Error(\"Expected = token with an end index.\");\n      }\n      while (this.tokens.currentIndex() < endIndex) {\n        this.rootTransformer.processToken();\n      }\n      this.tokens.appendCode(\")\");\n    }\n  }\n\n  /**\n   * Transform this:\n   * export function foo() {}\n   * into this:\n   * function foo() {} exports.foo = foo;\n   */\n   processExportFunction() {\n    this.tokens.replaceToken(\"\");\n    const name = this.processNamedFunction();\n    this.tokens.appendCode(` exports.${name} = ${name};`);\n  }\n\n  /**\n   * Skip past a function with a name and return that name.\n   */\n   processNamedFunction() {\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function)) {\n      this.tokens.copyToken();\n    } else if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._function)) {\n      if (!this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._async)) {\n        throw new Error(\"Expected async keyword in function export.\");\n      }\n      this.tokens.copyToken();\n      this.tokens.copyToken();\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.star)) {\n      this.tokens.copyToken();\n    }\n    if (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.name)) {\n      throw new Error(\"Expected identifier for exported function name.\");\n    }\n    const name = this.tokens.identifierName();\n    this.tokens.copyToken();\n    if (this.tokens.currentToken().isType) {\n      this.tokens.removeInitialToken();\n      while (this.tokens.currentToken().isType) {\n        this.tokens.removeToken();\n      }\n    }\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenL);\n    this.rootTransformer.processBalancedCode();\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.parenR);\n    this.rootTransformer.processPossibleTypeRange();\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL);\n    this.rootTransformer.processBalancedCode();\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR);\n    return name;\n  }\n\n  /**\n   * Transform this:\n   * export class A {}\n   * into this:\n   * class A {} exports.A = A;\n   */\n   processExportClass() {\n    this.tokens.removeInitialToken();\n    this.copyDecorators();\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType._abstract)) {\n      this.tokens.removeToken();\n    }\n    const name = this.rootTransformer.processNamedClass();\n    this.tokens.appendCode(` exports.${name} = ${name};`);\n  }\n\n  /**\n   * Transform this:\n   * export {a, b as c};\n   * into this:\n   * exports.a = a; exports.c = b;\n   *\n   * OR\n   *\n   * Transform this:\n   * export {a, b as c} from './foo';\n   * into the pre-generated Object.defineProperty code from the ImportProcessor.\n   *\n   * For the first case, if the TypeScript transform is enabled, we need to skip\n   * exports that are only defined as types.\n   */\n   processExportBindings() {\n    this.tokens.removeInitialToken();\n    this.tokens.removeToken();\n\n    const isReExport = (0,_util_isExportFrom__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.tokens);\n\n    const exportStatements = [];\n    while (true) {\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n        this.tokens.removeToken();\n        break;\n      }\n\n      const specifierInfo = (0,_util_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.tokens);\n\n      while (this.tokens.currentIndex() < specifierInfo.endIndex) {\n        this.tokens.removeToken();\n      }\n\n      const shouldRemoveExport =\n        specifierInfo.isType ||\n        (!isReExport && this.shouldElideExportedIdentifier(specifierInfo.leftName));\n      if (!shouldRemoveExport) {\n        const exportedName = specifierInfo.rightName;\n        if (exportedName === \"default\") {\n          this.hadDefaultExport = true;\n        } else {\n          this.hadNamedExport = true;\n        }\n        const localName = specifierInfo.leftName;\n        const newLocalName = this.importProcessor.getIdentifierReplacement(localName);\n        exportStatements.push(`exports.${exportedName} = ${newLocalName || localName};`);\n      }\n\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n        this.tokens.removeToken();\n        break;\n      }\n      if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n        this.tokens.removeToken();\n        this.tokens.removeToken();\n        break;\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.comma)) {\n        this.tokens.removeToken();\n      } else {\n        throw new Error(`Unexpected token: ${JSON.stringify(this.tokens.currentToken())}`);\n      }\n    }\n\n    if (this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_1__.ContextualKeyword._from)) {\n      // This is an export...from, so throw away the normal named export code\n      // and use the Object.defineProperty code from ImportProcessor.\n      this.tokens.removeToken();\n      const path = this.tokens.stringValue();\n      this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));\n      (0,_util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__.removeMaybeImportAttributes)(this.tokens);\n    } else {\n      // This is a normal named export, so use that.\n      this.tokens.appendCode(exportStatements.join(\" \"));\n    }\n\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.semi)) {\n      this.tokens.removeToken();\n    }\n  }\n\n   processExportStar() {\n    this.tokens.removeInitialToken();\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.string)) {\n      this.tokens.removeToken();\n    }\n    const path = this.tokens.stringValue();\n    this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));\n    (0,_util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__.removeMaybeImportAttributes)(this.tokens);\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.semi)) {\n      this.tokens.removeToken();\n    }\n  }\n\n   shouldElideExportedIdentifier(name) {\n    return (\n      this.isTypeScriptTransformEnabled &&\n      !this.keepUnusedImports &&\n      !this.declarationInfo.valueDeclarations.has(name)\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9DSlNJbXBvcnRUcmFuc2Zvcm1lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUdnRztBQUNqQztBQUNMOztBQUVBO0FBSXRCO0FBQzRDO0FBQ2hDO0FBQ2dDO0FBQ1I7OztBQUdoQzs7QUFFeEM7QUFDQTtBQUNBO0FBQ2UsbUNBQW1DLG9EQUFXO0FBQzdELGFBQWE7QUFDYixjQUFjO0FBQ2QsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVDQUF1QyxxQkFBcUIsdUNBQXVDLCtCQUErQixtQ0FBbUMsMkRBQTJELHVFQUF1RSwrRUFBK0UsaUVBQWlFLHFEQUFxRCxtREFBbUQsMkNBQTJDLGlEQUFpRCxrREFBa0Q7QUFDenJCO0FBQ0EsUUFBUSxvRUFBa0I7QUFDMUIsUUFBUSw0RUFBc0I7QUFDOUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsK0RBQStELFlBQVksRUFBRTtBQUM3RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwrQ0FBK0M7QUFDL0MsNkJBQTZCLDhEQUFFLFVBQVUsOERBQUUsT0FBTyw4REFBRTtBQUNwRDtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4REFBRSxVQUFVLDhEQUFFO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4REFBRTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsOERBQUUsT0FBTyw4REFBRTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFFLCtCQUErQiw4REFBRTtBQUNoRTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0E7QUFDQSw2QkFBNkIsOERBQUU7QUFDL0I7QUFDQTtBQUNBLDZCQUE2Qiw4REFBRTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sbUVBQWlCO0FBQ3ZCLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsS0FBSztBQUN2QjtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFFLFVBQVUsOERBQUU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDJEQUEyRDtBQUN4RSwrREFBK0QsZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELDhEQUFFO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4RkFBMkI7QUFDL0IsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MseUVBQWlCO0FBQ3JELG1FQUFtRSw4REFBRTtBQUNyRSw0RUFBNEUseUVBQWlCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLDhEQUFFLCtCQUErQiw4REFBRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDZCQUE2Qiw4REFBRTtBQUMvQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlDQUFpQyw4REFBRTtBQUNuQztBQUNBO0FBQ0E7QUFDQSxxREFBcUQsOERBQUU7QUFDdkQsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0E7QUFDQSxrQ0FBa0MsOERBQUU7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDhEQUFFLE9BQU8sOERBQUU7QUFDMUMsK0JBQStCLDhEQUFFLE9BQU8sOERBQUU7QUFDMUMsK0JBQStCLDhEQUFFLE9BQU8sOERBQUUsT0FBTyw4REFBRSxPQUFPLDhEQUFFO0FBQzVELCtCQUErQiw4REFBRSxPQUFPLDhEQUFFLE9BQU8sOERBQUUsT0FBTyw4REFBRTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHdDQUF3QyxXQUFXO0FBQ25EO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlDQUFpQyw4REFBRTtBQUNuQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUMsNkRBQWM7QUFDL0M7QUFDQTs7QUFFQSxpQ0FBaUMsNkRBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsOERBQUU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsOERBQUU7QUFDOUQ7QUFDQSxxREFBcUQsOERBQUU7QUFDdkQsc0RBQXNELDhEQUFFO0FBQ3hEO0FBQ0Esb0NBQW9DLFlBQVk7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsOERBQUU7QUFDeEMsUUFBUTtBQUNSO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQ7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFdBQVcsSUFBSSxZQUFZO0FBQzNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQiw4REFBRSxVQUFVLDhEQUFFO0FBQ3pDLDJCQUEyQiw4REFBRSxVQUFVLDhEQUFFLFNBQVMsOERBQUU7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4REFBRSxVQUFVLDhEQUFFO0FBQzNDLCtCQUErQiw4REFBRSxVQUFVLDhEQUFFLFdBQVcsOERBQUU7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDhCQUE4Qiw4REFBRSxVQUFVLDhEQUFFO0FBQ2xEO0FBQ0E7QUFDQSxNQUFNO0FBQ04sMkJBQTJCLDhEQUFFLFVBQVUsOERBQUU7QUFDekMsMkVBQTJFLHlFQUFpQjtBQUM1RjtBQUNBLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsc0JBQXNCLEdBQUc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsOERBQUU7QUFDakMscUNBQXFDLDhEQUFFO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsaUNBQWlDLDhEQUFFO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBLHNDQUFzQyx5RUFBaUI7QUFDdkQsb0VBQW9FLDhEQUFFO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOEZBQTJCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOERBQUUsVUFBVSw4REFBRTtBQUN6QywyQkFBMkIsOERBQUUsVUFBVSw4REFBRTtBQUN6QywyQkFBMkIsOERBQUUsVUFBVSw4REFBRTtBQUN6QztBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sMkJBQTJCLDhEQUFFLFVBQVUsOERBQUU7QUFDekM7QUFDQSwyQkFBMkIsOERBQUUsVUFBVSw4REFBRSxPQUFPLDhEQUFFO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTiwyQkFBMkIsOERBQUUsVUFBVSw4REFBRTtBQUN6QywyQkFBMkIsOERBQUUsVUFBVSw4REFBRSxZQUFZLDhEQUFFO0FBQ3ZELDJCQUEyQiw4REFBRSxVQUFVLDhEQUFFO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLE1BQU0sOEJBQThCLDhEQUFFLFVBQVUsOERBQUU7QUFDbEQ7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGO0FBQ3RGO0FBQ0EsMkRBQTJELDhEQUFFO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsOERBQUU7QUFDL0Q7QUFDQTtBQUNBLHVCQUF1Qiw4REFBRSxPQUFPLDhEQUFFLE9BQU8sOERBQUU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG1CQUFtQjtBQUNsRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw4REFBRTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELDhEQUFFO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0JBQWtCO0FBQ25EO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsOERBQUU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw4REFBRTtBQUNoRCwrQ0FBK0MsOERBQUU7QUFDakQsK0NBQStDLDhEQUFFO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsbUJBQW1CO0FBQ2pEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDhEQUFFO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsOERBQUU7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLE1BQU0sSUFBSSxtQkFBbUIsSUFBSSxNQUFNLE9BQU8sTUFBTTtBQUN2RixNQUFNO0FBQ04sbUNBQW1DLE1BQU0sSUFBSSxtQkFBbUIsSUFBSSxNQUFNLE9BQU8sTUFBTTtBQUN2RixNQUFNO0FBQ04sOENBQThDLGFBQWE7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDhEQUFFLFVBQVUsOERBQUUsV0FBVyw4REFBRSxZQUFZLDhEQUFFO0FBQ3BFO0FBQ0EsNEJBQTRCLDhEQUFFLFVBQVUsOERBQUUsV0FBVyw4REFBRSxPQUFPLDhEQUFFLFlBQVksOERBQUU7QUFDOUU7QUFDQTtBQUNBLFVBQVUseUVBQWlCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELE1BQU07QUFDekQsTUFBTTtBQUNOLDJCQUEyQiw4REFBRSxVQUFVLDhEQUFFLFdBQVcsOERBQUUsU0FBUyw4REFBRTtBQUNqRSwyQkFBMkIsOERBQUUsVUFBVSw4REFBRSxXQUFXLDhEQUFFLFlBQVksOERBQUUsU0FBUyw4REFBRTtBQUMvRSwyQkFBMkIsOERBQUUsVUFBVSw4REFBRSxXQUFXLDhEQUFFO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDhEQUFFO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxNQUFNO0FBQ3pEO0FBQ0EsTUFBTTtBQUNOLE1BQU0sMEVBQXdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0Esc0NBQXNDLGlCQUFpQjtBQUN2RDtBQUNBLG1DQUFtQyxnQkFBZ0I7QUFDbkQ7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLDhEQUFFO0FBQ2xDO0FBQ0EsK0JBQStCLDhEQUFFO0FBQ2pDLHNDQUFzQyw4REFBRTtBQUN4QztBQUNBLHNDQUFzQyw4REFBRTtBQUN4QyxRQUFRO0FBQ1Isc0NBQXNDLDhEQUFFO0FBQ3hDLG9DQUFvQyw4REFBRTtBQUN0Qyx3Q0FBd0MsOERBQUU7QUFDMUMsd0NBQXdDLDhEQUFFO0FBQzFDO0FBQ0EsaUNBQWlDLDhEQUFFO0FBQ25DLHdDQUF3Qyw4REFBRTtBQUMxQztBQUNBLHdDQUF3Qyw4REFBRTtBQUMxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsOERBQUU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELDhEQUFFO0FBQ25EO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw4REFBRTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsVUFBVSxTQUFTLElBQUksUUFBUTtBQUM3RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0JBQWtCO0FBQ3JDO0FBQ0EsT0FBTyw2Q0FBNkMsSUFBSTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyw4REFBRTtBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFFO0FBQy9CLDZCQUE2Qiw4REFBRTtBQUMvQiw2QkFBNkIsOERBQUU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4QkFBOEIsOERBQUUsaUNBQWlDLDhEQUFFO0FBQzNFO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSw4QkFBOEIsOERBQUU7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4QkFBOEIsOERBQUU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsWUFBWSxnRUFBYTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsTUFBTTtBQUNoRTtBQUNBLGNBQWMsK0VBQTRCO0FBQzFDLDZCQUE2QixLQUFLLElBQUksWUFBWTtBQUNsRDtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxNQUFNLElBQUksTUFBTTtBQUN2RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4REFBRTtBQUMvQjtBQUNBLE1BQU0sOEJBQThCLDhEQUFFLE9BQU8sOERBQUU7QUFDL0MseUNBQXlDLHlFQUFpQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0E7QUFDQSw4QkFBOEIsOERBQUU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsOERBQUU7QUFDcEM7QUFDQSxrQ0FBa0MsOERBQUU7QUFDcEM7QUFDQSxrQ0FBa0MsOERBQUU7QUFDcEM7QUFDQSxrQ0FBa0MsOERBQUU7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4REFBRTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsTUFBTSxJQUFJLE1BQU07QUFDdkQ7O0FBRUE7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsV0FBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1Qiw4REFBWTs7QUFFbkM7QUFDQTtBQUNBLCtCQUErQiw4REFBRTtBQUNqQztBQUNBO0FBQ0E7O0FBRUEsNEJBQTRCLDhFQUE0Qjs7QUFFeEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGNBQWMsSUFBSSwyQkFBMkI7QUFDdEY7O0FBRUEsK0JBQStCLDhEQUFFO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw4REFBRSxRQUFRLDhEQUFFO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOEJBQThCLDhEQUFFO0FBQ3hDO0FBQ0EsUUFBUTtBQUNSLDZDQUE2QywyQ0FBMkM7QUFDeEY7QUFDQTs7QUFFQSxzQ0FBc0MseUVBQWlCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDhGQUEyQjtBQUNqQyxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLDZCQUE2Qiw4REFBRTtBQUMvQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlDQUFpQyw4REFBRTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksOEZBQTJCO0FBQy9CLDZCQUE2Qiw4REFBRTtBQUMvQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS90cmFuc2Zvcm1lcnMvQ0pTSW1wb3J0VHJhbnNmb3JtZXIuanM/ODJkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5pbXBvcnQge0lkZW50aWZpZXJSb2xlLCBpc0RlY2xhcmF0aW9uLCBpc09iamVjdFNob3J0aGFuZERlY2xhcmF0aW9ufSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplclwiO1xuaW1wb3J0IHtDb250ZXh0dWFsS2V5d29yZH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIva2V5d29yZHNcIjtcbmltcG9ydCB7VG9rZW5UeXBlIGFzIHR0fSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplci90eXBlc1wiO1xuXG5pbXBvcnQgZWxpZGVJbXBvcnRFcXVhbHMgZnJvbSBcIi4uL3V0aWwvZWxpZGVJbXBvcnRFcXVhbHNcIjtcbmltcG9ydCBnZXREZWNsYXJhdGlvbkluZm8sIHtcblxuICBFTVBUWV9ERUNMQVJBVElPTl9JTkZPLFxufSBmcm9tIFwiLi4vdXRpbC9nZXREZWNsYXJhdGlvbkluZm9cIjtcbmltcG9ydCBnZXRJbXBvcnRFeHBvcnRTcGVjaWZpZXJJbmZvIGZyb20gXCIuLi91dGlsL2dldEltcG9ydEV4cG9ydFNwZWNpZmllckluZm9cIjtcbmltcG9ydCBpc0V4cG9ydEZyb20gZnJvbSBcIi4uL3V0aWwvaXNFeHBvcnRGcm9tXCI7XG5pbXBvcnQge3JlbW92ZU1heWJlSW1wb3J0QXR0cmlidXRlc30gZnJvbSBcIi4uL3V0aWwvcmVtb3ZlTWF5YmVJbXBvcnRBdHRyaWJ1dGVzXCI7XG5pbXBvcnQgc2hvdWxkRWxpZGVEZWZhdWx0RXhwb3J0IGZyb20gXCIuLi91dGlsL3Nob3VsZEVsaWRlRGVmYXVsdEV4cG9ydFwiO1xuXG5cbmltcG9ydCBUcmFuc2Zvcm1lciBmcm9tIFwiLi9UcmFuc2Zvcm1lclwiO1xuXG4vKipcbiAqIENsYXNzIGZvciBlZGl0aW5nIGltcG9ydCBzdGF0ZW1lbnRzIHdoZW4gd2UgYXJlIHRyYW5zZm9ybWluZyB0byBjb21tb25qcy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ0pTSW1wb3J0VHJhbnNmb3JtZXIgZXh0ZW5kcyBUcmFuc2Zvcm1lciB7XG4gICBfX2luaXQoKSB7dGhpcy5oYWRFeHBvcnQgPSBmYWxzZX1cbiAgIF9faW5pdDIoKSB7dGhpcy5oYWROYW1lZEV4cG9ydCA9IGZhbHNlfVxuICAgX19pbml0MygpIHt0aGlzLmhhZERlZmF1bHRFeHBvcnQgPSBmYWxzZX1cbiAgXG5cbiAgY29uc3RydWN0b3IoXG4gICAgIHJvb3RUcmFuc2Zvcm1lcixcbiAgICAgdG9rZW5zLFxuICAgICBpbXBvcnRQcm9jZXNzb3IsXG4gICAgIG5hbWVNYW5hZ2VyLFxuICAgICBoZWxwZXJNYW5hZ2VyLFxuICAgICByZWFjdEhvdExvYWRlclRyYW5zZm9ybWVyLFxuICAgICBlbmFibGVMZWdhY3lCYWJlbDVNb2R1bGVJbnRlcm9wLFxuICAgICBlbmFibGVMZWdhY3lUeXBlU2NyaXB0TW9kdWxlSW50ZXJvcCxcbiAgICAgaXNUeXBlU2NyaXB0VHJhbnNmb3JtRW5hYmxlZCxcbiAgICAgaXNGbG93VHJhbnNmb3JtRW5hYmxlZCxcbiAgICAgcHJlc2VydmVEeW5hbWljSW1wb3J0LFxuICAgICBrZWVwVW51c2VkSW1wb3J0cyxcbiAgKSB7XG4gICAgc3VwZXIoKTt0aGlzLnJvb3RUcmFuc2Zvcm1lciA9IHJvb3RUcmFuc2Zvcm1lcjt0aGlzLnRva2VucyA9IHRva2Vuczt0aGlzLmltcG9ydFByb2Nlc3NvciA9IGltcG9ydFByb2Nlc3Nvcjt0aGlzLm5hbWVNYW5hZ2VyID0gbmFtZU1hbmFnZXI7dGhpcy5oZWxwZXJNYW5hZ2VyID0gaGVscGVyTWFuYWdlcjt0aGlzLnJlYWN0SG90TG9hZGVyVHJhbnNmb3JtZXIgPSByZWFjdEhvdExvYWRlclRyYW5zZm9ybWVyO3RoaXMuZW5hYmxlTGVnYWN5QmFiZWw1TW9kdWxlSW50ZXJvcCA9IGVuYWJsZUxlZ2FjeUJhYmVsNU1vZHVsZUludGVyb3A7dGhpcy5lbmFibGVMZWdhY3lUeXBlU2NyaXB0TW9kdWxlSW50ZXJvcCA9IGVuYWJsZUxlZ2FjeVR5cGVTY3JpcHRNb2R1bGVJbnRlcm9wO3RoaXMuaXNUeXBlU2NyaXB0VHJhbnNmb3JtRW5hYmxlZCA9IGlzVHlwZVNjcmlwdFRyYW5zZm9ybUVuYWJsZWQ7dGhpcy5pc0Zsb3dUcmFuc2Zvcm1FbmFibGVkID0gaXNGbG93VHJhbnNmb3JtRW5hYmxlZDt0aGlzLnByZXNlcnZlRHluYW1pY0ltcG9ydCA9IHByZXNlcnZlRHluYW1pY0ltcG9ydDt0aGlzLmtlZXBVbnVzZWRJbXBvcnRzID0ga2VlcFVudXNlZEltcG9ydHM7Q0pTSW1wb3J0VHJhbnNmb3JtZXIucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpO0NKU0ltcG9ydFRyYW5zZm9ybWVyLnByb3RvdHlwZS5fX2luaXQyLmNhbGwodGhpcyk7Q0pTSW1wb3J0VHJhbnNmb3JtZXIucHJvdG90eXBlLl9faW5pdDMuY2FsbCh0aGlzKTs7XG4gICAgdGhpcy5kZWNsYXJhdGlvbkluZm8gPSBpc1R5cGVTY3JpcHRUcmFuc2Zvcm1FbmFibGVkXG4gICAgICA/IGdldERlY2xhcmF0aW9uSW5mbyh0b2tlbnMpXG4gICAgICA6IEVNUFRZX0RFQ0xBUkFUSU9OX0lORk87XG4gIH1cblxuICBnZXRQcmVmaXhDb2RlKCkge1xuICAgIGxldCBwcmVmaXggPSBcIlwiO1xuICAgIGlmICh0aGlzLmhhZEV4cG9ydCkge1xuICAgICAgcHJlZml4ICs9ICdPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHt2YWx1ZTogdHJ1ZX0pOyc7XG4gICAgfVxuICAgIHJldHVybiBwcmVmaXg7XG4gIH1cblxuICBnZXRTdWZmaXhDb2RlKCkge1xuICAgIGlmICh0aGlzLmVuYWJsZUxlZ2FjeUJhYmVsNU1vZHVsZUludGVyb3AgJiYgdGhpcy5oYWREZWZhdWx0RXhwb3J0ICYmICF0aGlzLmhhZE5hbWVkRXhwb3J0KSB7XG4gICAgICByZXR1cm4gXCJcXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcXG5cIjtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cblxuICBwcm9jZXNzKCkge1xuICAgIC8vIFR5cGVTY3JpcHQgYGltcG9ydCBmb28gPSByZXF1aXJlKCdmb28nKTtgIHNob3VsZCBhbHdheXMganVzdCBiZSB0cmFuc2xhdGVkIHRvIHBsYWluIHJlcXVpcmUuXG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMzKHR0Ll9pbXBvcnQsIHR0Lm5hbWUsIHR0LmVxKSkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc0ltcG9ydEVxdWFscygpO1xuICAgIH1cbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuX2ltcG9ydCkpIHtcbiAgICAgIHRoaXMucHJvY2Vzc0ltcG9ydCgpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5fZXhwb3J0LCB0dC5lcSkpIHtcbiAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihcIm1vZHVsZS5leHBvcnRzXCIpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5fZXhwb3J0KSAmJiAhdGhpcy50b2tlbnMuY3VycmVudFRva2VuKCkuaXNUeXBlKSB7XG4gICAgICB0aGlzLmhhZEV4cG9ydCA9IHRydWU7XG4gICAgICByZXR1cm4gdGhpcy5wcm9jZXNzRXhwb3J0KCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5uYW1lLCB0dC5wb3N0SW5jRGVjKSkge1xuICAgICAgLy8gRmFsbCB0aHJvdWdoIHRvIG5vcm1hbCBpZGVudGlmaWVyIG1hdGNoaW5nIGlmIHRoaXMgZG9lc24ndCBhcHBseS5cbiAgICAgIGlmICh0aGlzLnByb2Nlc3NQb3N0SW5jRGVjKCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5uYW1lKSB8fCB0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5qc3hOYW1lKSkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc0lkZW50aWZpZXIoKTtcbiAgICB9XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmVxKSkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc0Fzc2lnbm1lbnQoKTtcbiAgICB9XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmFzc2lnbikpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NDb21wbGV4QXNzaWdubWVudCgpO1xuICAgIH1cbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQucHJlSW5jRGVjKSkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1ByZUluY0RlYygpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAgcHJvY2Vzc0ltcG9ydEVxdWFscygpIHtcbiAgICBjb25zdCBpbXBvcnROYW1lID0gdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWVBdEluZGV4KHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpICsgMSk7XG4gICAgaWYgKHRoaXMuaW1wb3J0UHJvY2Vzc29yLnNob3VsZEF1dG9tYXRpY2FsbHlFbGlkZUltcG9ydGVkTmFtZShpbXBvcnROYW1lKSkge1xuICAgICAgLy8gSWYgdGhpcyBuYW1lIGlzIG9ubHkgdXNlZCBhcyBhIHR5cGUsIGVsaWRlIHRoZSB3aG9sZSBpbXBvcnQuXG4gICAgICBlbGlkZUltcG9ydEVxdWFscyh0aGlzLnRva2Vucyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE90aGVyd2lzZSwgc3dpdGNoIGBpbXBvcnRgIHRvIGBjb25zdGAuXG4gICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oXCJjb25zdFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvKipcbiAgICogVHJhbnNmb3JtIHRoaXM6XG4gICAqIGltcG9ydCBmb28sIHtiYXJ9IGZyb20gJ2Jheic7XG4gICAqIGludG9cbiAgICogdmFyIF9iYXogPSByZXF1aXJlKCdiYXonKTsgdmFyIF9iYXoyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmF6KTtcbiAgICpcbiAgICogVGhlIGltcG9ydCBjb2RlIHdhcyBhbHJlYWR5IGdlbmVyYXRlZCBpbiB0aGUgaW1wb3J0IHByZXByb2Nlc3Npbmcgc3RlcCwgc29cbiAgICogd2UganVzdCBuZWVkIHRvIGxvb2sgaXQgdXAuXG4gICAqL1xuICAgcHJvY2Vzc0ltcG9ydCgpIHtcbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczIodHQuX2ltcG9ydCwgdHQucGFyZW5MKSkge1xuICAgICAgaWYgKHRoaXMucHJlc2VydmVEeW5hbWljSW1wb3J0KSB7XG4gICAgICAgIC8vIEJhaWwgb3V0LCBvbmx5IG1ha2luZyBwcm9ncmVzcyBmb3IgdGhpcyBvbmUgdG9rZW4uXG4gICAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCByZXF1aXJlV3JhcHBlciA9IHRoaXMuZW5hYmxlTGVnYWN5VHlwZVNjcmlwdE1vZHVsZUludGVyb3BcbiAgICAgICAgPyBcIlwiXG4gICAgICAgIDogYCR7dGhpcy5oZWxwZXJNYW5hZ2VyLmdldEhlbHBlck5hbWUoXCJpbnRlcm9wUmVxdWlyZVdpbGRjYXJkXCIpfShgO1xuICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+ICR7cmVxdWlyZVdyYXBwZXJ9cmVxdWlyZWApO1xuICAgICAgY29uc3QgY29udGV4dElkID0gdGhpcy50b2tlbnMuY3VycmVudFRva2VuKCkuY29udGV4dElkO1xuICAgICAgaWYgKGNvbnRleHRJZCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGNvbnRleHQgSUQgb24gZHluYW1pYyBpbXBvcnQgaW52b2NhdGlvbi5cIik7XG4gICAgICB9XG4gICAgICB0aGlzLnRva2Vucy5jb3B5VG9rZW4oKTtcbiAgICAgIHdoaWxlICghdGhpcy50b2tlbnMubWF0Y2hlc0NvbnRleHRJZEFuZExhYmVsKHR0LnBhcmVuUiwgY29udGV4dElkKSkge1xuICAgICAgICB0aGlzLnJvb3RUcmFuc2Zvcm1lci5wcm9jZXNzVG9rZW4oKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihyZXF1aXJlV3JhcHBlciA/IFwiKSkpXCIgOiBcIikpXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHNob3VsZEVsaWRlSW1wb3J0ID0gdGhpcy5yZW1vdmVJbXBvcnRBbmREZXRlY3RJZlNob3VsZEVsaWRlKCk7XG4gICAgaWYgKHNob3VsZEVsaWRlSW1wb3J0KSB7XG4gICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBwYXRoID0gdGhpcy50b2tlbnMuc3RyaW5nVmFsdWUoKTtcbiAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlblRyaW1taW5nTGVmdFdoaXRlc3BhY2UodGhpcy5pbXBvcnRQcm9jZXNzb3IuY2xhaW1JbXBvcnRDb2RlKHBhdGgpKTtcbiAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUodGhpcy5pbXBvcnRQcm9jZXNzb3IuY2xhaW1JbXBvcnRDb2RlKHBhdGgpKTtcbiAgICB9XG4gICAgcmVtb3ZlTWF5YmVJbXBvcnRBdHRyaWJ1dGVzKHRoaXMudG9rZW5zKTtcbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuc2VtaSkpIHtcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEVyYXNlIHRoaXMgaW1wb3J0IChzaW5jZSBhbnkgQ0pTIG91dHB1dCB3b3VsZCBiZSBjb21wbGV0ZWx5IGRpZmZlcmVudCksIGFuZFxuICAgKiByZXR1cm4gdHJ1ZSBpZiB0aGlzIGltcG9ydCBpcyBzaG91bGQgYmUgZWxpZGVkIGR1ZSB0byBiZWluZyBhIHR5cGUtb25seVxuICAgKiBpbXBvcnQuIFN1Y2ggaW1wb3J0cyB3aWxsIG5vdCBiZSBlbWl0dGVkIGF0IGFsbCB0byBhdm9pZCBzaWRlIGVmZmVjdHMuXG4gICAqXG4gICAqIEltcG9ydCBlbGlzaW9uIG9ubHkgaGFwcGVucyB3aXRoIHRoZSBUeXBlU2NyaXB0IG9yIEZsb3cgdHJhbnNmb3JtcyBlbmFibGVkLlxuICAgKlxuICAgKiBUT0RPOiBUaGlzIGZ1bmN0aW9uIGhhcyBzb21lIGF3a3dhcmQgb3ZlcmxhcCB3aXRoXG4gICAqICBDSlNJbXBvcnRQcm9jZXNzb3IucHJ1bmVUeXBlT25seUltcG9ydHMgLCBhbmQgdGhlIHR3byBzaG91bGQgYmUgdW5pZmllZC5cbiAgICogIFRoYXQgZnVuY3Rpb24gaGFuZGxlcyBUeXBlU2NyaXB0IGltcGxpY2l0IGltcG9ydCBuYW1lIGVsaXNpb24sIGFuZCByZW1vdmVzXG4gICAqICBhbiBpbXBvcnQgaWYgYWxsIHR5cGljYWwgaW1wb3J0ZWQgbmFtZXMgKHdpdGhvdXQgYHR5cGVgKSBhcmUgcmVtb3ZlZCBkdWVcbiAgICogIHRvIGJlaW5nIHR5cGUtb25seSBpbXBvcnRzLiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgRmxvdyBpbXBvcnQgcmVtb3ZhbCBhbmRcbiAgICogIHByb3Blcmx5IGRpc3Rpbmd1aXNoZXMgYGltcG9ydCAnZm9vJ2AgZnJvbSBgaW1wb3J0IHt9IGZyb20gJ2ZvbydgIGZvciBUU1xuICAgKiAgcHVycG9zZXMuXG4gICAqXG4gICAqIFRoZSBwb3NpdGlvbiBzaG91bGQgZW5kIGF0IHRoZSBpbXBvcnQgc3RyaW5nLlxuICAgKi9cbiAgIHJlbW92ZUltcG9ydEFuZERldGVjdElmU2hvdWxkRWxpZGUoKSB7XG4gICAgdGhpcy50b2tlbnMucmVtb3ZlSW5pdGlhbFRva2VuKCk7XG4gICAgaWYgKFxuICAgICAgdGhpcy50b2tlbnMubWF0Y2hlc0NvbnRleHR1YWwoQ29udGV4dHVhbEtleXdvcmQuX3R5cGUpICYmXG4gICAgICAhdGhpcy50b2tlbnMubWF0Y2hlczFBdEluZGV4KHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpICsgMSwgdHQuY29tbWEpICYmXG4gICAgICAhdGhpcy50b2tlbnMubWF0Y2hlc0NvbnRleHR1YWxBdEluZGV4KHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpICsgMSwgQ29udGV4dHVhbEtleXdvcmQuX2Zyb20pXG4gICAgKSB7XG4gICAgICAvLyBUaGlzIGlzIGFuIFwiaW1wb3J0IHR5cGVcIiBzdGF0ZW1lbnQsIHNvIGV4aXQgZWFybHkuXG4gICAgICB0aGlzLnJlbW92ZVJlbWFpbmluZ0ltcG9ydCgpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0Lm5hbWUpIHx8IHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LnN0YXIpKSB7XG4gICAgICAvLyBXZSBoYXZlIGEgZGVmYXVsdCBpbXBvcnQgb3IgbmFtZXNwYWNlIGltcG9ydCwgc28gdGhlcmUgbXVzdCBiZSBzb21lXG4gICAgICAvLyBub24tdHlwZSBpbXBvcnQuXG4gICAgICB0aGlzLnJlbW92ZVJlbWFpbmluZ0ltcG9ydCgpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5zdHJpbmcpKSB7XG4gICAgICAvLyBUaGlzIGlzIGEgYmFyZSBpbXBvcnQsIHNvIHdlIHNob3VsZCBwcm9jZWVkIHdpdGggdGhlIGltcG9ydC5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBsZXQgZm91bmROb25UeXBlSW1wb3J0ID0gZmFsc2U7XG4gICAgbGV0IGZvdW5kQW55TmFtZWRJbXBvcnQgPSBmYWxzZTtcbiAgICB3aGlsZSAoIXRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LnN0cmluZykpIHtcbiAgICAgIC8vIENoZWNrIGlmIGFueSBuYW1lZCBpbXBvcnRzIGFyZSBvZiB0aGUgZm9ybSBcImZvb1wiIG9yIFwiZm9vIGFzIGJhclwiLCB3aXRoXG4gICAgICAvLyBubyBsZWFkaW5nIFwidHlwZVwiLlxuICAgICAgaWYgKFxuICAgICAgICAoIWZvdW5kTm9uVHlwZUltcG9ydCAmJiB0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZUwpKSB8fFxuICAgICAgICB0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5jb21tYSlcbiAgICAgICkge1xuICAgICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgICAgICBpZiAoIXRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmJyYWNlUikpIHtcbiAgICAgICAgICBmb3VuZEFueU5hbWVkSW1wb3J0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoXG4gICAgICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczIodHQubmFtZSwgdHQuY29tbWEpIHx8XG4gICAgICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczIodHQubmFtZSwgdHQuYnJhY2VSKSB8fFxuICAgICAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXM0KHR0Lm5hbWUsIHR0Lm5hbWUsIHR0Lm5hbWUsIHR0LmNvbW1hKSB8fFxuICAgICAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXM0KHR0Lm5hbWUsIHR0Lm5hbWUsIHR0Lm5hbWUsIHR0LmJyYWNlUilcbiAgICAgICAgKSB7XG4gICAgICAgICAgZm91bmROb25UeXBlSW1wb3J0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICB9XG4gICAgaWYgKHRoaXMua2VlcFVudXNlZEltcG9ydHMpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHRoaXMuaXNUeXBlU2NyaXB0VHJhbnNmb3JtRW5hYmxlZCkge1xuICAgICAgcmV0dXJuICFmb3VuZE5vblR5cGVJbXBvcnQ7XG4gICAgfSBlbHNlIGlmICh0aGlzLmlzRmxvd1RyYW5zZm9ybUVuYWJsZWQpIHtcbiAgICAgIC8vIEluIEZsb3csIHVubGlrZSBUUywgYGltcG9ydCB7fSBmcm9tICdmb28nO2AgcHJlc2VydmVzIHRoZSBpbXBvcnQuXG4gICAgICByZXR1cm4gZm91bmRBbnlOYW1lZEltcG9ydCAmJiAhZm91bmROb25UeXBlSW1wb3J0O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgIHJlbW92ZVJlbWFpbmluZ0ltcG9ydCgpIHtcbiAgICB3aGlsZSAoIXRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LnN0cmluZykpIHtcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgfVxuICB9XG5cbiAgIHByb2Nlc3NJZGVudGlmaWVyKCkge1xuICAgIGNvbnN0IHRva2VuID0gdGhpcy50b2tlbnMuY3VycmVudFRva2VuKCk7XG4gICAgaWYgKHRva2VuLnNoYWRvd3NHbG9iYWwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAodG9rZW4uaWRlbnRpZmllclJvbGUgPT09IElkZW50aWZpZXJSb2xlLk9iamVjdFNob3J0aGFuZCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc09iamVjdFNob3J0aGFuZCgpO1xuICAgIH1cblxuICAgIGlmICh0b2tlbi5pZGVudGlmaWVyUm9sZSAhPT0gSWRlbnRpZmllclJvbGUuQWNjZXNzKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHJlcGxhY2VtZW50ID0gdGhpcy5pbXBvcnRQcm9jZXNzb3IuZ2V0SWRlbnRpZmllclJlcGxhY2VtZW50KFxuICAgICAgdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWVGb3JUb2tlbih0b2tlbiksXG4gICAgKTtcbiAgICBpZiAoIXJlcGxhY2VtZW50KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFRvbGVyYXRlIGFueSBudW1iZXIgb2YgY2xvc2luZyBwYXJlbnMgd2hpbGUgbG9va2luZyBmb3IgYW4gb3BlbmluZyBwYXJlblxuICAgIC8vIHRoYXQgaW5kaWNhdGVzIGEgZnVuY3Rpb24gY2FsbC5cbiAgICBsZXQgcG9zc2libGVPcGVuUGFyZW5JbmRleCA9IHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpICsgMTtcbiAgICB3aGlsZSAoXG4gICAgICBwb3NzaWJsZU9wZW5QYXJlbkluZGV4IDwgdGhpcy50b2tlbnMudG9rZW5zLmxlbmd0aCAmJlxuICAgICAgdGhpcy50b2tlbnMudG9rZW5zW3Bvc3NpYmxlT3BlblBhcmVuSW5kZXhdLnR5cGUgPT09IHR0LnBhcmVuUlxuICAgICkge1xuICAgICAgcG9zc2libGVPcGVuUGFyZW5JbmRleCsrO1xuICAgIH1cbiAgICAvLyBBdm9pZCB0cmVhdGluZyBpbXBvcnRlZCBmdW5jdGlvbnMgYXMgbWV0aG9kcyBvZiB0aGVpciBgZXhwb3J0c2Agb2JqZWN0XG4gICAgLy8gYnkgdXNpbmcgYCgwLCBmKWAgd2hlbiB0aGUgaWRlbnRpZmllciBpcyBpbiBhIHBhcmVuIGV4cHJlc3Npb24uIEVsc2VcbiAgICAvLyB1c2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5jYWxsYCB3aGVuIHRoZSBpZGVudGlmaWVyIGlzIGEgZ3VhcmFudGVlZFxuICAgIC8vIGZ1bmN0aW9uIGNhbGwuIFdoZW4gdXNpbmcgYGNhbGxgLCBwYXNzIHVuZGVmaW5lZCBhcyB0aGUgY29udGV4dC5cbiAgICBpZiAodGhpcy50b2tlbnMudG9rZW5zW3Bvc3NpYmxlT3BlblBhcmVuSW5kZXhdLnR5cGUgPT09IHR0LnBhcmVuTCkge1xuICAgICAgaWYgKFxuICAgICAgICB0aGlzLnRva2Vucy50b2tlbkF0UmVsYXRpdmVJbmRleCgxKS50eXBlID09PSB0dC5wYXJlbkwgJiZcbiAgICAgICAgdGhpcy50b2tlbnMudG9rZW5BdFJlbGF0aXZlSW5kZXgoLTEpLnR5cGUgIT09IHR0Ll9uZXdcbiAgICAgICkge1xuICAgICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oYCR7cmVwbGFjZW1lbnR9LmNhbGwodm9pZCAwLCBgKTtcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBvbGQgcGFyZW4uXG4gICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAgIC8vIEJhbGFuY2Ugb3V0IHRoZSBuZXcgcGFyZW4uXG4gICAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NCYWxhbmNlZENvZGUoKTtcbiAgICAgICAgdGhpcy50b2tlbnMuY29weUV4cGVjdGVkVG9rZW4odHQucGFyZW5SKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFNlZSBoZXJlOiBodHRwOi8vMmFsaXR5LmNvbS8yMDE1LzEyL3JlZmVyZW5jZXMuaHRtbFxuICAgICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oYCgwLCAke3JlcGxhY2VtZW50fSlgKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKHJlcGxhY2VtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBwcm9jZXNzT2JqZWN0U2hvcnRoYW5kKCkge1xuICAgIGNvbnN0IGlkZW50aWZpZXIgPSB0aGlzLnRva2Vucy5pZGVudGlmaWVyTmFtZSgpO1xuICAgIGNvbnN0IHJlcGxhY2VtZW50ID0gdGhpcy5pbXBvcnRQcm9jZXNzb3IuZ2V0SWRlbnRpZmllclJlcGxhY2VtZW50KGlkZW50aWZpZXIpO1xuICAgIGlmICghcmVwbGFjZW1lbnQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGAke2lkZW50aWZpZXJ9OiAke3JlcGxhY2VtZW50fWApO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcHJvY2Vzc0V4cG9ydCgpIHtcbiAgICBpZiAoXG4gICAgICB0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5fZXhwb3J0LCB0dC5fZW51bSkgfHxcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXMzKHR0Ll9leHBvcnQsIHR0Ll9jb25zdCwgdHQuX2VudW0pXG4gICAgKSB7XG4gICAgICB0aGlzLmhhZE5hbWVkRXhwb3J0ID0gdHJ1ZTtcbiAgICAgIC8vIExldCB0aGUgVHlwZVNjcmlwdCB0cmFuc2Zvcm0gaGFuZGxlIGl0LlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczIodHQuX2V4cG9ydCwgdHQuX2RlZmF1bHQpKSB7XG4gICAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczModHQuX2V4cG9ydCwgdHQuX2RlZmF1bHQsIHR0Ll9lbnVtKSkge1xuICAgICAgICB0aGlzLmhhZERlZmF1bHRFeHBvcnQgPSB0cnVlO1xuICAgICAgICAvLyBGbG93IGV4cG9ydCBkZWZhdWx0IGVudW1zIG5lZWQgc29tZSBzcGVjaWFsIGhhbmRsaW5nLCBzbyBoYW5kbGUgdGhlbVxuICAgICAgICAvLyBpbiB0aGF0IHRyYW5mb3JtIHJhdGhlciB0aGFuIHRoaXMgb25lLlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICB0aGlzLnByb2Nlc3NFeHBvcnREZWZhdWx0KCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0Ll9leHBvcnQsIHR0LmJyYWNlTCkpIHtcbiAgICAgIHRoaXMucHJvY2Vzc0V4cG9ydEJpbmRpbmdzKCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczIodHQuX2V4cG9ydCwgdHQubmFtZSkgJiZcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXNDb250ZXh0dWFsQXRJbmRleCh0aGlzLnRva2Vucy5jdXJyZW50SW5kZXgoKSArIDEsIENvbnRleHR1YWxLZXl3b3JkLl90eXBlKVxuICAgICkge1xuICAgICAgLy8gZXhwb3J0IHR5cGUge2F9O1xuICAgICAgLy8gZXhwb3J0IHR5cGUge2EgYXMgYn07XG4gICAgICAvLyBleHBvcnQgdHlwZSB7YX0gZnJvbSAnLi9iJztcbiAgICAgIC8vIGV4cG9ydCB0eXBlICogZnJvbSAnLi9iJztcbiAgICAgIC8vIGV4cG9ydCB0eXBlICogYXMgbnMgZnJvbSAnLi9iJztcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZUluaXRpYWxUb2tlbigpO1xuICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZUwpKSB7XG4gICAgICAgIHdoaWxlICghdGhpcy50b2tlbnMubWF0Y2hlczEodHQuYnJhY2VSKSkge1xuICAgICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vICpcbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0Ll9hcykpIHtcbiAgICAgICAgICAvLyBhc1xuICAgICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAgICAgLy8gbnNcbiAgICAgICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBSZW1vdmUgdHlwZSByZS1leHBvcnQgYC4uLiB9IGZyb20gJy4vVCdgXG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXNDb250ZXh0dWFsKENvbnRleHR1YWxLZXl3b3JkLl9mcm9tKSAmJlxuICAgICAgICB0aGlzLnRva2Vucy5tYXRjaGVzMUF0SW5kZXgodGhpcy50b2tlbnMuY3VycmVudEluZGV4KCkgKyAxLCB0dC5zdHJpbmcpXG4gICAgICApIHtcbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgICAgcmVtb3ZlTWF5YmVJbXBvcnRBdHRyaWJ1dGVzKHRoaXMudG9rZW5zKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICB0aGlzLmhhZE5hbWVkRXhwb3J0ID0gdHJ1ZTtcbiAgICBpZiAoXG4gICAgICB0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5fZXhwb3J0LCB0dC5fdmFyKSB8fFxuICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczIodHQuX2V4cG9ydCwgdHQuX2xldCkgfHxcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0Ll9leHBvcnQsIHR0Ll9jb25zdClcbiAgICApIHtcbiAgICAgIHRoaXMucHJvY2Vzc0V4cG9ydFZhcigpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0Ll9leHBvcnQsIHR0Ll9mdW5jdGlvbikgfHxcbiAgICAgIC8vIGV4cG9ydCBhc3luYyBmdW5jdGlvblxuICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczModHQuX2V4cG9ydCwgdHQubmFtZSwgdHQuX2Z1bmN0aW9uKVxuICAgICkge1xuICAgICAgdGhpcy5wcm9jZXNzRXhwb3J0RnVuY3Rpb24oKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICB0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5fZXhwb3J0LCB0dC5fY2xhc3MpIHx8XG4gICAgICB0aGlzLnRva2Vucy5tYXRjaGVzMyh0dC5fZXhwb3J0LCB0dC5fYWJzdHJhY3QsIHR0Ll9jbGFzcykgfHxcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0Ll9leHBvcnQsIHR0LmF0KVxuICAgICkge1xuICAgICAgdGhpcy5wcm9jZXNzRXhwb3J0Q2xhc3MoKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSBpZiAodGhpcy50b2tlbnMubWF0Y2hlczIodHQuX2V4cG9ydCwgdHQuc3RhcikpIHtcbiAgICAgIHRoaXMucHJvY2Vzc0V4cG9ydFN0YXIoKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnJlY29nbml6ZWQgZXhwb3J0IHN5bnRheC5cIik7XG4gICAgfVxuICB9XG5cbiAgIHByb2Nlc3NBc3NpZ25tZW50KCkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy50b2tlbnMuY3VycmVudEluZGV4KCk7XG4gICAgY29uc3QgaWRlbnRpZmllclRva2VuID0gdGhpcy50b2tlbnMudG9rZW5zW2luZGV4IC0gMV07XG4gICAgLy8gSWYgdGhlIExIUyBpcyBhIHR5cGUgaWRlbnRpZmllciwgdGhpcyBtdXN0IGJlIGEgZGVjbGFyYXRpb24gbGlrZSBgbGV0IGE6IGIgPSBjO2AsXG4gICAgLy8gd2l0aCBgYmAgYXMgdGhlIGlkZW50aWZpZXIsIHNvIG5vdGhpbmcgbmVlZHMgdG8gYmUgZG9uZSBpbiB0aGF0IGNhc2UuXG4gICAgaWYgKGlkZW50aWZpZXJUb2tlbi5pc1R5cGUgfHwgaWRlbnRpZmllclRva2VuLnR5cGUgIT09IHR0Lm5hbWUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGlkZW50aWZpZXJUb2tlbi5zaGFkb3dzR2xvYmFsKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChpbmRleCA+PSAyICYmIHRoaXMudG9rZW5zLm1hdGNoZXMxQXRJbmRleChpbmRleCAtIDIsIHR0LmRvdCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGluZGV4ID49IDIgJiYgW3R0Ll92YXIsIHR0Ll9sZXQsIHR0Ll9jb25zdF0uaW5jbHVkZXModGhpcy50b2tlbnMudG9rZW5zW2luZGV4IC0gMl0udHlwZSkpIHtcbiAgICAgIC8vIERlY2xhcmF0aW9ucyBkb24ndCBuZWVkIGFuIGV4dHJhIGFzc2lnbm1lbnQuIFRoaXMgZG9lc24ndCBhdm9pZCB0aGVcbiAgICAgIC8vIGFzc2lnbm1lbnQgZm9yIGNvbW1hLXNlcGFyYXRlZCBkZWNsYXJhdGlvbnMsIGJ1dCBpdCdzIHN0aWxsIGNvcnJlY3RcbiAgICAgIC8vIHNpbmNlIHRoZSBhc3NpZ25tZW50IGlzIGp1c3QgcmVkdW5kYW50LlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBhc3NpZ25tZW50U25pcHBldCA9IHRoaXMuaW1wb3J0UHJvY2Vzc29yLnJlc29sdmVFeHBvcnRCaW5kaW5nKFxuICAgICAgdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWVGb3JUb2tlbihpZGVudGlmaWVyVG9rZW4pLFxuICAgICk7XG4gICAgaWYgKCFhc3NpZ25tZW50U25pcHBldCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB0aGlzLnRva2Vucy5jb3B5VG9rZW4oKTtcbiAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKGAgJHthc3NpZ25tZW50U25pcHBldH0gPWApO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3Mgc29tZXRoaW5nIGxpa2UgYGEgKz0gM2AsIHdoZXJlIGBhYCBtaWdodCBiZSBhbiBleHBvcnRlZCB2YWx1ZS5cbiAgICovXG4gICBwcm9jZXNzQ29tcGxleEFzc2lnbm1lbnQoKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLnRva2Vucy5jdXJyZW50SW5kZXgoKTtcbiAgICBjb25zdCBpZGVudGlmaWVyVG9rZW4gPSB0aGlzLnRva2Vucy50b2tlbnNbaW5kZXggLSAxXTtcbiAgICBpZiAoaWRlbnRpZmllclRva2VuLnR5cGUgIT09IHR0Lm5hbWUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGlkZW50aWZpZXJUb2tlbi5zaGFkb3dzR2xvYmFsKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChpbmRleCA+PSAyICYmIHRoaXMudG9rZW5zLm1hdGNoZXMxQXRJbmRleChpbmRleCAtIDIsIHR0LmRvdCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgYXNzaWdubWVudFNuaXBwZXQgPSB0aGlzLmltcG9ydFByb2Nlc3Nvci5yZXNvbHZlRXhwb3J0QmluZGluZyhcbiAgICAgIHRoaXMudG9rZW5zLmlkZW50aWZpZXJOYW1lRm9yVG9rZW4oaWRlbnRpZmllclRva2VuKSxcbiAgICApO1xuICAgIGlmICghYXNzaWdubWVudFNuaXBwZXQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShgID0gJHthc3NpZ25tZW50U25pcHBldH1gKTtcbiAgICB0aGlzLnRva2Vucy5jb3B5VG9rZW4oKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9jZXNzIHNvbWV0aGluZyBsaWtlIGArK2FgLCB3aGVyZSBgYWAgbWlnaHQgYmUgYW4gZXhwb3J0ZWQgdmFsdWUuXG4gICAqL1xuICAgcHJvY2Vzc1ByZUluY0RlYygpIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpO1xuICAgIGNvbnN0IGlkZW50aWZpZXJUb2tlbiA9IHRoaXMudG9rZW5zLnRva2Vuc1tpbmRleCArIDFdO1xuICAgIGlmIChpZGVudGlmaWVyVG9rZW4udHlwZSAhPT0gdHQubmFtZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoaWRlbnRpZmllclRva2VuLnNoYWRvd3NHbG9iYWwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gSWdub3JlIHRoaW5ncyBsaWtlICsrYS5iIGFuZCArK2FbYl0gYW5kICsrYSgpLmIuXG4gICAgaWYgKFxuICAgICAgaW5kZXggKyAyIDwgdGhpcy50b2tlbnMudG9rZW5zLmxlbmd0aCAmJlxuICAgICAgKHRoaXMudG9rZW5zLm1hdGNoZXMxQXRJbmRleChpbmRleCArIDIsIHR0LmRvdCkgfHxcbiAgICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczFBdEluZGV4KGluZGV4ICsgMiwgdHQuYnJhY2tldEwpIHx8XG4gICAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXMxQXRJbmRleChpbmRleCArIDIsIHR0LnBhcmVuTCkpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGlkZW50aWZpZXJOYW1lID0gdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWVGb3JUb2tlbihpZGVudGlmaWVyVG9rZW4pO1xuICAgIGNvbnN0IGFzc2lnbm1lbnRTbmlwcGV0ID0gdGhpcy5pbXBvcnRQcm9jZXNzb3IucmVzb2x2ZUV4cG9ydEJpbmRpbmcoaWRlbnRpZmllck5hbWUpO1xuICAgIGlmICghYXNzaWdubWVudFNuaXBwZXQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShgJHthc3NpZ25tZW50U25pcHBldH0gPSBgKTtcbiAgICB0aGlzLnRva2Vucy5jb3B5VG9rZW4oKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9jZXNzIHNvbWV0aGluZyBsaWtlIGBhKytgLCB3aGVyZSBgYWAgbWlnaHQgYmUgYW4gZXhwb3J0ZWQgdmFsdWUuXG4gICAqIFRoaXMgc3RhcnRzIGF0IHRoZSBgYWAsIG5vdCBhdCB0aGUgYCsrYC5cbiAgICovXG4gICBwcm9jZXNzUG9zdEluY0RlYygpIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpO1xuICAgIGNvbnN0IGlkZW50aWZpZXJUb2tlbiA9IHRoaXMudG9rZW5zLnRva2Vuc1tpbmRleF07XG4gICAgY29uc3Qgb3BlcmF0b3JUb2tlbiA9IHRoaXMudG9rZW5zLnRva2Vuc1tpbmRleCArIDFdO1xuICAgIGlmIChpZGVudGlmaWVyVG9rZW4udHlwZSAhPT0gdHQubmFtZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoaWRlbnRpZmllclRva2VuLnNoYWRvd3NHbG9iYWwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGluZGV4ID49IDEgJiYgdGhpcy50b2tlbnMubWF0Y2hlczFBdEluZGV4KGluZGV4IC0gMSwgdHQuZG90KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBpZGVudGlmaWVyTmFtZSA9IHRoaXMudG9rZW5zLmlkZW50aWZpZXJOYW1lRm9yVG9rZW4oaWRlbnRpZmllclRva2VuKTtcbiAgICBjb25zdCBhc3NpZ25tZW50U25pcHBldCA9IHRoaXMuaW1wb3J0UHJvY2Vzc29yLnJlc29sdmVFeHBvcnRCaW5kaW5nKGlkZW50aWZpZXJOYW1lKTtcbiAgICBpZiAoIWFzc2lnbm1lbnRTbmlwcGV0KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IG9wZXJhdG9yQ29kZSA9IHRoaXMudG9rZW5zLnJhd0NvZGVGb3JUb2tlbihvcGVyYXRvclRva2VuKTtcbiAgICAvLyBXZSBtaWdodCBhbHNvIHJlcGxhY2UgdGhlIGlkZW50aWZpZXIgd2l0aCBzb21ldGhpbmcgbGlrZSBleHBvcnRzLngsIHNvXG4gICAgLy8gZG8gdGhhdCByZXBsYWNlbWVudCBoZXJlIGFzIHdlbGwuXG4gICAgY29uc3QgYmFzZSA9IHRoaXMuaW1wb3J0UHJvY2Vzc29yLmdldElkZW50aWZpZXJSZXBsYWNlbWVudChpZGVudGlmaWVyTmFtZSkgfHwgaWRlbnRpZmllck5hbWU7XG4gICAgaWYgKG9wZXJhdG9yQ29kZSA9PT0gXCIrK1wiKSB7XG4gICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oYCgke2Jhc2V9ID0gJHthc3NpZ25tZW50U25pcHBldH0gPSAke2Jhc2V9ICsgMSwgJHtiYXNlfSAtIDEpYCk7XG4gICAgfSBlbHNlIGlmIChvcGVyYXRvckNvZGUgPT09IFwiLS1cIikge1xuICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGAoJHtiYXNlfSA9ICR7YXNzaWdubWVudFNuaXBwZXR9ID0gJHtiYXNlfSAtIDEsICR7YmFzZX0gKyAxKWApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgb3BlcmF0b3I6ICR7b3BlcmF0b3JDb2RlfWApO1xuICAgIH1cbiAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgIHByb2Nlc3NFeHBvcnREZWZhdWx0KCkge1xuICAgIGxldCBleHBvcnRlZFJ1bnRpbWVWYWx1ZSA9IHRydWU7XG4gICAgaWYgKFxuICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczQodHQuX2V4cG9ydCwgdHQuX2RlZmF1bHQsIHR0Ll9mdW5jdGlvbiwgdHQubmFtZSkgfHxcbiAgICAgIC8vIGV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uXG4gICAgICAodGhpcy50b2tlbnMubWF0Y2hlczUodHQuX2V4cG9ydCwgdHQuX2RlZmF1bHQsIHR0Lm5hbWUsIHR0Ll9mdW5jdGlvbiwgdHQubmFtZSkgJiZcbiAgICAgICAgdGhpcy50b2tlbnMubWF0Y2hlc0NvbnRleHR1YWxBdEluZGV4KFxuICAgICAgICAgIHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpICsgMixcbiAgICAgICAgICBDb250ZXh0dWFsS2V5d29yZC5fYXN5bmMsXG4gICAgICAgICkpXG4gICAgKSB7XG4gICAgICB0aGlzLnRva2Vucy5yZW1vdmVJbml0aWFsVG9rZW4oKTtcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAvLyBOYW1lZCBmdW5jdGlvbiBleHBvcnQgY2FzZTogY2hhbmdlIGl0IHRvIGEgdG9wLWxldmVsIGZ1bmN0aW9uXG4gICAgICAvLyBkZWNsYXJhdGlvbiBmb2xsb3dlZCBieSBleHBvcnRzIHN0YXRlbWVudC5cbiAgICAgIGNvbnN0IG5hbWUgPSB0aGlzLnByb2Nlc3NOYW1lZEZ1bmN0aW9uKCk7XG4gICAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKGAgZXhwb3J0cy5kZWZhdWx0ID0gJHtuYW1lfTtgKTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczQodHQuX2V4cG9ydCwgdHQuX2RlZmF1bHQsIHR0Ll9jbGFzcywgdHQubmFtZSkgfHxcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXM1KHR0Ll9leHBvcnQsIHR0Ll9kZWZhdWx0LCB0dC5fYWJzdHJhY3QsIHR0Ll9jbGFzcywgdHQubmFtZSkgfHxcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXMzKHR0Ll9leHBvcnQsIHR0Ll9kZWZhdWx0LCB0dC5hdClcbiAgICApIHtcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZUluaXRpYWxUb2tlbigpO1xuICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIHRoaXMuY29weURlY29yYXRvcnMoKTtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5fYWJzdHJhY3QpKSB7XG4gICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICB9XG4gICAgICBjb25zdCBuYW1lID0gdGhpcy5yb290VHJhbnNmb3JtZXIucHJvY2Vzc05hbWVkQ2xhc3MoKTtcbiAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUoYCBleHBvcnRzLmRlZmF1bHQgPSAke25hbWV9O2ApO1xuICAgICAgLy8gQWZ0ZXIgdGhpcyBwb2ludCwgdGhpcyBpcyBhIHBsYWluIFwiZXhwb3J0IGRlZmF1bHQgRVwiIHN0YXRlbWVudC5cbiAgICB9IGVsc2UgaWYgKFxuICAgICAgc2hvdWxkRWxpZGVEZWZhdWx0RXhwb3J0KFxuICAgICAgICB0aGlzLmlzVHlwZVNjcmlwdFRyYW5zZm9ybUVuYWJsZWQsXG4gICAgICAgIHRoaXMua2VlcFVudXNlZEltcG9ydHMsXG4gICAgICAgIHRoaXMudG9rZW5zLFxuICAgICAgICB0aGlzLmRlY2xhcmF0aW9uSW5mbyxcbiAgICAgIClcbiAgICApIHtcbiAgICAgIC8vIElmIHRoZSBleHBvcnRlZCB2YWx1ZSBpcyBqdXN0IGFuIGlkZW50aWZpZXIgYW5kIHNob3VsZCBiZSBlbGlkZWQgYnkgVHlwZVNjcmlwdFxuICAgICAgLy8gcnVsZXMsIHRoZW4gcmVtb3ZlIGl0IGVudGlyZWx5LiBJdCB3aWxsIGFsd2F5cyBoYXZlIHRoZSBmb3JtIGBleHBvcnQgZGVmYXVsdCBlYCxcbiAgICAgIC8vIHdoZXJlIGBlYCBpcyBhbiBpZGVudGlmaWVyLlxuICAgICAgZXhwb3J0ZWRSdW50aW1lVmFsdWUgPSBmYWxzZTtcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZUluaXRpYWxUb2tlbigpO1xuICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLnJlYWN0SG90TG9hZGVyVHJhbnNmb3JtZXIpIHtcbiAgICAgIC8vIFdlIG5lZWQgdG8gYXNzaWduIEUgdG8gYSB2YXJpYWJsZS4gQ2hhbmdlIFwiZXhwb3J0IGRlZmF1bHQgRVwiIHRvXG4gICAgICAvLyBcImxldCBfZGVmYXVsdDsgZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQgPSBFXCJcbiAgICAgIGNvbnN0IGRlZmF1bHRWYXJOYW1lID0gdGhpcy5uYW1lTWFuYWdlci5jbGFpbUZyZWVOYW1lKFwiX2RlZmF1bHRcIik7XG4gICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oYGxldCAke2RlZmF1bHRWYXJOYW1lfTsgZXhwb3J0cy5gKTtcbiAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShgID0gJHtkZWZhdWx0VmFyTmFtZX0gPWApO1xuICAgICAgdGhpcy5yZWFjdEhvdExvYWRlclRyYW5zZm9ybWVyLnNldEV4dHJhY3RlZERlZmF1bHRFeHBvcnROYW1lKGRlZmF1bHRWYXJOYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ2hhbmdlIFwiZXhwb3J0IGRlZmF1bHQgRVwiIHRvIFwiZXhwb3J0cy5kZWZhdWx0ID0gRVwiXG4gICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oXCJleHBvcnRzLlwiKTtcbiAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIiA9XCIpO1xuICAgIH1cbiAgICBpZiAoZXhwb3J0ZWRSdW50aW1lVmFsdWUpIHtcbiAgICAgIHRoaXMuaGFkRGVmYXVsdEV4cG9ydCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgIGNvcHlEZWNvcmF0b3JzKCkge1xuICAgIHdoaWxlICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5hdCkpIHtcbiAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LnBhcmVuTCkpIHtcbiAgICAgICAgdGhpcy50b2tlbnMuY29weUV4cGVjdGVkVG9rZW4odHQucGFyZW5MKTtcbiAgICAgICAgdGhpcy5yb290VHJhbnNmb3JtZXIucHJvY2Vzc0JhbGFuY2VkQ29kZSgpO1xuICAgICAgICB0aGlzLnRva2Vucy5jb3B5RXhwZWN0ZWRUb2tlbih0dC5wYXJlblIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy50b2tlbnMuY29weUV4cGVjdGVkVG9rZW4odHQubmFtZSk7XG4gICAgICAgIHdoaWxlICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5kb3QpKSB7XG4gICAgICAgICAgdGhpcy50b2tlbnMuY29weUV4cGVjdGVkVG9rZW4odHQuZG90KTtcbiAgICAgICAgICB0aGlzLnRva2Vucy5jb3B5RXhwZWN0ZWRUb2tlbih0dC5uYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQucGFyZW5MKSkge1xuICAgICAgICAgIHRoaXMudG9rZW5zLmNvcHlFeHBlY3RlZFRva2VuKHR0LnBhcmVuTCk7XG4gICAgICAgICAgdGhpcy5yb290VHJhbnNmb3JtZXIucHJvY2Vzc0JhbGFuY2VkQ29kZSgpO1xuICAgICAgICAgIHRoaXMudG9rZW5zLmNvcHlFeHBlY3RlZFRva2VuKHR0LnBhcmVuUik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVHJhbnNmb3JtIGEgZGVjbGFyYXRpb24gbGlrZSBgZXhwb3J0IHZhcmAsIGBleHBvcnQgbGV0YCwgb3IgYGV4cG9ydCBjb25zdGAuXG4gICAqL1xuICAgcHJvY2Vzc0V4cG9ydFZhcigpIHtcbiAgICBpZiAodGhpcy5pc1NpbXBsZUV4cG9ydFZhcigpKSB7XG4gICAgICB0aGlzLnByb2Nlc3NTaW1wbGVFeHBvcnRWYXIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wcm9jZXNzQ29tcGxleEV4cG9ydFZhcigpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmUgaWYgdGhlIGV4cG9ydCBpcyBvZiB0aGUgZm9ybTpcbiAgICogZXhwb3J0IHZhci9sZXQvY29uc3QgW3Zhck5hbWVdID0gW2V4cHJdO1xuICAgKiBJbiBvdGhlciB3b3JkcywgZGV0ZXJtaW5lIGlmIGZ1bmN0aW9uIG5hbWUgaW5mZXJlbmNlIG1pZ2h0IGFwcGx5LlxuICAgKi9cbiAgIGlzU2ltcGxlRXhwb3J0VmFyKCkge1xuICAgIGxldCB0b2tlbkluZGV4ID0gdGhpcy50b2tlbnMuY3VycmVudEluZGV4KCk7XG4gICAgLy8gZXhwb3J0XG4gICAgdG9rZW5JbmRleCsrO1xuICAgIC8vIHZhci9sZXQvY29uc3RcbiAgICB0b2tlbkluZGV4Kys7XG4gICAgaWYgKCF0aGlzLnRva2Vucy5tYXRjaGVzMUF0SW5kZXgodG9rZW5JbmRleCwgdHQubmFtZSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdG9rZW5JbmRleCsrO1xuICAgIHdoaWxlICh0b2tlbkluZGV4IDwgdGhpcy50b2tlbnMudG9rZW5zLmxlbmd0aCAmJiB0aGlzLnRva2Vucy50b2tlbnNbdG9rZW5JbmRleF0uaXNUeXBlKSB7XG4gICAgICB0b2tlbkluZGV4Kys7XG4gICAgfVxuICAgIGlmICghdGhpcy50b2tlbnMubWF0Y2hlczFBdEluZGV4KHRva2VuSW5kZXgsIHR0LmVxKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmFuc2Zvcm0gYW4gYGV4cG9ydCB2YXJgIGRlY2xhcmF0aW9uIGluaXRpYWxpemluZyBhIHNpbmdsZSB2YXJpYWJsZS5cbiAgICpcbiAgICogRm9yIGV4YW1wbGUsIHRoaXM6XG4gICAqIGV4cG9ydCBjb25zdCBmID0gKCkgPT4ge307XG4gICAqIGJlY29tZXMgdGhpczpcbiAgICogY29uc3QgZiA9ICgpID0+IHt9OyBleHBvcnRzLmYgPSBmO1xuICAgKlxuICAgKiBUaGUgdmFyaWFibGUgaXMgdW51c2VkIChlLmcuIGV4cG9ydHMuZiBoYXMgdGhlIHRydWUgdmFsdWUgb2YgdGhlIGV4cG9ydCkuXG4gICAqIFdlIG5lZWQgdG8gcHJvZHVjZSBhbiBhc3NpZ25tZW50IG9mIHRoaXMgZm9ybSBzbyB0aGF0IHRoZSBmdW5jdGlvbiB3aWxsXG4gICAqIGhhdmUgYW4gaW5mZXJyZWQgbmFtZSBvZiBcImZcIiwgd2hpY2ggd291bGRuJ3QgaGFwcGVuIGluIHRoZSBtb3JlIGdlbmVyYWxcbiAgICogY2FzZSBiZWxvdy5cbiAgICovXG4gICBwcm9jZXNzU2ltcGxlRXhwb3J0VmFyKCkge1xuICAgIC8vIGV4cG9ydFxuICAgIHRoaXMudG9rZW5zLnJlbW92ZUluaXRpYWxUb2tlbigpO1xuICAgIC8vIHZhci9sZXQvY29uc3RcbiAgICB0aGlzLnRva2Vucy5jb3B5VG9rZW4oKTtcbiAgICBjb25zdCB2YXJOYW1lID0gdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWUoKTtcbiAgICAvLyB4OiBudW1iZXIgIC0+ICB4XG4gICAgd2hpbGUgKCF0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5lcSkpIHtcbiAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NUb2tlbigpO1xuICAgIH1cbiAgICBjb25zdCBlbmRJbmRleCA9IHRoaXMudG9rZW5zLmN1cnJlbnRUb2tlbigpLnJoc0VuZEluZGV4O1xuICAgIGlmIChlbmRJbmRleCA9PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCA9IHRva2VuIHdpdGggYW4gZW5kIGluZGV4LlwiKTtcbiAgICB9XG4gICAgd2hpbGUgKHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpIDwgZW5kSW5kZXgpIHtcbiAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NUb2tlbigpO1xuICAgIH1cbiAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKGA7IGV4cG9ydHMuJHt2YXJOYW1lfSA9ICR7dmFyTmFtZX1gKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmFuc2Zvcm0gbm9ybWFsIGRlY2xhcmF0aW9uIGV4cG9ydHMsIGluY2x1ZGluZyBoYW5kbGluZyBkZXN0cnVjdHVyaW5nLlxuICAgKiBGb3IgZXhhbXBsZSwgdGhpczpcbiAgICogZXhwb3J0IGNvbnN0IHt4OiBbYSA9IDIsIGJdLCBjfSA9IGQ7XG4gICAqIGJlY29tZXMgdGhpczpcbiAgICogKHt4OiBbZXhwb3J0cy5hID0gMiwgZXhwb3J0cy5iXSwgYzogZXhwb3J0cy5jfSA9IGQ7KVxuICAgKi9cbiAgIHByb2Nlc3NDb21wbGV4RXhwb3J0VmFyKCkge1xuICAgIHRoaXMudG9rZW5zLnJlbW92ZUluaXRpYWxUb2tlbigpO1xuICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgY29uc3QgbmVlZHNQYXJlbnMgPSB0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZUwpO1xuICAgIGlmIChuZWVkc1BhcmVucykge1xuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIihcIik7XG4gICAgfVxuXG4gICAgbGV0IGRlcHRoID0gMDtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgaWYgKFxuICAgICAgICB0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZUwpIHx8XG4gICAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmRvbGxhckJyYWNlTCkgfHxcbiAgICAgICAgdGhpcy50b2tlbnMubWF0Y2hlczEodHQuYnJhY2tldEwpXG4gICAgICApIHtcbiAgICAgICAgZGVwdGgrKztcbiAgICAgICAgdGhpcy50b2tlbnMuY29weVRva2VuKCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmJyYWNlUikgfHwgdGhpcy50b2tlbnMubWF0Y2hlczEodHQuYnJhY2tldFIpKSB7XG4gICAgICAgIGRlcHRoLS07XG4gICAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgZGVwdGggPT09IDAgJiZcbiAgICAgICAgIXRoaXMudG9rZW5zLm1hdGNoZXMxKHR0Lm5hbWUpICYmXG4gICAgICAgICF0aGlzLnRva2Vucy5jdXJyZW50VG9rZW4oKS5pc1R5cGVcbiAgICAgICkge1xuICAgICAgICBicmVhaztcbiAgICAgIH0gZWxzZSBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuZXEpKSB7XG4gICAgICAgIC8vIERlZmF1bHQgdmFsdWVzIG1pZ2h0IGhhdmUgYXNzaWdubWVudHMgaW4gdGhlIFJIUyB0aGF0IHdlIHdhbnQgdG8gaWdub3JlLCBzbyBza2lwIHBhc3RcbiAgICAgICAgLy8gdGhlbS5cbiAgICAgICAgY29uc3QgZW5kSW5kZXggPSB0aGlzLnRva2Vucy5jdXJyZW50VG9rZW4oKS5yaHNFbmRJbmRleDtcbiAgICAgICAgaWYgKGVuZEluZGV4ID09IG51bGwpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCA9IHRva2VuIHdpdGggYW4gZW5kIGluZGV4LlwiKTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAodGhpcy50b2tlbnMuY3VycmVudEluZGV4KCkgPCBlbmRJbmRleCkge1xuICAgICAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NUb2tlbigpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCB0b2tlbiA9IHRoaXMudG9rZW5zLmN1cnJlbnRUb2tlbigpO1xuICAgICAgICBpZiAoaXNEZWNsYXJhdGlvbih0b2tlbikpIHtcbiAgICAgICAgICBjb25zdCBuYW1lID0gdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWUoKTtcbiAgICAgICAgICBsZXQgcmVwbGFjZW1lbnQgPSB0aGlzLmltcG9ydFByb2Nlc3Nvci5nZXRJZGVudGlmaWVyUmVwbGFjZW1lbnQobmFtZSk7XG4gICAgICAgICAgaWYgKHJlcGxhY2VtZW50ID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGEgcmVwbGFjZW1lbnQgZm9yICR7bmFtZX0gaW4gXFxgZXhwb3J0IHZhclxcYCBzeW50YXguYCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpc09iamVjdFNob3J0aGFuZERlY2xhcmF0aW9uKHRva2VuKSkge1xuICAgICAgICAgICAgcmVwbGFjZW1lbnQgPSBgJHtuYW1lfTogJHtyZXBsYWNlbWVudH1gO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4ocmVwbGFjZW1lbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NUb2tlbigpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG5lZWRzUGFyZW5zKSB7XG4gICAgICAvLyBTZWVrIHRvIHRoZSBlbmQgb2YgdGhlIFJIUy5cbiAgICAgIGNvbnN0IGVuZEluZGV4ID0gdGhpcy50b2tlbnMuY3VycmVudFRva2VuKCkucmhzRW5kSW5kZXg7XG4gICAgICBpZiAoZW5kSW5kZXggPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCA9IHRva2VuIHdpdGggYW4gZW5kIGluZGV4LlwiKTtcbiAgICAgIH1cbiAgICAgIHdoaWxlICh0aGlzLnRva2Vucy5jdXJyZW50SW5kZXgoKSA8IGVuZEluZGV4KSB7XG4gICAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NUb2tlbigpO1xuICAgICAgfVxuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIilcIik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFRyYW5zZm9ybSB0aGlzOlxuICAgKiBleHBvcnQgZnVuY3Rpb24gZm9vKCkge31cbiAgICogaW50byB0aGlzOlxuICAgKiBmdW5jdGlvbiBmb28oKSB7fSBleHBvcnRzLmZvbyA9IGZvbztcbiAgICovXG4gICBwcm9jZXNzRXhwb3J0RnVuY3Rpb24oKSB7XG4gICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKFwiXCIpO1xuICAgIGNvbnN0IG5hbWUgPSB0aGlzLnByb2Nlc3NOYW1lZEZ1bmN0aW9uKCk7XG4gICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShgIGV4cG9ydHMuJHtuYW1lfSA9ICR7bmFtZX07YCk7XG4gIH1cblxuICAvKipcbiAgICogU2tpcCBwYXN0IGEgZnVuY3Rpb24gd2l0aCBhIG5hbWUgYW5kIHJldHVybiB0aGF0IG5hbWUuXG4gICAqL1xuICAgcHJvY2Vzc05hbWVkRnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0Ll9mdW5jdGlvbikpIHtcbiAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgIH0gZWxzZSBpZiAodGhpcy50b2tlbnMubWF0Y2hlczIodHQubmFtZSwgdHQuX2Z1bmN0aW9uKSkge1xuICAgICAgaWYgKCF0aGlzLnRva2Vucy5tYXRjaGVzQ29udGV4dHVhbChDb250ZXh0dWFsS2V5d29yZC5fYXN5bmMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGFzeW5jIGtleXdvcmQgaW4gZnVuY3Rpb24gZXhwb3J0LlwiKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgdGhpcy50b2tlbnMuY29weVRva2VuKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5zdGFyKSkge1xuICAgICAgdGhpcy50b2tlbnMuY29weVRva2VuKCk7XG4gICAgfVxuICAgIGlmICghdGhpcy50b2tlbnMubWF0Y2hlczEodHQubmFtZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGlkZW50aWZpZXIgZm9yIGV4cG9ydGVkIGZ1bmN0aW9uIG5hbWUuXCIpO1xuICAgIH1cbiAgICBjb25zdCBuYW1lID0gdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWUoKTtcbiAgICB0aGlzLnRva2Vucy5jb3B5VG9rZW4oKTtcbiAgICBpZiAodGhpcy50b2tlbnMuY3VycmVudFRva2VuKCkuaXNUeXBlKSB7XG4gICAgICB0aGlzLnRva2Vucy5yZW1vdmVJbml0aWFsVG9rZW4oKTtcbiAgICAgIHdoaWxlICh0aGlzLnRva2Vucy5jdXJyZW50VG9rZW4oKS5pc1R5cGUpIHtcbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy50b2tlbnMuY29weUV4cGVjdGVkVG9rZW4odHQucGFyZW5MKTtcbiAgICB0aGlzLnJvb3RUcmFuc2Zvcm1lci5wcm9jZXNzQmFsYW5jZWRDb2RlKCk7XG4gICAgdGhpcy50b2tlbnMuY29weUV4cGVjdGVkVG9rZW4odHQucGFyZW5SKTtcbiAgICB0aGlzLnJvb3RUcmFuc2Zvcm1lci5wcm9jZXNzUG9zc2libGVUeXBlUmFuZ2UoKTtcbiAgICB0aGlzLnRva2Vucy5jb3B5RXhwZWN0ZWRUb2tlbih0dC5icmFjZUwpO1xuICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NCYWxhbmNlZENvZGUoKTtcbiAgICB0aGlzLnRva2Vucy5jb3B5RXhwZWN0ZWRUb2tlbih0dC5icmFjZVIpO1xuICAgIHJldHVybiBuYW1lO1xuICB9XG5cbiAgLyoqXG4gICAqIFRyYW5zZm9ybSB0aGlzOlxuICAgKiBleHBvcnQgY2xhc3MgQSB7fVxuICAgKiBpbnRvIHRoaXM6XG4gICAqIGNsYXNzIEEge30gZXhwb3J0cy5BID0gQTtcbiAgICovXG4gICBwcm9jZXNzRXhwb3J0Q2xhc3MoKSB7XG4gICAgdGhpcy50b2tlbnMucmVtb3ZlSW5pdGlhbFRva2VuKCk7XG4gICAgdGhpcy5jb3B5RGVjb3JhdG9ycygpO1xuICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5fYWJzdHJhY3QpKSB7XG4gICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIH1cbiAgICBjb25zdCBuYW1lID0gdGhpcy5yb290VHJhbnNmb3JtZXIucHJvY2Vzc05hbWVkQ2xhc3MoKTtcbiAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKGAgZXhwb3J0cy4ke25hbWV9ID0gJHtuYW1lfTtgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmFuc2Zvcm0gdGhpczpcbiAgICogZXhwb3J0IHthLCBiIGFzIGN9O1xuICAgKiBpbnRvIHRoaXM6XG4gICAqIGV4cG9ydHMuYSA9IGE7IGV4cG9ydHMuYyA9IGI7XG4gICAqXG4gICAqIE9SXG4gICAqXG4gICAqIFRyYW5zZm9ybSB0aGlzOlxuICAgKiBleHBvcnQge2EsIGIgYXMgY30gZnJvbSAnLi9mb28nO1xuICAgKiBpbnRvIHRoZSBwcmUtZ2VuZXJhdGVkIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSBjb2RlIGZyb20gdGhlIEltcG9ydFByb2Nlc3Nvci5cbiAgICpcbiAgICogRm9yIHRoZSBmaXJzdCBjYXNlLCBpZiB0aGUgVHlwZVNjcmlwdCB0cmFuc2Zvcm0gaXMgZW5hYmxlZCwgd2UgbmVlZCB0byBza2lwXG4gICAqIGV4cG9ydHMgdGhhdCBhcmUgb25seSBkZWZpbmVkIGFzIHR5cGVzLlxuICAgKi9cbiAgIHByb2Nlc3NFeHBvcnRCaW5kaW5ncygpIHtcbiAgICB0aGlzLnRva2Vucy5yZW1vdmVJbml0aWFsVG9rZW4oKTtcbiAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuXG4gICAgY29uc3QgaXNSZUV4cG9ydCA9IGlzRXhwb3J0RnJvbSh0aGlzLnRva2Vucyk7XG5cbiAgICBjb25zdCBleHBvcnRTdGF0ZW1lbnRzID0gW107XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZVIpKSB7XG4gICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBzcGVjaWZpZXJJbmZvID0gZ2V0SW1wb3J0RXhwb3J0U3BlY2lmaWVySW5mbyh0aGlzLnRva2Vucyk7XG5cbiAgICAgIHdoaWxlICh0aGlzLnRva2Vucy5jdXJyZW50SW5kZXgoKSA8IHNwZWNpZmllckluZm8uZW5kSW5kZXgpIHtcbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgc2hvdWxkUmVtb3ZlRXhwb3J0ID1cbiAgICAgICAgc3BlY2lmaWVySW5mby5pc1R5cGUgfHxcbiAgICAgICAgKCFpc1JlRXhwb3J0ICYmIHRoaXMuc2hvdWxkRWxpZGVFeHBvcnRlZElkZW50aWZpZXIoc3BlY2lmaWVySW5mby5sZWZ0TmFtZSkpO1xuICAgICAgaWYgKCFzaG91bGRSZW1vdmVFeHBvcnQpIHtcbiAgICAgICAgY29uc3QgZXhwb3J0ZWROYW1lID0gc3BlY2lmaWVySW5mby5yaWdodE5hbWU7XG4gICAgICAgIGlmIChleHBvcnRlZE5hbWUgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgdGhpcy5oYWREZWZhdWx0RXhwb3J0ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmhhZE5hbWVkRXhwb3J0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsb2NhbE5hbWUgPSBzcGVjaWZpZXJJbmZvLmxlZnROYW1lO1xuICAgICAgICBjb25zdCBuZXdMb2NhbE5hbWUgPSB0aGlzLmltcG9ydFByb2Nlc3Nvci5nZXRJZGVudGlmaWVyUmVwbGFjZW1lbnQobG9jYWxOYW1lKTtcbiAgICAgICAgZXhwb3J0U3RhdGVtZW50cy5wdXNoKGBleHBvcnRzLiR7ZXhwb3J0ZWROYW1lfSA9ICR7bmV3TG9jYWxOYW1lIHx8IGxvY2FsTmFtZX07YCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZVIpKSB7XG4gICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0LmNvbW1hLCB0dC5icmFjZVIpKSB7XG4gICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5jb21tYSkpIHtcbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCB0b2tlbjogJHtKU09OLnN0cmluZ2lmeSh0aGlzLnRva2Vucy5jdXJyZW50VG9rZW4oKSl9YCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXNDb250ZXh0dWFsKENvbnRleHR1YWxLZXl3b3JkLl9mcm9tKSkge1xuICAgICAgLy8gVGhpcyBpcyBhbiBleHBvcnQuLi5mcm9tLCBzbyB0aHJvdyBhd2F5IHRoZSBub3JtYWwgbmFtZWQgZXhwb3J0IGNvZGVcbiAgICAgIC8vIGFuZCB1c2UgdGhlIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSBjb2RlIGZyb20gSW1wb3J0UHJvY2Vzc29yLlxuICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIGNvbnN0IHBhdGggPSB0aGlzLnRva2Vucy5zdHJpbmdWYWx1ZSgpO1xuICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuVHJpbW1pbmdMZWZ0V2hpdGVzcGFjZSh0aGlzLmltcG9ydFByb2Nlc3Nvci5jbGFpbUltcG9ydENvZGUocGF0aCkpO1xuICAgICAgcmVtb3ZlTWF5YmVJbXBvcnRBdHRyaWJ1dGVzKHRoaXMudG9rZW5zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVGhpcyBpcyBhIG5vcm1hbCBuYW1lZCBleHBvcnQsIHNvIHVzZSB0aGF0LlxuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShleHBvcnRTdGF0ZW1lbnRzLmpvaW4oXCIgXCIpKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuc2VtaSkpIHtcbiAgICAgIHRoaXMudG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgfVxuICB9XG5cbiAgIHByb2Nlc3NFeHBvcnRTdGFyKCkge1xuICAgIHRoaXMudG9rZW5zLnJlbW92ZUluaXRpYWxUb2tlbigpO1xuICAgIHdoaWxlICghdGhpcy50b2tlbnMubWF0Y2hlczEodHQuc3RyaW5nKSkge1xuICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICB9XG4gICAgY29uc3QgcGF0aCA9IHRoaXMudG9rZW5zLnN0cmluZ1ZhbHVlKCk7XG4gICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuVHJpbW1pbmdMZWZ0V2hpdGVzcGFjZSh0aGlzLmltcG9ydFByb2Nlc3Nvci5jbGFpbUltcG9ydENvZGUocGF0aCkpO1xuICAgIHJlbW92ZU1heWJlSW1wb3J0QXR0cmlidXRlcyh0aGlzLnRva2Vucyk7XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LnNlbWkpKSB7XG4gICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIH1cbiAgfVxuXG4gICBzaG91bGRFbGlkZUV4cG9ydGVkSWRlbnRpZmllcihuYW1lKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHRoaXMuaXNUeXBlU2NyaXB0VHJhbnNmb3JtRW5hYmxlZCAmJlxuICAgICAgIXRoaXMua2VlcFVudXNlZEltcG9ydHMgJiZcbiAgICAgICF0aGlzLmRlY2xhcmF0aW9uSW5mby52YWx1ZURlY2xhcmF0aW9ucy5oYXMobmFtZSlcbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/CJSImportTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ESMImportTransformer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/ESMImportTransformer.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ESMImportTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_elideImportEquals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/elideImportEquals */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/elideImportEquals.js\");\n/* harmony import */ var _util_getDeclarationInfo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/getDeclarationInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getDeclarationInfo.js\");\n/* harmony import */ var _util_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/getImportExportSpecifierInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getImportExportSpecifierInfo.js\");\n/* harmony import */ var _util_getNonTypeIdentifiers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/getNonTypeIdentifiers */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getNonTypeIdentifiers.js\");\n/* harmony import */ var _util_isExportFrom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isExportFrom */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isExportFrom.js\");\n/* harmony import */ var _util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/removeMaybeImportAttributes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/removeMaybeImportAttributes.js\");\n/* harmony import */ var _util_shouldElideDefaultExport__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/shouldElideDefaultExport */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/shouldElideDefaultExport.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Class for editing import statements when we are keeping the code as ESM. We still need to remove\n * type-only imports in TypeScript and Flow.\n */\nclass ESMImportTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_9__[\"default\"] {\n  \n  \n  \n\n  constructor(\n     tokens,\n     nameManager,\n     helperManager,\n     reactHotLoaderTransformer,\n     isTypeScriptTransformEnabled,\n     isFlowTransformEnabled,\n     keepUnusedImports,\n    options,\n  ) {\n    super();this.tokens = tokens;this.nameManager = nameManager;this.helperManager = helperManager;this.reactHotLoaderTransformer = reactHotLoaderTransformer;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.isFlowTransformEnabled = isFlowTransformEnabled;this.keepUnusedImports = keepUnusedImports;;\n    this.nonTypeIdentifiers =\n      isTypeScriptTransformEnabled && !keepUnusedImports\n        ? (0,_util_getNonTypeIdentifiers__WEBPACK_IMPORTED_MODULE_5__.getNonTypeIdentifiers)(tokens, options)\n        : new Set();\n    this.declarationInfo =\n      isTypeScriptTransformEnabled && !keepUnusedImports\n        ? (0,_util_getDeclarationInfo__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(tokens)\n        : _util_getDeclarationInfo__WEBPACK_IMPORTED_MODULE_3__.EMPTY_DECLARATION_INFO;\n    this.injectCreateRequireForImportRequire = Boolean(options.injectCreateRequireForImportRequire);\n  }\n\n  process() {\n    // TypeScript `import foo = require('foo');` should always just be translated to plain require.\n    if (this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq)) {\n      return this.processImportEquals();\n    }\n    if (\n      this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq) &&\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._type)\n    ) {\n      // import type T = require('T')\n      this.tokens.removeInitialToken();\n      // This construct is always exactly 8 tokens long, so remove the 7 remaining tokens.\n      for (let i = 0; i < 7; i++) {\n        this.tokens.removeToken();\n      }\n      return true;\n    }\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq)) {\n      this.tokens.replaceToken(\"module.exports\");\n      return true;\n    }\n    if (\n      this.tokens.matches5(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq) &&\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 2, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._type)\n    ) {\n      // export import type T = require('T')\n      this.tokens.removeInitialToken();\n      // This construct is always exactly 9 tokens long, so remove the 8 remaining tokens.\n      for (let i = 0; i < 8; i++) {\n        this.tokens.removeToken();\n      }\n      return true;\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._import)) {\n      return this.processImport();\n    }\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default)) {\n      return this.processExportDefault();\n    }\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL)) {\n      return this.processNamedExports();\n    }\n    if (\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name) &&\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._type)\n    ) {\n      // export type {a};\n      // export type {a as b};\n      // export type {a} from './b';\n      // export type * from './b';\n      // export type * as ns from './b';\n      this.tokens.removeInitialToken();\n      this.tokens.removeToken();\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL)) {\n        while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR)) {\n          this.tokens.removeToken();\n        }\n        this.tokens.removeToken();\n      } else {\n        // *\n        this.tokens.removeToken();\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._as)) {\n          // as\n          this.tokens.removeToken();\n          // ns\n          this.tokens.removeToken();\n        }\n      }\n      // Remove type re-export `... } from './T'`\n      if (\n        this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._from) &&\n        this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.string)\n      ) {\n        this.tokens.removeToken();\n        this.tokens.removeToken();\n        (0,_util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__.removeMaybeImportAttributes)(this.tokens);\n      }\n      return true;\n    }\n    return false;\n  }\n\n   processImportEquals() {\n    const importName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\n    if (this.shouldAutomaticallyElideImportedName(importName)) {\n      // If this name is only used as a type, elide the whole import.\n      (0,_util_elideImportEquals__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.tokens);\n    } else if (this.injectCreateRequireForImportRequire) {\n      // We're using require in an environment (Node ESM) that doesn't provide\n      // it as a global, so generate a helper to import it.\n      // import -> const\n      this.tokens.replaceToken(\"const\");\n      // Foo\n      this.tokens.copyToken();\n      // =\n      this.tokens.copyToken();\n      // require\n      this.tokens.replaceToken(this.helperManager.getHelperName(\"require\"));\n    } else {\n      // Otherwise, just switch `import` to `const`.\n      this.tokens.replaceToken(\"const\");\n    }\n    return true;\n  }\n\n   processImport() {\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenL)) {\n      // Dynamic imports don't need to be transformed.\n      return false;\n    }\n\n    const snapshot = this.tokens.snapshot();\n    const allImportsRemoved = this.removeImportTypeBindings();\n    if (allImportsRemoved) {\n      this.tokens.restoreToSnapshot(snapshot);\n      while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.string)) {\n        this.tokens.removeToken();\n      }\n      this.tokens.removeToken();\n      (0,_util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__.removeMaybeImportAttributes)(this.tokens);\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.semi)) {\n        this.tokens.removeToken();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Remove type bindings from this import, leaving the rest of the import intact.\n   *\n   * Return true if this import was ONLY types, and thus is eligible for removal. This will bail out\n   * of the replacement operation, so we can return early here.\n   */\n   removeImportTypeBindings() {\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._import);\n    if (\n      this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._type) &&\n      !this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma) &&\n      !this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._from)\n    ) {\n      // This is an \"import type\" statement, so exit early.\n      return true;\n    }\n\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.string)) {\n      // This is a bare import, so we should proceed with the import.\n      this.tokens.copyToken();\n      return false;\n    }\n\n    // Skip the \"module\" token in import reflection.\n    if (\n      this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._module) &&\n      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 2, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._from)\n    ) {\n      this.tokens.copyToken();\n    }\n\n    let foundNonTypeImport = false;\n    let foundAnyNamedImport = false;\n    let needsComma = false;\n\n    // Handle default import.\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name)) {\n      if (this.shouldAutomaticallyElideImportedName(this.tokens.identifierName())) {\n        this.tokens.removeToken();\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma)) {\n          this.tokens.removeToken();\n        }\n      } else {\n        foundNonTypeImport = true;\n        this.tokens.copyToken();\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma)) {\n          // We're in a statement like:\n          // import A, * as B from './A';\n          // or\n          // import A, {foo} from './A';\n          // where the `A` is being kept. The comma should be removed if an only\n          // if the next part of the import statement is elided, but that's hard\n          // to determine at this point in the code. Instead, always remove it\n          // and set a flag to add it back if necessary.\n          needsComma = true;\n          this.tokens.removeToken();\n        }\n      }\n    }\n\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.star)) {\n      if (this.shouldAutomaticallyElideImportedName(this.tokens.identifierNameAtRelativeIndex(2))) {\n        this.tokens.removeToken();\n        this.tokens.removeToken();\n        this.tokens.removeToken();\n      } else {\n        if (needsComma) {\n          this.tokens.appendCode(\",\");\n        }\n        foundNonTypeImport = true;\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.star);\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name);\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name);\n      }\n    } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL)) {\n      if (needsComma) {\n        this.tokens.appendCode(\",\");\n      }\n      this.tokens.copyToken();\n      while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR)) {\n        foundAnyNamedImport = true;\n        const specifierInfo = (0,_util_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.tokens);\n        if (\n          specifierInfo.isType ||\n          this.shouldAutomaticallyElideImportedName(specifierInfo.rightName)\n        ) {\n          while (this.tokens.currentIndex() < specifierInfo.endIndex) {\n            this.tokens.removeToken();\n          }\n          if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma)) {\n            this.tokens.removeToken();\n          }\n        } else {\n          foundNonTypeImport = true;\n          while (this.tokens.currentIndex() < specifierInfo.endIndex) {\n            this.tokens.copyToken();\n          }\n          if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma)) {\n            this.tokens.copyToken();\n          }\n        }\n      }\n      this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR);\n    }\n\n    if (this.keepUnusedImports) {\n      return false;\n    }\n    if (this.isTypeScriptTransformEnabled) {\n      return !foundNonTypeImport;\n    } else if (this.isFlowTransformEnabled) {\n      // In Flow, unlike TS, `import {} from 'foo';` preserves the import.\n      return foundAnyNamedImport && !foundNonTypeImport;\n    } else {\n      return false;\n    }\n  }\n\n   shouldAutomaticallyElideImportedName(name) {\n    return (\n      this.isTypeScriptTransformEnabled &&\n      !this.keepUnusedImports &&\n      !this.nonTypeIdentifiers.has(name)\n    );\n  }\n\n   processExportDefault() {\n    if (\n      (0,_util_shouldElideDefaultExport__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n        this.isTypeScriptTransformEnabled,\n        this.keepUnusedImports,\n        this.tokens,\n        this.declarationInfo,\n      )\n    ) {\n      // If the exported value is just an identifier and should be elided by TypeScript\n      // rules, then remove it entirely. It will always have the form `export default e`,\n      // where `e` is an identifier.\n      this.tokens.removeInitialToken();\n      this.tokens.removeToken();\n      this.tokens.removeToken();\n      return true;\n    }\n\n    const alreadyHasName =\n      this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._function, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name) ||\n      // export default async function\n      (this.tokens.matches5(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._function, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name) &&\n        this.tokens.matchesContextualAtIndex(\n          this.tokens.currentIndex() + 2,\n          _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._async,\n        )) ||\n      this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._class, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name) ||\n      this.tokens.matches5(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._abstract, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._class, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name);\n\n    if (!alreadyHasName && this.reactHotLoaderTransformer) {\n      // This is a plain \"export default E\" statement and we need to assign E to a variable.\n      // Change \"export default E\" to \"let _default; export default _default = E\"\n      const defaultVarName = this.nameManager.claimFreeName(\"_default\");\n      this.tokens.replaceToken(`let ${defaultVarName}; export`);\n      this.tokens.copyToken();\n      this.tokens.appendCode(` ${defaultVarName} =`);\n      this.reactHotLoaderTransformer.setExtractedDefaultExportName(defaultVarName);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle a statement with one of these forms:\n   * export {a, type b};\n   * export {c, type d} from 'foo';\n   *\n   * In both cases, any explicit type exports should be removed. In the first\n   * case, we also need to handle implicit export elision for names declared as\n   * types. In the second case, we must NOT do implicit named export elision,\n   * but we must remove the runtime import if all exports are type exports.\n   */\n   processNamedExports() {\n    if (!this.isTypeScriptTransformEnabled) {\n      return false;\n    }\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export);\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL);\n\n    const isReExport = (0,_util_isExportFrom__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.tokens);\n    let foundNonTypeExport = false;\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR)) {\n      const specifierInfo = (0,_util_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.tokens);\n      if (\n        specifierInfo.isType ||\n        (!isReExport && this.shouldElideExportedName(specifierInfo.leftName))\n      ) {\n        // Type export, so remove all tokens, including any comma.\n        while (this.tokens.currentIndex() < specifierInfo.endIndex) {\n          this.tokens.removeToken();\n        }\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma)) {\n          this.tokens.removeToken();\n        }\n      } else {\n        // Non-type export, so copy all tokens, including any comma.\n        foundNonTypeExport = true;\n        while (this.tokens.currentIndex() < specifierInfo.endIndex) {\n          this.tokens.copyToken();\n        }\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma)) {\n          this.tokens.copyToken();\n        }\n      }\n    }\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR);\n\n    if (!this.keepUnusedImports && isReExport && !foundNonTypeExport) {\n      // This is a type-only re-export, so skip evaluating the other module. Technically this\n      // leaves the statement as `export {}`, but that's ok since that's a no-op.\n      this.tokens.removeToken();\n      this.tokens.removeToken();\n      (0,_util_removeMaybeImportAttributes__WEBPACK_IMPORTED_MODULE_7__.removeMaybeImportAttributes)(this.tokens);\n    }\n\n    return true;\n  }\n\n  /**\n   * ESM elides all imports with the rule that we only elide if we see that it's\n   * a type and never see it as a value. This is in contrast to CJS, which\n   * elides imports that are completely unknown.\n   */\n   shouldElideExportedName(name) {\n    return (\n      this.isTypeScriptTransformEnabled &&\n      !this.keepUnusedImports &&\n      this.declarationInfo.typeDeclarations.has(name) &&\n      !this.declarationInfo.valueDeclarations.has(name)\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ESMImportTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/FlowTransformer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/FlowTransformer.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FlowTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\n\nclass FlowTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor(\n     rootTransformer,\n     tokens,\n     isImportsTransformEnabled,\n  ) {\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.isImportsTransformEnabled = isImportsTransformEnabled;;\n  }\n\n  process() {\n    if (\n      this.rootTransformer.processPossibleArrowParamEnd() ||\n      this.rootTransformer.processPossibleAsyncArrowWithTypeParams() ||\n      this.rootTransformer.processPossibleTypeRange()\n    ) {\n      return true;\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._enum)) {\n      this.processEnum();\n      return true;\n    }\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._enum)) {\n      this.processNamedExportEnum();\n      return true;\n    }\n    if (this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._enum)) {\n      this.processDefaultExportEnum();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle a declaration like:\n   * export enum E ...\n   *\n   * With this imports transform, this becomes:\n   * const E = [[enum]]; exports.E = E;\n   *\n   * otherwise, it becomes:\n   * export const E = [[enum]];\n   */\n  processNamedExportEnum() {\n    if (this.isImportsTransformEnabled) {\n      // export\n      this.tokens.removeInitialToken();\n      const enumName = this.tokens.identifierNameAtRelativeIndex(1);\n      this.processEnum();\n      this.tokens.appendCode(` exports.${enumName} = ${enumName};`);\n    } else {\n      this.tokens.copyToken();\n      this.processEnum();\n    }\n  }\n\n  /**\n   * Handle a declaration like:\n   * export default enum E\n   *\n   * With the imports transform, this becomes:\n   * const E = [[enum]]; exports.default = E;\n   *\n   * otherwise, it becomes:\n   * const E = [[enum]]; export default E;\n   */\n  processDefaultExportEnum() {\n    // export\n    this.tokens.removeInitialToken();\n    // default\n    this.tokens.removeToken();\n    const enumName = this.tokens.identifierNameAtRelativeIndex(1);\n    this.processEnum();\n    if (this.isImportsTransformEnabled) {\n      this.tokens.appendCode(` exports.default = ${enumName};`);\n    } else {\n      this.tokens.appendCode(` export default ${enumName};`);\n    }\n  }\n\n  /**\n   * Transpile flow enums to invoke the \"flow-enums-runtime\" library.\n   *\n   * Currently, the transpiled code always uses `require(\"flow-enums-runtime\")`,\n   * but if future flexibility is needed, we could expose a config option for\n   * this string (similar to configurable JSX). Even when targeting ESM, the\n   * default behavior of babel-plugin-transform-flow-enums is to use require\n   * rather than injecting an import.\n   *\n   * Flow enums are quite a bit simpler than TS enums and have some convenient\n   * constraints:\n   * - Element initializers must be either always present or always absent. That\n   *   means that we can use fixed lookahead on the first element (if any) and\n   *   assume that all elements are like that.\n   * - The right-hand side of an element initializer must be a literal value,\n   *   not a complex expression and not referencing other elements. That means\n   *   we can simply copy a single token.\n   *\n   * Enums can be broken up into three basic cases:\n   *\n   * Mirrored enums:\n   * enum E {A, B}\n   *   ->\n   * const E = require(\"flow-enums-runtime\").Mirrored([\"A\", \"B\"]);\n   *\n   * Initializer enums:\n   * enum E {A = 1, B = 2}\n   *   ->\n   * const E = require(\"flow-enums-runtime\")({A: 1, B: 2});\n   *\n   * Symbol enums:\n   * enum E of symbol {A, B}\n   *   ->\n   * const E = require(\"flow-enums-runtime\")({A: Symbol(\"A\"), B: Symbol(\"B\")});\n   *\n   * We can statically detect which of the three cases this is by looking at the\n   * \"of\" declaration (if any) and seeing if the first element has an initializer.\n   * Since the other transform details are so similar between the three cases, we\n   * use a single implementation and vary the transform within processEnumElement\n   * based on case.\n   */\n  processEnum() {\n    // enum E -> const E\n    this.tokens.replaceToken(\"const\");\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name);\n\n    let isSymbolEnum = false;\n    if (this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._of)) {\n      this.tokens.removeToken();\n      isSymbolEnum = this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._symbol);\n      this.tokens.removeToken();\n    }\n    const hasInitializers = this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq);\n    this.tokens.appendCode(' = require(\"flow-enums-runtime\")');\n\n    const isMirrored = !isSymbolEnum && !hasInitializers;\n    this.tokens.replaceTokenTrimmingLeftWhitespace(isMirrored ? \".Mirrored([\" : \"({\");\n\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR)) {\n      // ... is allowed at the end and has no runtime behavior.\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.ellipsis)) {\n        this.tokens.removeToken();\n        break;\n      }\n      this.processEnumElement(isSymbolEnum, hasInitializers);\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma)) {\n        this.tokens.copyToken();\n      }\n    }\n\n    this.tokens.replaceToken(isMirrored ? \"]);\" : \"});\");\n  }\n\n  /**\n   * Process an individual enum element, producing either an array element or an\n   * object element based on what type of enum this is.\n   */\n  processEnumElement(isSymbolEnum, hasInitializers) {\n    if (isSymbolEnum) {\n      // Symbol enums never have initializers and are expanded to object elements.\n      // A, -> A: Symbol(\"A\"),\n      const elementName = this.tokens.identifierName();\n      this.tokens.copyToken();\n      this.tokens.appendCode(`: Symbol(\"${elementName}\")`);\n    } else if (hasInitializers) {\n      // Initializers are expanded to object elements.\n      // A = 1, -> A: 1,\n      this.tokens.copyToken();\n      this.tokens.replaceTokenTrimmingLeftWhitespace(\":\");\n      this.tokens.copyToken();\n    } else {\n      // Enum elements without initializers become string literal array elements.\n      // A, -> \"A\",\n      this.tokens.replaceToken(`\"${this.tokens.identifierName()}\"`);\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/FlowTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/JSXTransformer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/JSXTransformer.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ JSXTransformer; },\n/* harmony export */   startsWithLowerCase: function() { return /* binding */ startsWithLowerCase; }\n/* harmony export */ });\n/* harmony import */ var _parser_plugins_jsx_xhtml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/plugins/jsx/xhtml */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/plugins/jsx/xhtml.js\");\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/util/charcodes */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/charcodes.js\");\n/* harmony import */ var _util_getJSXPragmaInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/getJSXPragmaInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getJSXPragmaInfo.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass JSXTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_5__[\"default\"] {\n  \n  \n  \n\n  // State for calculating the line number of each JSX tag in development.\n  __init() {this.lastLineNumber = 1}\n  __init2() {this.lastIndex = 0}\n\n  // In development, variable name holding the name of the current file.\n  __init3() {this.filenameVarName = null}\n  // Mapping of claimed names for imports in the automatic transform, e,g.\n  // {jsx: \"_jsx\"}. This determines which imports to generate in the prefix.\n  __init4() {this.esmAutomaticImportNameResolutions = {}}\n  // When automatically adding imports in CJS mode, we store the variable name\n  // holding the imported CJS module so we can require it in the prefix.\n  __init5() {this.cjsAutomaticModuleNameResolutions = {}}\n\n  constructor(\n     rootTransformer,\n     tokens,\n     importProcessor,\n     nameManager,\n     options,\n  ) {\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.nameManager = nameManager;this.options = options;JSXTransformer.prototype.__init.call(this);JSXTransformer.prototype.__init2.call(this);JSXTransformer.prototype.__init3.call(this);JSXTransformer.prototype.__init4.call(this);JSXTransformer.prototype.__init5.call(this);;\n    this.jsxPragmaInfo = (0,_util_getJSXPragmaInfo__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(options);\n    this.isAutomaticRuntime = options.jsxRuntime === \"automatic\";\n    this.jsxImportSource = options.jsxImportSource || \"react\";\n  }\n\n  process() {\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagStart)) {\n      this.processJSXTag();\n      return true;\n    }\n    return false;\n  }\n\n  getPrefixCode() {\n    let prefix = \"\";\n    if (this.filenameVarName) {\n      prefix += `const ${this.filenameVarName} = ${JSON.stringify(this.options.filePath || \"\")};`;\n    }\n    if (this.isAutomaticRuntime) {\n      if (this.importProcessor) {\n        // CJS mode: emit require statements for all modules that were referenced.\n        for (const [path, resolvedName] of Object.entries(this.cjsAutomaticModuleNameResolutions)) {\n          prefix += `var ${resolvedName} = require(\"${path}\");`;\n        }\n      } else {\n        // ESM mode: consolidate and emit import statements for referenced names.\n        const {createElement: createElementResolution, ...otherResolutions} =\n          this.esmAutomaticImportNameResolutions;\n        if (createElementResolution) {\n          prefix += `import {createElement as ${createElementResolution}} from \"${this.jsxImportSource}\";`;\n        }\n        const importSpecifiers = Object.entries(otherResolutions)\n          .map(([name, resolvedName]) => `${name} as ${resolvedName}`)\n          .join(\", \");\n        if (importSpecifiers) {\n          const importPath =\n            this.jsxImportSource + (this.options.production ? \"/jsx-runtime\" : \"/jsx-dev-runtime\");\n          prefix += `import {${importSpecifiers}} from \"${importPath}\";`;\n        }\n      }\n    }\n    return prefix;\n  }\n\n  processJSXTag() {\n    const {jsxRole, start} = this.tokens.currentToken();\n    // Calculate line number information at the very start (if in development\n    // mode) so that the information is guaranteed to be queried in token order.\n    const elementLocationCode = this.options.production ? null : this.getElementLocationCode(start);\n    if (this.isAutomaticRuntime && jsxRole !== _parser_tokenizer__WEBPACK_IMPORTED_MODULE_1__.JSXRole.KeyAfterPropSpread) {\n      this.transformTagToJSXFunc(elementLocationCode, jsxRole);\n    } else {\n      this.transformTagToCreateElement(elementLocationCode);\n    }\n  }\n\n  getElementLocationCode(firstTokenStart) {\n    const lineNumber = this.getLineNumberForIndex(firstTokenStart);\n    return `lineNumber: ${lineNumber}`;\n  }\n\n  /**\n   * Get the line number for this source position. This is calculated lazily and\n   * must be called in increasing order by index.\n   */\n  getLineNumberForIndex(index) {\n    const code = this.tokens.code;\n    while (this.lastIndex < index && this.lastIndex < code.length) {\n      if (code[this.lastIndex] === \"\\n\") {\n        this.lastLineNumber++;\n      }\n      this.lastIndex++;\n    }\n    return this.lastLineNumber;\n  }\n\n  /**\n   * Convert the current JSX element to a call to jsx, jsxs, or jsxDEV. This is\n   * the primary transformation for the automatic transform.\n   *\n   * Example:\n   * <div a={1} key={2}>Hello{x}</div>\n   * becomes\n   * jsxs('div', {a: 1, children: [\"Hello\", x]}, 2)\n   */\n  transformTagToJSXFunc(elementLocationCode, jsxRole) {\n    const isStatic = jsxRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_1__.JSXRole.StaticChildren;\n    // First tag is always jsxTagStart.\n    this.tokens.replaceToken(this.getJSXFuncInvocationCode(isStatic));\n\n    let keyCode = null;\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n      // Fragment syntax.\n      this.tokens.replaceToken(`${this.getFragmentCode()}, {`);\n      this.processAutomaticChildrenAndEndProps(jsxRole);\n    } else {\n      // Normal open tag or self-closing tag.\n      this.processTagIntro();\n      this.tokens.appendCode(\", {\");\n      keyCode = this.processProps(true);\n\n      if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.slash, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n        // Self-closing tag, no children to add, so close the props.\n        this.tokens.appendCode(\"}\");\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n        // Tag with children.\n        this.tokens.removeToken();\n        this.processAutomaticChildrenAndEndProps(jsxRole);\n      } else {\n        throw new Error(\"Expected either /> or > at the end of the tag.\");\n      }\n      // If a key was present, move it to its own arg. Note that moving code\n      // like this will cause line numbers to get out of sync within the JSX\n      // element if the key expression has a newline in it. This is unfortunate,\n      // but hopefully should be rare.\n      if (keyCode) {\n        this.tokens.appendCode(`, ${keyCode}`);\n      }\n    }\n    if (!this.options.production) {\n      // If the key wasn't already added, add it now so we can correctly set\n      // positional args for jsxDEV.\n      if (keyCode === null) {\n        this.tokens.appendCode(\", void 0\");\n      }\n      this.tokens.appendCode(`, ${isStatic}, ${this.getDevSource(elementLocationCode)}, this`);\n    }\n    // We're at the close-tag or the end of a self-closing tag, so remove\n    // everything else and close the function call.\n    this.tokens.removeInitialToken();\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n      this.tokens.removeToken();\n    }\n    this.tokens.replaceToken(\")\");\n  }\n\n  /**\n   * Convert the current JSX element to a createElement call. In the classic\n   * runtime, this is the only case. In the automatic runtime, this is called\n   * as a fallback in some situations.\n   *\n   * Example:\n   * <div a={1} key={2}>Hello{x}</div>\n   * becomes\n   * React.createElement('div', {a: 1, key: 2}, \"Hello\", x)\n   */\n  transformTagToCreateElement(elementLocationCode) {\n    // First tag is always jsxTagStart.\n    this.tokens.replaceToken(this.getCreateElementInvocationCode());\n\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n      // Fragment syntax.\n      this.tokens.replaceToken(`${this.getFragmentCode()}, null`);\n      this.processChildren(true);\n    } else {\n      // Normal open tag or self-closing tag.\n      this.processTagIntro();\n      this.processPropsObjectWithDevInfo(elementLocationCode);\n\n      if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.slash, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n        // Self-closing tag; no children to process.\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n        // Tag with children and a close-tag; process the children as args.\n        this.tokens.removeToken();\n        this.processChildren(true);\n      } else {\n        throw new Error(\"Expected either /> or > at the end of the tag.\");\n      }\n    }\n    // We're at the close-tag or the end of a self-closing tag, so remove\n    // everything else and close the function call.\n    this.tokens.removeInitialToken();\n    while (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd)) {\n      this.tokens.removeToken();\n    }\n    this.tokens.replaceToken(\")\");\n  }\n\n  /**\n   * Get the code for the relevant function for this context: jsx, jsxs,\n   * or jsxDEV. The following open-paren is included as well.\n   *\n   * These functions are only used for the automatic runtime, so they are always\n   * auto-imported, but the auto-import will be either CJS or ESM based on the\n   * target module format.\n   */\n  getJSXFuncInvocationCode(isStatic) {\n    if (this.options.production) {\n      if (isStatic) {\n        return this.claimAutoImportedFuncInvocation(\"jsxs\", \"/jsx-runtime\");\n      } else {\n        return this.claimAutoImportedFuncInvocation(\"jsx\", \"/jsx-runtime\");\n      }\n    } else {\n      return this.claimAutoImportedFuncInvocation(\"jsxDEV\", \"/jsx-dev-runtime\");\n    }\n  }\n\n  /**\n   * Return the code to use for the createElement function, e.g.\n   * `React.createElement`, including the following open-paren.\n   *\n   * This is the main function to use for the classic runtime. For the\n   * automatic runtime, this function is used as a fallback function to\n   * preserve behavior when there is a prop spread followed by an explicit\n   * key. In that automatic runtime case, the function should be automatically\n   * imported.\n   */\n  getCreateElementInvocationCode() {\n    if (this.isAutomaticRuntime) {\n      return this.claimAutoImportedFuncInvocation(\"createElement\", \"\");\n    } else {\n      const {jsxPragmaInfo} = this;\n      const resolvedPragmaBaseName = this.importProcessor\n        ? this.importProcessor.getIdentifierReplacement(jsxPragmaInfo.base) || jsxPragmaInfo.base\n        : jsxPragmaInfo.base;\n      return `${resolvedPragmaBaseName}${jsxPragmaInfo.suffix}(`;\n    }\n  }\n\n  /**\n   * Return the code to use as the component when compiling a shorthand\n   * fragment, e.g. `React.Fragment`.\n   *\n   * This may be called from either the classic or automatic runtime, and\n   * the value should be auto-imported for the automatic runtime.\n   */\n  getFragmentCode() {\n    if (this.isAutomaticRuntime) {\n      return this.claimAutoImportedName(\n        \"Fragment\",\n        this.options.production ? \"/jsx-runtime\" : \"/jsx-dev-runtime\",\n      );\n    } else {\n      const {jsxPragmaInfo} = this;\n      const resolvedFragmentPragmaBaseName = this.importProcessor\n        ? this.importProcessor.getIdentifierReplacement(jsxPragmaInfo.fragmentBase) ||\n          jsxPragmaInfo.fragmentBase\n        : jsxPragmaInfo.fragmentBase;\n      return resolvedFragmentPragmaBaseName + jsxPragmaInfo.fragmentSuffix;\n    }\n  }\n\n  /**\n   * Return code that invokes the given function.\n   *\n   * When the imports transform is enabled, use the CJSImportTransformer\n   * strategy of using `.call(void 0, ...` to avoid passing a `this` value in a\n   * situation that would otherwise look like a method call.\n   */\n  claimAutoImportedFuncInvocation(funcName, importPathSuffix) {\n    const funcCode = this.claimAutoImportedName(funcName, importPathSuffix);\n    if (this.importProcessor) {\n      return `${funcCode}.call(void 0, `;\n    } else {\n      return `${funcCode}(`;\n    }\n  }\n\n  claimAutoImportedName(funcName, importPathSuffix) {\n    if (this.importProcessor) {\n      // CJS mode: claim a name for the module and mark it for import.\n      const path = this.jsxImportSource + importPathSuffix;\n      if (!this.cjsAutomaticModuleNameResolutions[path]) {\n        this.cjsAutomaticModuleNameResolutions[path] =\n          this.importProcessor.getFreeIdentifierForPath(path);\n      }\n      return `${this.cjsAutomaticModuleNameResolutions[path]}.${funcName}`;\n    } else {\n      // ESM mode: claim a name for this function and add it to the names that\n      // should be auto-imported when the prefix is generated.\n      if (!this.esmAutomaticImportNameResolutions[funcName]) {\n        this.esmAutomaticImportNameResolutions[funcName] = this.nameManager.claimFreeName(\n          `_${funcName}`,\n        );\n      }\n      return this.esmAutomaticImportNameResolutions[funcName];\n    }\n  }\n\n  /**\n   * Process the first part of a tag, before any props.\n   */\n  processTagIntro() {\n    // Walk forward until we see one of these patterns:\n    // jsxName to start the first prop, preceded by another jsxName to end the tag name.\n    // jsxName to start the first prop, preceded by greaterThan to end the type argument.\n    // [open brace] to start the first prop.\n    // [jsxTagEnd] to end the open-tag.\n    // [slash, jsxTagEnd] to end the self-closing tag.\n    let introEnd = this.tokens.currentIndex() + 1;\n    while (\n      this.tokens.tokens[introEnd].isType ||\n      (!this.tokens.matches2AtIndex(introEnd - 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxName, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxName) &&\n        !this.tokens.matches2AtIndex(introEnd - 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.greaterThan, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxName) &&\n        !this.tokens.matches1AtIndex(introEnd, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL) &&\n        !this.tokens.matches1AtIndex(introEnd, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd) &&\n        !this.tokens.matches2AtIndex(introEnd, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.slash, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagEnd))\n    ) {\n      introEnd++;\n    }\n    if (introEnd === this.tokens.currentIndex() + 1) {\n      const tagName = this.tokens.identifierName();\n      if (startsWithLowerCase(tagName)) {\n        this.tokens.replaceToken(`'${tagName}'`);\n      }\n    }\n    while (this.tokens.currentIndex() < introEnd) {\n      this.rootTransformer.processToken();\n    }\n  }\n\n  /**\n   * Starting at the beginning of the props, add the props argument to\n   * React.createElement, including the comma before it.\n   */\n  processPropsObjectWithDevInfo(elementLocationCode) {\n    const devProps = this.options.production\n      ? \"\"\n      : `__self: this, __source: ${this.getDevSource(elementLocationCode)}`;\n    if (!this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxName) && !this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n      if (devProps) {\n        this.tokens.appendCode(`, {${devProps}}`);\n      } else {\n        this.tokens.appendCode(`, null`);\n      }\n      return;\n    }\n    this.tokens.appendCode(`, {`);\n    this.processProps(false);\n    if (devProps) {\n      this.tokens.appendCode(` ${devProps}}`);\n    } else {\n      this.tokens.appendCode(\"}\");\n    }\n  }\n\n  /**\n   * Transform the core part of the props, assuming that a { has already been\n   * inserted before us and that a } will be inserted after us.\n   *\n   * If extractKeyCode is true (i.e. when using any jsx... function), any prop\n   * named \"key\" has its code captured and returned rather than being emitted to\n   * the output code. This shifts line numbers, and emitting the code later will\n   * correct line numbers again. If no key is found or if extractKeyCode is\n   * false, this function returns null.\n   */\n  processProps(extractKeyCode) {\n    let keyCode = null;\n    while (true) {\n      if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxName, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.eq)) {\n        // This is a regular key={value} or key=\"value\" prop.\n        const propName = this.tokens.identifierName();\n        if (extractKeyCode && propName === \"key\") {\n          if (keyCode !== null) {\n            // The props list has multiple keys. Different implementations are\n            // inconsistent about what to do here: as of this writing, Babel and\n            // swc keep the *last* key and completely remove the rest, while\n            // TypeScript uses the *first* key and leaves the others as regular\n            // props. The React team collaborated with Babel on the\n            // implementation of this behavior, so presumably the Babel behavior\n            // is the one to use.\n            // Since we won't ever be emitting the previous key code, we need to\n            // at least emit its newlines here so that the line numbers match up\n            // in the long run.\n            this.tokens.appendCode(keyCode.replace(/[^\\n]/g, \"\"));\n          }\n          // key\n          this.tokens.removeToken();\n          // =\n          this.tokens.removeToken();\n          const snapshot = this.tokens.snapshot();\n          this.processPropValue();\n          keyCode = this.tokens.dangerouslyGetAndRemoveCodeSinceSnapshot(snapshot);\n          // Don't add a comma\n          continue;\n        } else {\n          this.processPropName(propName);\n          this.tokens.replaceToken(\": \");\n          this.processPropValue();\n        }\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxName)) {\n        // This is a shorthand prop like <input disabled />.\n        const propName = this.tokens.identifierName();\n        this.processPropName(propName);\n        this.tokens.appendCode(\": true\");\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n        // This is prop spread, like <div {...getProps()}>, which we can pass\n        // through fairly directly as an object spread.\n        this.tokens.replaceToken(\"\");\n        this.rootTransformer.processBalancedCode();\n        this.tokens.replaceToken(\"\");\n      } else {\n        break;\n      }\n      this.tokens.appendCode(\",\");\n    }\n    return keyCode;\n  }\n\n  processPropName(propName) {\n    if (propName.includes(\"-\")) {\n      this.tokens.replaceToken(`'${propName}'`);\n    } else {\n      this.tokens.copyToken();\n    }\n  }\n\n  processPropValue() {\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n      this.tokens.replaceToken(\"\");\n      this.rootTransformer.processBalancedCode();\n      this.tokens.replaceToken(\"\");\n    } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagStart)) {\n      this.processJSXTag();\n    } else {\n      this.processStringPropValue();\n    }\n  }\n\n  processStringPropValue() {\n    const token = this.tokens.currentToken();\n    const valueCode = this.tokens.code.slice(token.start + 1, token.end - 1);\n    const replacementCode = formatJSXTextReplacement(valueCode);\n    const literalCode = formatJSXStringValueLiteral(valueCode);\n    this.tokens.replaceToken(literalCode + replacementCode);\n  }\n\n  /**\n   * Starting in the middle of the props object literal, produce an additional\n   * prop for the children and close the object literal.\n   */\n  processAutomaticChildrenAndEndProps(jsxRole) {\n    if (jsxRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_1__.JSXRole.StaticChildren) {\n      this.tokens.appendCode(\" children: [\");\n      this.processChildren(false);\n      this.tokens.appendCode(\"]}\");\n    } else {\n      // The parser information tells us whether we will see a real child or if\n      // all remaining children (if any) will resolve to empty. If there are no\n      // non-empty children, don't emit a children prop at all, but still\n      // process children so that we properly transform the code into nothing.\n      if (jsxRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_1__.JSXRole.OneChild) {\n        this.tokens.appendCode(\" children: \");\n      }\n      this.processChildren(false);\n      this.tokens.appendCode(\"}\");\n    }\n  }\n\n  /**\n   * Transform children into a comma-separated list, which will be either\n   * arguments to createElement or array elements of a children prop.\n   */\n  processChildren(needsInitialComma) {\n    let needsComma = needsInitialComma;\n    while (true) {\n      if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagStart, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.slash)) {\n        // Closing tag, so no more children.\n        return;\n      }\n      let didEmitElement = false;\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL)) {\n        if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceL, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.braceR)) {\n          // Empty interpolations and comment-only interpolations are allowed\n          // and don't create an extra child arg.\n          this.tokens.replaceToken(\"\");\n          this.tokens.replaceToken(\"\");\n        } else {\n          // Interpolated expression.\n          this.tokens.replaceToken(needsComma ? \", \" : \"\");\n          this.rootTransformer.processBalancedCode();\n          this.tokens.replaceToken(\"\");\n          didEmitElement = true;\n        }\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxTagStart)) {\n        // Child JSX element\n        this.tokens.appendCode(needsComma ? \", \" : \"\");\n        this.processJSXTag();\n        didEmitElement = true;\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxText) || this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_2__.TokenType.jsxEmptyText)) {\n        didEmitElement = this.processChildTextElement(needsComma);\n      } else {\n        throw new Error(\"Unexpected token when processing JSX children.\");\n      }\n      if (didEmitElement) {\n        needsComma = true;\n      }\n    }\n  }\n\n  /**\n   * Turn a JSX text element into a string literal, or nothing at all if the JSX\n   * text resolves to the empty string.\n   *\n   * Returns true if a string literal is emitted, false otherwise.\n   */\n  processChildTextElement(needsComma) {\n    const token = this.tokens.currentToken();\n    const valueCode = this.tokens.code.slice(token.start, token.end);\n    const replacementCode = formatJSXTextReplacement(valueCode);\n    const literalCode = formatJSXTextLiteral(valueCode);\n    if (literalCode === '\"\"') {\n      this.tokens.replaceToken(replacementCode);\n      return false;\n    } else {\n      this.tokens.replaceToken(`${needsComma ? \", \" : \"\"}${literalCode}${replacementCode}`);\n      return true;\n    }\n  }\n\n  getDevSource(elementLocationCode) {\n    return `{fileName: ${this.getFilenameVarName()}, ${elementLocationCode}}`;\n  }\n\n  getFilenameVarName() {\n    if (!this.filenameVarName) {\n      this.filenameVarName = this.nameManager.claimFreeName(\"_jsxFileName\");\n    }\n    return this.filenameVarName;\n  }\n}\n\n/**\n * Spec for identifiers: https://tc39.github.io/ecma262/#prod-IdentifierStart.\n *\n * Really only treat anything starting with a-z as tag names.  `_`, `$`, `é`\n * should be treated as component names\n */\nfunction startsWithLowerCase(s) {\n  const firstChar = s.charCodeAt(0);\n  return firstChar >= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.lowercaseA && firstChar <= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.lowercaseZ;\n}\n\n/**\n * Turn the given jsxText string into a JS string literal. Leading and trailing\n * whitespace on lines is removed, except immediately after the open-tag and\n * before the close-tag. Empty lines are completely removed, and spaces are\n * added between lines after that.\n *\n * We use JSON.stringify to introduce escape characters as necessary, and trim\n * the start and end of each line and remove blank lines.\n */\nfunction formatJSXTextLiteral(text) {\n  let result = \"\";\n  let whitespace = \"\";\n\n  let isInInitialLineWhitespace = false;\n  let seenNonWhitespace = false;\n  for (let i = 0; i < text.length; i++) {\n    const c = text[i];\n    if (c === \" \" || c === \"\\t\" || c === \"\\r\") {\n      if (!isInInitialLineWhitespace) {\n        whitespace += c;\n      }\n    } else if (c === \"\\n\") {\n      whitespace = \"\";\n      isInInitialLineWhitespace = true;\n    } else {\n      if (seenNonWhitespace && isInInitialLineWhitespace) {\n        result += \" \";\n      }\n      result += whitespace;\n      whitespace = \"\";\n      if (c === \"&\") {\n        const {entity, newI} = processEntity(text, i + 1);\n        i = newI - 1;\n        result += entity;\n      } else {\n        result += c;\n      }\n      seenNonWhitespace = true;\n      isInInitialLineWhitespace = false;\n    }\n  }\n  if (!isInInitialLineWhitespace) {\n    result += whitespace;\n  }\n  return JSON.stringify(result);\n}\n\n/**\n * Produce the code that should be printed after the JSX text string literal,\n * with most content removed, but all newlines preserved and all spacing at the\n * end preserved.\n */\nfunction formatJSXTextReplacement(text) {\n  let numNewlines = 0;\n  let numSpaces = 0;\n  for (const c of text) {\n    if (c === \"\\n\") {\n      numNewlines++;\n      numSpaces = 0;\n    } else if (c === \" \") {\n      numSpaces++;\n    }\n  }\n  return \"\\n\".repeat(numNewlines) + \" \".repeat(numSpaces);\n}\n\n/**\n * Format a string in the value position of a JSX prop.\n *\n * Use the same implementation as convertAttribute from\n * babel-helper-builder-react-jsx.\n */\nfunction formatJSXStringValueLiteral(text) {\n  let result = \"\";\n  for (let i = 0; i < text.length; i++) {\n    const c = text[i];\n    if (c === \"\\n\") {\n      if (/\\s/.test(text[i + 1])) {\n        result += \" \";\n        while (i < text.length && /\\s/.test(text[i + 1])) {\n          i++;\n        }\n      } else {\n        result += \"\\n\";\n      }\n    } else if (c === \"&\") {\n      const {entity, newI} = processEntity(text, i + 1);\n      result += entity;\n      i = newI - 1;\n    } else {\n      result += c;\n    }\n  }\n  return JSON.stringify(result);\n}\n\n/**\n * Starting at a &, see if there's an HTML entity (specified by name, decimal\n * char code, or hex char code) and return it if so.\n *\n * Modified from jsxReadString in babel-parser.\n */\nfunction processEntity(text, indexAfterAmpersand) {\n  let str = \"\";\n  let count = 0;\n  let entity;\n  let i = indexAfterAmpersand;\n\n  if (text[i] === \"#\") {\n    let radix = 10;\n    i++;\n    let numStart;\n    if (text[i] === \"x\") {\n      radix = 16;\n      i++;\n      numStart = i;\n      while (i < text.length && isHexDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    } else {\n      numStart = i;\n      while (i < text.length && isDecimalDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text[i] === \";\") {\n      const numStr = text.slice(numStart, i);\n      if (numStr) {\n        i++;\n        entity = String.fromCodePoint(parseInt(numStr, radix));\n      }\n    }\n  } else {\n    while (i < text.length && count++ < 10) {\n      const ch = text[i];\n      i++;\n      if (ch === \";\") {\n        entity = _parser_plugins_jsx_xhtml__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(str);\n        break;\n      }\n      str += ch;\n    }\n  }\n\n  if (!entity) {\n    return {entity: \"&\", newI: indexAfterAmpersand};\n  }\n  return {entity, newI: i};\n}\n\nfunction isDecimalDigit(code) {\n  return code >= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.digit0 && code <= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.digit9;\n}\n\nfunction isHexDigit(code) {\n  return (\n    (code >= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.digit0 && code <= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.digit9) ||\n    (code >= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.lowercaseA && code <= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.lowercaseF) ||\n    (code >= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.uppercaseA && code <= _parser_util_charcodes__WEBPACK_IMPORTED_MODULE_3__.charCodes.uppercaseF)\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9KU1hUcmFuc2Zvcm1lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUd3RDtBQUNaO0FBQ2M7QUFDUDs7QUFFUzs7QUFFcEI7O0FBRXpCLDZCQUE2QixvREFBVztBQUN2RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZO0FBQ1osYUFBYTs7QUFFYjtBQUNBLGFBQWE7QUFDYjtBQUNBLE1BQU0sWUFBWTtBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVDQUF1QyxxQkFBcUIsdUNBQXVDLCtCQUErQix1QkFBdUIsMkNBQTJDLDRDQUE0Qyw0Q0FBNEMsNENBQTRDO0FBQ3BWLHlCQUF5QixrRUFBZ0I7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNCQUFzQixJQUFJLDZDQUE2QztBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGNBQWMsYUFBYSxLQUFLLEdBQUc7QUFDOUQ7QUFDQSxRQUFRO0FBQ1I7QUFDQSxlQUFlLDZEQUE2RDtBQUM1RTtBQUNBO0FBQ0EsNkJBQTZCLG1CQUFtQiwwQkFBMEIsUUFBUSxxQkFBcUIsRUFBRTtBQUN6RztBQUNBO0FBQ0EsNENBQTRDLE1BQU0sS0FBSyxhQUFhO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLEVBQUUsbUJBQW1CLFFBQVEsV0FBVyxFQUFFO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0Msc0RBQU87QUFDdEQ7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEdBQUcsS0FBSyxFQUFFLE9BQU8sRUFBRTtBQUNoQztBQUNBLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQTtBQUNBLGlDQUFpQyxzREFBTztBQUN4QztBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0Esa0NBQWtDLHVCQUF1QixHQUFHO0FBQzVEO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7O0FBRUEsK0JBQStCLDhEQUFFLFFBQVEsOERBQUU7QUFDM0M7QUFDQSxpQ0FBaUM7QUFDakMsUUFBUSw4QkFBOEIsOERBQUU7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFFBQVE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxTQUFTLElBQUksdUNBQXVDO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDhEQUFFO0FBQ25DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsR0FBRyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ2hDO0FBQ0EsaUNBQWlDLGFBQWE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0Esa0NBQWtDLHVCQUF1QjtBQUN6RDtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCLDhEQUFFLFFBQVEsOERBQUU7QUFDM0MsNkJBQTZCO0FBQzdCLFFBQVEsOEJBQThCLDhEQUFFO0FBQ3hDLDhDQUE4QztBQUM5QztBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw4REFBRTtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1QkFBdUIsRUFBRSxxQkFBcUI7QUFDOUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QixNQUFNO0FBQ04sZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUE2QyxHQUFHLFNBQVM7QUFDekUsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsOERBQUUsVUFBVSw4REFBRTtBQUNoRSxtREFBbUQsOERBQUUsY0FBYyw4REFBRTtBQUNyRSwrQ0FBK0MsOERBQUU7QUFDakQsK0NBQStDLDhEQUFFO0FBQ2pELCtDQUErQyw4REFBRSxRQUFRLDhEQUFFO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxRQUFRO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyx1Q0FBdUM7QUFDMUUsOEJBQThCLDhEQUFFLG1DQUFtQyw4REFBRTtBQUNyRTtBQUNBLG1DQUFtQyxFQUFFLFVBQVU7QUFDL0MsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxpQ0FBaUMsVUFBVTtBQUMzQyxNQUFNO0FBQ04sK0JBQStCO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQSw2REFBNkQ7QUFDN0QscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDhEQUFFLFVBQVUsOERBQUU7QUFDN0Msa0NBQWtDLE9BQU87QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4QkFBOEIsOERBQUU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhCQUE4Qiw4REFBRTtBQUN4QywyQ0FBMkMsY0FBYztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2QkFBNkIsOERBQUU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsTUFBTSw4QkFBOEIsOERBQUU7QUFDdEM7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0RBQU87QUFDM0I7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsOERBQUUsY0FBYyw4REFBRTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw4REFBRTtBQUNqQyxpQ0FBaUMsOERBQUUsU0FBUyw4REFBRTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhCQUE4Qiw4REFBRTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOEJBQThCLDhEQUFFLGtDQUFrQyw4REFBRTtBQUM1RTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLGtDQUFrQyx1QkFBdUIsRUFBRSxZQUFZLEVBQUUsZ0JBQWdCO0FBQ3pGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsWUFBWSwwQkFBMEIsSUFBSSxxQkFBcUI7QUFDNUU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHNCQUFzQiw2REFBUyw0QkFBNEIsNkRBQVM7QUFDcEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ04sYUFBYSxjQUFjO0FBQzNCO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLGlCQUFpQixpRUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0EsaUJBQWlCLDZEQUFTLG1CQUFtQiw2REFBUztBQUN0RDs7QUFFQTtBQUNBO0FBQ0EsYUFBYSw2REFBUyxtQkFBbUIsNkRBQVM7QUFDbEQsYUFBYSw2REFBUyx1QkFBdUIsNkRBQVM7QUFDdEQsYUFBYSw2REFBUyx1QkFBdUIsNkRBQVM7QUFDdEQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS90cmFuc2Zvcm1lcnMvSlNYVHJhbnNmb3JtZXIuanM/OGMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5pbXBvcnQgWEhUTUxFbnRpdGllcyBmcm9tIFwiLi4vcGFyc2VyL3BsdWdpbnMvanN4L3hodG1sXCI7XG5pbXBvcnQge0pTWFJvbGV9IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyXCI7XG5pbXBvcnQge1Rva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIvdHlwZXNcIjtcbmltcG9ydCB7Y2hhckNvZGVzfSBmcm9tIFwiLi4vcGFyc2VyL3V0aWwvY2hhcmNvZGVzXCI7XG5cbmltcG9ydCBnZXRKU1hQcmFnbWFJbmZvLCB7fSBmcm9tIFwiLi4vdXRpbC9nZXRKU1hQcmFnbWFJbmZvXCI7XG5cbmltcG9ydCBUcmFuc2Zvcm1lciBmcm9tIFwiLi9UcmFuc2Zvcm1lclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBKU1hUcmFuc2Zvcm1lciBleHRlbmRzIFRyYW5zZm9ybWVyIHtcbiAgXG4gIFxuICBcblxuICAvLyBTdGF0ZSBmb3IgY2FsY3VsYXRpbmcgdGhlIGxpbmUgbnVtYmVyIG9mIGVhY2ggSlNYIHRhZyBpbiBkZXZlbG9wbWVudC5cbiAgX19pbml0KCkge3RoaXMubGFzdExpbmVOdW1iZXIgPSAxfVxuICBfX2luaXQyKCkge3RoaXMubGFzdEluZGV4ID0gMH1cblxuICAvLyBJbiBkZXZlbG9wbWVudCwgdmFyaWFibGUgbmFtZSBob2xkaW5nIHRoZSBuYW1lIG9mIHRoZSBjdXJyZW50IGZpbGUuXG4gIF9faW5pdDMoKSB7dGhpcy5maWxlbmFtZVZhck5hbWUgPSBudWxsfVxuICAvLyBNYXBwaW5nIG9mIGNsYWltZWQgbmFtZXMgZm9yIGltcG9ydHMgaW4gdGhlIGF1dG9tYXRpYyB0cmFuc2Zvcm0sIGUsZy5cbiAgLy8ge2pzeDogXCJfanN4XCJ9LiBUaGlzIGRldGVybWluZXMgd2hpY2ggaW1wb3J0cyB0byBnZW5lcmF0ZSBpbiB0aGUgcHJlZml4LlxuICBfX2luaXQ0KCkge3RoaXMuZXNtQXV0b21hdGljSW1wb3J0TmFtZVJlc29sdXRpb25zID0ge319XG4gIC8vIFdoZW4gYXV0b21hdGljYWxseSBhZGRpbmcgaW1wb3J0cyBpbiBDSlMgbW9kZSwgd2Ugc3RvcmUgdGhlIHZhcmlhYmxlIG5hbWVcbiAgLy8gaG9sZGluZyB0aGUgaW1wb3J0ZWQgQ0pTIG1vZHVsZSBzbyB3ZSBjYW4gcmVxdWlyZSBpdCBpbiB0aGUgcHJlZml4LlxuICBfX2luaXQ1KCkge3RoaXMuY2pzQXV0b21hdGljTW9kdWxlTmFtZVJlc29sdXRpb25zID0ge319XG5cbiAgY29uc3RydWN0b3IoXG4gICAgIHJvb3RUcmFuc2Zvcm1lcixcbiAgICAgdG9rZW5zLFxuICAgICBpbXBvcnRQcm9jZXNzb3IsXG4gICAgIG5hbWVNYW5hZ2VyLFxuICAgICBvcHRpb25zLFxuICApIHtcbiAgICBzdXBlcigpO3RoaXMucm9vdFRyYW5zZm9ybWVyID0gcm9vdFRyYW5zZm9ybWVyO3RoaXMudG9rZW5zID0gdG9rZW5zO3RoaXMuaW1wb3J0UHJvY2Vzc29yID0gaW1wb3J0UHJvY2Vzc29yO3RoaXMubmFtZU1hbmFnZXIgPSBuYW1lTWFuYWdlcjt0aGlzLm9wdGlvbnMgPSBvcHRpb25zO0pTWFRyYW5zZm9ybWVyLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtKU1hUcmFuc2Zvcm1lci5wcm90b3R5cGUuX19pbml0Mi5jYWxsKHRoaXMpO0pTWFRyYW5zZm9ybWVyLnByb3RvdHlwZS5fX2luaXQzLmNhbGwodGhpcyk7SlNYVHJhbnNmb3JtZXIucHJvdG90eXBlLl9faW5pdDQuY2FsbCh0aGlzKTtKU1hUcmFuc2Zvcm1lci5wcm90b3R5cGUuX19pbml0NS5jYWxsKHRoaXMpOztcbiAgICB0aGlzLmpzeFByYWdtYUluZm8gPSBnZXRKU1hQcmFnbWFJbmZvKG9wdGlvbnMpO1xuICAgIHRoaXMuaXNBdXRvbWF0aWNSdW50aW1lID0gb3B0aW9ucy5qc3hSdW50aW1lID09PSBcImF1dG9tYXRpY1wiO1xuICAgIHRoaXMuanN4SW1wb3J0U291cmNlID0gb3B0aW9ucy5qc3hJbXBvcnRTb3VyY2UgfHwgXCJyZWFjdFwiO1xuICB9XG5cbiAgcHJvY2VzcygpIHtcbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuanN4VGFnU3RhcnQpKSB7XG4gICAgICB0aGlzLnByb2Nlc3NKU1hUYWcoKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBnZXRQcmVmaXhDb2RlKCkge1xuICAgIGxldCBwcmVmaXggPSBcIlwiO1xuICAgIGlmICh0aGlzLmZpbGVuYW1lVmFyTmFtZSkge1xuICAgICAgcHJlZml4ICs9IGBjb25zdCAke3RoaXMuZmlsZW5hbWVWYXJOYW1lfSA9ICR7SlNPTi5zdHJpbmdpZnkodGhpcy5vcHRpb25zLmZpbGVQYXRoIHx8IFwiXCIpfTtgO1xuICAgIH1cbiAgICBpZiAodGhpcy5pc0F1dG9tYXRpY1J1bnRpbWUpIHtcbiAgICAgIGlmICh0aGlzLmltcG9ydFByb2Nlc3Nvcikge1xuICAgICAgICAvLyBDSlMgbW9kZTogZW1pdCByZXF1aXJlIHN0YXRlbWVudHMgZm9yIGFsbCBtb2R1bGVzIHRoYXQgd2VyZSByZWZlcmVuY2VkLlxuICAgICAgICBmb3IgKGNvbnN0IFtwYXRoLCByZXNvbHZlZE5hbWVdIG9mIE9iamVjdC5lbnRyaWVzKHRoaXMuY2pzQXV0b21hdGljTW9kdWxlTmFtZVJlc29sdXRpb25zKSkge1xuICAgICAgICAgIHByZWZpeCArPSBgdmFyICR7cmVzb2x2ZWROYW1lfSA9IHJlcXVpcmUoXCIke3BhdGh9XCIpO2A7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEVTTSBtb2RlOiBjb25zb2xpZGF0ZSBhbmQgZW1pdCBpbXBvcnQgc3RhdGVtZW50cyBmb3IgcmVmZXJlbmNlZCBuYW1lcy5cbiAgICAgICAgY29uc3Qge2NyZWF0ZUVsZW1lbnQ6IGNyZWF0ZUVsZW1lbnRSZXNvbHV0aW9uLCAuLi5vdGhlclJlc29sdXRpb25zfSA9XG4gICAgICAgICAgdGhpcy5lc21BdXRvbWF0aWNJbXBvcnROYW1lUmVzb2x1dGlvbnM7XG4gICAgICAgIGlmIChjcmVhdGVFbGVtZW50UmVzb2x1dGlvbikge1xuICAgICAgICAgIHByZWZpeCArPSBgaW1wb3J0IHtjcmVhdGVFbGVtZW50IGFzICR7Y3JlYXRlRWxlbWVudFJlc29sdXRpb259fSBmcm9tIFwiJHt0aGlzLmpzeEltcG9ydFNvdXJjZX1cIjtgO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGltcG9ydFNwZWNpZmllcnMgPSBPYmplY3QuZW50cmllcyhvdGhlclJlc29sdXRpb25zKVxuICAgICAgICAgIC5tYXAoKFtuYW1lLCByZXNvbHZlZE5hbWVdKSA9PiBgJHtuYW1lfSBhcyAke3Jlc29sdmVkTmFtZX1gKVxuICAgICAgICAgIC5qb2luKFwiLCBcIik7XG4gICAgICAgIGlmIChpbXBvcnRTcGVjaWZpZXJzKSB7XG4gICAgICAgICAgY29uc3QgaW1wb3J0UGF0aCA9XG4gICAgICAgICAgICB0aGlzLmpzeEltcG9ydFNvdXJjZSArICh0aGlzLm9wdGlvbnMucHJvZHVjdGlvbiA/IFwiL2pzeC1ydW50aW1lXCIgOiBcIi9qc3gtZGV2LXJ1bnRpbWVcIik7XG4gICAgICAgICAgcHJlZml4ICs9IGBpbXBvcnQgeyR7aW1wb3J0U3BlY2lmaWVyc319IGZyb20gXCIke2ltcG9ydFBhdGh9XCI7YDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJlZml4O1xuICB9XG5cbiAgcHJvY2Vzc0pTWFRhZygpIHtcbiAgICBjb25zdCB7anN4Um9sZSwgc3RhcnR9ID0gdGhpcy50b2tlbnMuY3VycmVudFRva2VuKCk7XG4gICAgLy8gQ2FsY3VsYXRlIGxpbmUgbnVtYmVyIGluZm9ybWF0aW9uIGF0IHRoZSB2ZXJ5IHN0YXJ0IChpZiBpbiBkZXZlbG9wbWVudFxuICAgIC8vIG1vZGUpIHNvIHRoYXQgdGhlIGluZm9ybWF0aW9uIGlzIGd1YXJhbnRlZWQgdG8gYmUgcXVlcmllZCBpbiB0b2tlbiBvcmRlci5cbiAgICBjb25zdCBlbGVtZW50TG9jYXRpb25Db2RlID0gdGhpcy5vcHRpb25zLnByb2R1Y3Rpb24gPyBudWxsIDogdGhpcy5nZXRFbGVtZW50TG9jYXRpb25Db2RlKHN0YXJ0KTtcbiAgICBpZiAodGhpcy5pc0F1dG9tYXRpY1J1bnRpbWUgJiYganN4Um9sZSAhPT0gSlNYUm9sZS5LZXlBZnRlclByb3BTcHJlYWQpIHtcbiAgICAgIHRoaXMudHJhbnNmb3JtVGFnVG9KU1hGdW5jKGVsZW1lbnRMb2NhdGlvbkNvZGUsIGpzeFJvbGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRyYW5zZm9ybVRhZ1RvQ3JlYXRlRWxlbWVudChlbGVtZW50TG9jYXRpb25Db2RlKTtcbiAgICB9XG4gIH1cblxuICBnZXRFbGVtZW50TG9jYXRpb25Db2RlKGZpcnN0VG9rZW5TdGFydCkge1xuICAgIGNvbnN0IGxpbmVOdW1iZXIgPSB0aGlzLmdldExpbmVOdW1iZXJGb3JJbmRleChmaXJzdFRva2VuU3RhcnQpO1xuICAgIHJldHVybiBgbGluZU51bWJlcjogJHtsaW5lTnVtYmVyfWA7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBsaW5lIG51bWJlciBmb3IgdGhpcyBzb3VyY2UgcG9zaXRpb24uIFRoaXMgaXMgY2FsY3VsYXRlZCBsYXppbHkgYW5kXG4gICAqIG11c3QgYmUgY2FsbGVkIGluIGluY3JlYXNpbmcgb3JkZXIgYnkgaW5kZXguXG4gICAqL1xuICBnZXRMaW5lTnVtYmVyRm9ySW5kZXgoaW5kZXgpIHtcbiAgICBjb25zdCBjb2RlID0gdGhpcy50b2tlbnMuY29kZTtcbiAgICB3aGlsZSAodGhpcy5sYXN0SW5kZXggPCBpbmRleCAmJiB0aGlzLmxhc3RJbmRleCA8IGNvZGUubGVuZ3RoKSB7XG4gICAgICBpZiAoY29kZVt0aGlzLmxhc3RJbmRleF0gPT09IFwiXFxuXCIpIHtcbiAgICAgICAgdGhpcy5sYXN0TGluZU51bWJlcisrO1xuICAgICAgfVxuICAgICAgdGhpcy5sYXN0SW5kZXgrKztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubGFzdExpbmVOdW1iZXI7XG4gIH1cblxuICAvKipcbiAgICogQ29udmVydCB0aGUgY3VycmVudCBKU1ggZWxlbWVudCB0byBhIGNhbGwgdG8ganN4LCBqc3hzLCBvciBqc3hERVYuIFRoaXMgaXNcbiAgICogdGhlIHByaW1hcnkgdHJhbnNmb3JtYXRpb24gZm9yIHRoZSBhdXRvbWF0aWMgdHJhbnNmb3JtLlxuICAgKlxuICAgKiBFeGFtcGxlOlxuICAgKiA8ZGl2IGE9ezF9IGtleT17Mn0+SGVsbG97eH08L2Rpdj5cbiAgICogYmVjb21lc1xuICAgKiBqc3hzKCdkaXYnLCB7YTogMSwgY2hpbGRyZW46IFtcIkhlbGxvXCIsIHhdfSwgMilcbiAgICovXG4gIHRyYW5zZm9ybVRhZ1RvSlNYRnVuYyhlbGVtZW50TG9jYXRpb25Db2RlLCBqc3hSb2xlKSB7XG4gICAgY29uc3QgaXNTdGF0aWMgPSBqc3hSb2xlID09PSBKU1hSb2xlLlN0YXRpY0NoaWxkcmVuO1xuICAgIC8vIEZpcnN0IHRhZyBpcyBhbHdheXMganN4VGFnU3RhcnQuXG4gICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKHRoaXMuZ2V0SlNYRnVuY0ludm9jYXRpb25Db2RlKGlzU3RhdGljKSk7XG5cbiAgICBsZXQga2V5Q29kZSA9IG51bGw7XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmpzeFRhZ0VuZCkpIHtcbiAgICAgIC8vIEZyYWdtZW50IHN5bnRheC5cbiAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihgJHt0aGlzLmdldEZyYWdtZW50Q29kZSgpfSwge2ApO1xuICAgICAgdGhpcy5wcm9jZXNzQXV0b21hdGljQ2hpbGRyZW5BbmRFbmRQcm9wcyhqc3hSb2xlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTm9ybWFsIG9wZW4gdGFnIG9yIHNlbGYtY2xvc2luZyB0YWcuXG4gICAgICB0aGlzLnByb2Nlc3NUYWdJbnRybygpO1xuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIiwge1wiKTtcbiAgICAgIGtleUNvZGUgPSB0aGlzLnByb2Nlc3NQcm9wcyh0cnVlKTtcblxuICAgICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0LnNsYXNoLCB0dC5qc3hUYWdFbmQpKSB7XG4gICAgICAgIC8vIFNlbGYtY2xvc2luZyB0YWcsIG5vIGNoaWxkcmVuIHRvIGFkZCwgc28gY2xvc2UgdGhlIHByb3BzLlxuICAgICAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKFwifVwiKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuanN4VGFnRW5kKSkge1xuICAgICAgICAvLyBUYWcgd2l0aCBjaGlsZHJlbi5cbiAgICAgICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgICAgdGhpcy5wcm9jZXNzQXV0b21hdGljQ2hpbGRyZW5BbmRFbmRQcm9wcyhqc3hSb2xlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGVpdGhlciAvPiBvciA+IGF0IHRoZSBlbmQgb2YgdGhlIHRhZy5cIik7XG4gICAgICB9XG4gICAgICAvLyBJZiBhIGtleSB3YXMgcHJlc2VudCwgbW92ZSBpdCB0byBpdHMgb3duIGFyZy4gTm90ZSB0aGF0IG1vdmluZyBjb2RlXG4gICAgICAvLyBsaWtlIHRoaXMgd2lsbCBjYXVzZSBsaW5lIG51bWJlcnMgdG8gZ2V0IG91dCBvZiBzeW5jIHdpdGhpbiB0aGUgSlNYXG4gICAgICAvLyBlbGVtZW50IGlmIHRoZSBrZXkgZXhwcmVzc2lvbiBoYXMgYSBuZXdsaW5lIGluIGl0LiBUaGlzIGlzIHVuZm9ydHVuYXRlLFxuICAgICAgLy8gYnV0IGhvcGVmdWxseSBzaG91bGQgYmUgcmFyZS5cbiAgICAgIGlmIChrZXlDb2RlKSB7XG4gICAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUoYCwgJHtrZXlDb2RlfWApO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5wcm9kdWN0aW9uKSB7XG4gICAgICAvLyBJZiB0aGUga2V5IHdhc24ndCBhbHJlYWR5IGFkZGVkLCBhZGQgaXQgbm93IHNvIHdlIGNhbiBjb3JyZWN0bHkgc2V0XG4gICAgICAvLyBwb3NpdGlvbmFsIGFyZ3MgZm9yIGpzeERFVi5cbiAgICAgIGlmIChrZXlDb2RlID09PSBudWxsKSB7XG4gICAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUoXCIsIHZvaWQgMFwiKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUoYCwgJHtpc1N0YXRpY30sICR7dGhpcy5nZXREZXZTb3VyY2UoZWxlbWVudExvY2F0aW9uQ29kZSl9LCB0aGlzYCk7XG4gICAgfVxuICAgIC8vIFdlJ3JlIGF0IHRoZSBjbG9zZS10YWcgb3IgdGhlIGVuZCBvZiBhIHNlbGYtY2xvc2luZyB0YWcsIHNvIHJlbW92ZVxuICAgIC8vIGV2ZXJ5dGhpbmcgZWxzZSBhbmQgY2xvc2UgdGhlIGZ1bmN0aW9uIGNhbGwuXG4gICAgdGhpcy50b2tlbnMucmVtb3ZlSW5pdGlhbFRva2VuKCk7XG4gICAgd2hpbGUgKCF0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5qc3hUYWdFbmQpKSB7XG4gICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIH1cbiAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oXCIpXCIpO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnQgdGhlIGN1cnJlbnQgSlNYIGVsZW1lbnQgdG8gYSBjcmVhdGVFbGVtZW50IGNhbGwuIEluIHRoZSBjbGFzc2ljXG4gICAqIHJ1bnRpbWUsIHRoaXMgaXMgdGhlIG9ubHkgY2FzZS4gSW4gdGhlIGF1dG9tYXRpYyBydW50aW1lLCB0aGlzIGlzIGNhbGxlZFxuICAgKiBhcyBhIGZhbGxiYWNrIGluIHNvbWUgc2l0dWF0aW9ucy5cbiAgICpcbiAgICogRXhhbXBsZTpcbiAgICogPGRpdiBhPXsxfSBrZXk9ezJ9PkhlbGxve3h9PC9kaXY+XG4gICAqIGJlY29tZXNcbiAgICogUmVhY3QuY3JlYXRlRWxlbWVudCgnZGl2Jywge2E6IDEsIGtleTogMn0sIFwiSGVsbG9cIiwgeClcbiAgICovXG4gIHRyYW5zZm9ybVRhZ1RvQ3JlYXRlRWxlbWVudChlbGVtZW50TG9jYXRpb25Db2RlKSB7XG4gICAgLy8gRmlyc3QgdGFnIGlzIGFsd2F5cyBqc3hUYWdTdGFydC5cbiAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4odGhpcy5nZXRDcmVhdGVFbGVtZW50SW52b2NhdGlvbkNvZGUoKSk7XG5cbiAgICBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuanN4VGFnRW5kKSkge1xuICAgICAgLy8gRnJhZ21lbnQgc3ludGF4LlxuICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGAke3RoaXMuZ2V0RnJhZ21lbnRDb2RlKCl9LCBudWxsYCk7XG4gICAgICB0aGlzLnByb2Nlc3NDaGlsZHJlbih0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTm9ybWFsIG9wZW4gdGFnIG9yIHNlbGYtY2xvc2luZyB0YWcuXG4gICAgICB0aGlzLnByb2Nlc3NUYWdJbnRybygpO1xuICAgICAgdGhpcy5wcm9jZXNzUHJvcHNPYmplY3RXaXRoRGV2SW5mbyhlbGVtZW50TG9jYXRpb25Db2RlKTtcblxuICAgICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0LnNsYXNoLCB0dC5qc3hUYWdFbmQpKSB7XG4gICAgICAgIC8vIFNlbGYtY2xvc2luZyB0YWc7IG5vIGNoaWxkcmVuIHRvIHByb2Nlc3MuXG4gICAgICB9IGVsc2UgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmpzeFRhZ0VuZCkpIHtcbiAgICAgICAgLy8gVGFnIHdpdGggY2hpbGRyZW4gYW5kIGEgY2xvc2UtdGFnOyBwcm9jZXNzIHRoZSBjaGlsZHJlbiBhcyBhcmdzLlxuICAgICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgICAgICB0aGlzLnByb2Nlc3NDaGlsZHJlbih0cnVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGVpdGhlciAvPiBvciA+IGF0IHRoZSBlbmQgb2YgdGhlIHRhZy5cIik7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIFdlJ3JlIGF0IHRoZSBjbG9zZS10YWcgb3IgdGhlIGVuZCBvZiBhIHNlbGYtY2xvc2luZyB0YWcsIHNvIHJlbW92ZVxuICAgIC8vIGV2ZXJ5dGhpbmcgZWxzZSBhbmQgY2xvc2UgdGhlIGZ1bmN0aW9uIGNhbGwuXG4gICAgdGhpcy50b2tlbnMucmVtb3ZlSW5pdGlhbFRva2VuKCk7XG4gICAgd2hpbGUgKCF0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5qc3hUYWdFbmQpKSB7XG4gICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIH1cbiAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oXCIpXCIpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgY29kZSBmb3IgdGhlIHJlbGV2YW50IGZ1bmN0aW9uIGZvciB0aGlzIGNvbnRleHQ6IGpzeCwganN4cyxcbiAgICogb3IganN4REVWLiBUaGUgZm9sbG93aW5nIG9wZW4tcGFyZW4gaXMgaW5jbHVkZWQgYXMgd2VsbC5cbiAgICpcbiAgICogVGhlc2UgZnVuY3Rpb25zIGFyZSBvbmx5IHVzZWQgZm9yIHRoZSBhdXRvbWF0aWMgcnVudGltZSwgc28gdGhleSBhcmUgYWx3YXlzXG4gICAqIGF1dG8taW1wb3J0ZWQsIGJ1dCB0aGUgYXV0by1pbXBvcnQgd2lsbCBiZSBlaXRoZXIgQ0pTIG9yIEVTTSBiYXNlZCBvbiB0aGVcbiAgICogdGFyZ2V0IG1vZHVsZSBmb3JtYXQuXG4gICAqL1xuICBnZXRKU1hGdW5jSW52b2NhdGlvbkNvZGUoaXNTdGF0aWMpIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLnByb2R1Y3Rpb24pIHtcbiAgICAgIGlmIChpc1N0YXRpYykge1xuICAgICAgICByZXR1cm4gdGhpcy5jbGFpbUF1dG9JbXBvcnRlZEZ1bmNJbnZvY2F0aW9uKFwianN4c1wiLCBcIi9qc3gtcnVudGltZVwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNsYWltQXV0b0ltcG9ydGVkRnVuY0ludm9jYXRpb24oXCJqc3hcIiwgXCIvanN4LXJ1bnRpbWVcIik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmNsYWltQXV0b0ltcG9ydGVkRnVuY0ludm9jYXRpb24oXCJqc3hERVZcIiwgXCIvanN4LWRldi1ydW50aW1lXCIpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIGNvZGUgdG8gdXNlIGZvciB0aGUgY3JlYXRlRWxlbWVudCBmdW5jdGlvbiwgZS5nLlxuICAgKiBgUmVhY3QuY3JlYXRlRWxlbWVudGAsIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIG9wZW4tcGFyZW4uXG4gICAqXG4gICAqIFRoaXMgaXMgdGhlIG1haW4gZnVuY3Rpb24gdG8gdXNlIGZvciB0aGUgY2xhc3NpYyBydW50aW1lLiBGb3IgdGhlXG4gICAqIGF1dG9tYXRpYyBydW50aW1lLCB0aGlzIGZ1bmN0aW9uIGlzIHVzZWQgYXMgYSBmYWxsYmFjayBmdW5jdGlvbiB0b1xuICAgKiBwcmVzZXJ2ZSBiZWhhdmlvciB3aGVuIHRoZXJlIGlzIGEgcHJvcCBzcHJlYWQgZm9sbG93ZWQgYnkgYW4gZXhwbGljaXRcbiAgICoga2V5LiBJbiB0aGF0IGF1dG9tYXRpYyBydW50aW1lIGNhc2UsIHRoZSBmdW5jdGlvbiBzaG91bGQgYmUgYXV0b21hdGljYWxseVxuICAgKiBpbXBvcnRlZC5cbiAgICovXG4gIGdldENyZWF0ZUVsZW1lbnRJbnZvY2F0aW9uQ29kZSgpIHtcbiAgICBpZiAodGhpcy5pc0F1dG9tYXRpY1J1bnRpbWUpIHtcbiAgICAgIHJldHVybiB0aGlzLmNsYWltQXV0b0ltcG9ydGVkRnVuY0ludm9jYXRpb24oXCJjcmVhdGVFbGVtZW50XCIsIFwiXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB7anN4UHJhZ21hSW5mb30gPSB0aGlzO1xuICAgICAgY29uc3QgcmVzb2x2ZWRQcmFnbWFCYXNlTmFtZSA9IHRoaXMuaW1wb3J0UHJvY2Vzc29yXG4gICAgICAgID8gdGhpcy5pbXBvcnRQcm9jZXNzb3IuZ2V0SWRlbnRpZmllclJlcGxhY2VtZW50KGpzeFByYWdtYUluZm8uYmFzZSkgfHwganN4UHJhZ21hSW5mby5iYXNlXG4gICAgICAgIDoganN4UHJhZ21hSW5mby5iYXNlO1xuICAgICAgcmV0dXJuIGAke3Jlc29sdmVkUHJhZ21hQmFzZU5hbWV9JHtqc3hQcmFnbWFJbmZvLnN1ZmZpeH0oYDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHRoZSBjb2RlIHRvIHVzZSBhcyB0aGUgY29tcG9uZW50IHdoZW4gY29tcGlsaW5nIGEgc2hvcnRoYW5kXG4gICAqIGZyYWdtZW50LCBlLmcuIGBSZWFjdC5GcmFnbWVudGAuXG4gICAqXG4gICAqIFRoaXMgbWF5IGJlIGNhbGxlZCBmcm9tIGVpdGhlciB0aGUgY2xhc3NpYyBvciBhdXRvbWF0aWMgcnVudGltZSwgYW5kXG4gICAqIHRoZSB2YWx1ZSBzaG91bGQgYmUgYXV0by1pbXBvcnRlZCBmb3IgdGhlIGF1dG9tYXRpYyBydW50aW1lLlxuICAgKi9cbiAgZ2V0RnJhZ21lbnRDb2RlKCkge1xuICAgIGlmICh0aGlzLmlzQXV0b21hdGljUnVudGltZSkge1xuICAgICAgcmV0dXJuIHRoaXMuY2xhaW1BdXRvSW1wb3J0ZWROYW1lKFxuICAgICAgICBcIkZyYWdtZW50XCIsXG4gICAgICAgIHRoaXMub3B0aW9ucy5wcm9kdWN0aW9uID8gXCIvanN4LXJ1bnRpbWVcIiA6IFwiL2pzeC1kZXYtcnVudGltZVwiLFxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qge2pzeFByYWdtYUluZm99ID0gdGhpcztcbiAgICAgIGNvbnN0IHJlc29sdmVkRnJhZ21lbnRQcmFnbWFCYXNlTmFtZSA9IHRoaXMuaW1wb3J0UHJvY2Vzc29yXG4gICAgICAgID8gdGhpcy5pbXBvcnRQcm9jZXNzb3IuZ2V0SWRlbnRpZmllclJlcGxhY2VtZW50KGpzeFByYWdtYUluZm8uZnJhZ21lbnRCYXNlKSB8fFxuICAgICAgICAgIGpzeFByYWdtYUluZm8uZnJhZ21lbnRCYXNlXG4gICAgICAgIDoganN4UHJhZ21hSW5mby5mcmFnbWVudEJhc2U7XG4gICAgICByZXR1cm4gcmVzb2x2ZWRGcmFnbWVudFByYWdtYUJhc2VOYW1lICsganN4UHJhZ21hSW5mby5mcmFnbWVudFN1ZmZpeDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGNvZGUgdGhhdCBpbnZva2VzIHRoZSBnaXZlbiBmdW5jdGlvbi5cbiAgICpcbiAgICogV2hlbiB0aGUgaW1wb3J0cyB0cmFuc2Zvcm0gaXMgZW5hYmxlZCwgdXNlIHRoZSBDSlNJbXBvcnRUcmFuc2Zvcm1lclxuICAgKiBzdHJhdGVneSBvZiB1c2luZyBgLmNhbGwodm9pZCAwLCAuLi5gIHRvIGF2b2lkIHBhc3NpbmcgYSBgdGhpc2AgdmFsdWUgaW4gYVxuICAgKiBzaXR1YXRpb24gdGhhdCB3b3VsZCBvdGhlcndpc2UgbG9vayBsaWtlIGEgbWV0aG9kIGNhbGwuXG4gICAqL1xuICBjbGFpbUF1dG9JbXBvcnRlZEZ1bmNJbnZvY2F0aW9uKGZ1bmNOYW1lLCBpbXBvcnRQYXRoU3VmZml4KSB7XG4gICAgY29uc3QgZnVuY0NvZGUgPSB0aGlzLmNsYWltQXV0b0ltcG9ydGVkTmFtZShmdW5jTmFtZSwgaW1wb3J0UGF0aFN1ZmZpeCk7XG4gICAgaWYgKHRoaXMuaW1wb3J0UHJvY2Vzc29yKSB7XG4gICAgICByZXR1cm4gYCR7ZnVuY0NvZGV9LmNhbGwodm9pZCAwLCBgO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYCR7ZnVuY0NvZGV9KGA7XG4gICAgfVxuICB9XG5cbiAgY2xhaW1BdXRvSW1wb3J0ZWROYW1lKGZ1bmNOYW1lLCBpbXBvcnRQYXRoU3VmZml4KSB7XG4gICAgaWYgKHRoaXMuaW1wb3J0UHJvY2Vzc29yKSB7XG4gICAgICAvLyBDSlMgbW9kZTogY2xhaW0gYSBuYW1lIGZvciB0aGUgbW9kdWxlIGFuZCBtYXJrIGl0IGZvciBpbXBvcnQuXG4gICAgICBjb25zdCBwYXRoID0gdGhpcy5qc3hJbXBvcnRTb3VyY2UgKyBpbXBvcnRQYXRoU3VmZml4O1xuICAgICAgaWYgKCF0aGlzLmNqc0F1dG9tYXRpY01vZHVsZU5hbWVSZXNvbHV0aW9uc1twYXRoXSkge1xuICAgICAgICB0aGlzLmNqc0F1dG9tYXRpY01vZHVsZU5hbWVSZXNvbHV0aW9uc1twYXRoXSA9XG4gICAgICAgICAgdGhpcy5pbXBvcnRQcm9jZXNzb3IuZ2V0RnJlZUlkZW50aWZpZXJGb3JQYXRoKHBhdGgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGAke3RoaXMuY2pzQXV0b21hdGljTW9kdWxlTmFtZVJlc29sdXRpb25zW3BhdGhdfS4ke2Z1bmNOYW1lfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEVTTSBtb2RlOiBjbGFpbSBhIG5hbWUgZm9yIHRoaXMgZnVuY3Rpb24gYW5kIGFkZCBpdCB0byB0aGUgbmFtZXMgdGhhdFxuICAgICAgLy8gc2hvdWxkIGJlIGF1dG8taW1wb3J0ZWQgd2hlbiB0aGUgcHJlZml4IGlzIGdlbmVyYXRlZC5cbiAgICAgIGlmICghdGhpcy5lc21BdXRvbWF0aWNJbXBvcnROYW1lUmVzb2x1dGlvbnNbZnVuY05hbWVdKSB7XG4gICAgICAgIHRoaXMuZXNtQXV0b21hdGljSW1wb3J0TmFtZVJlc29sdXRpb25zW2Z1bmNOYW1lXSA9IHRoaXMubmFtZU1hbmFnZXIuY2xhaW1GcmVlTmFtZShcbiAgICAgICAgICBgXyR7ZnVuY05hbWV9YCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLmVzbUF1dG9tYXRpY0ltcG9ydE5hbWVSZXNvbHV0aW9uc1tmdW5jTmFtZV07XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3MgdGhlIGZpcnN0IHBhcnQgb2YgYSB0YWcsIGJlZm9yZSBhbnkgcHJvcHMuXG4gICAqL1xuICBwcm9jZXNzVGFnSW50cm8oKSB7XG4gICAgLy8gV2FsayBmb3J3YXJkIHVudGlsIHdlIHNlZSBvbmUgb2YgdGhlc2UgcGF0dGVybnM6XG4gICAgLy8ganN4TmFtZSB0byBzdGFydCB0aGUgZmlyc3QgcHJvcCwgcHJlY2VkZWQgYnkgYW5vdGhlciBqc3hOYW1lIHRvIGVuZCB0aGUgdGFnIG5hbWUuXG4gICAgLy8ganN4TmFtZSB0byBzdGFydCB0aGUgZmlyc3QgcHJvcCwgcHJlY2VkZWQgYnkgZ3JlYXRlclRoYW4gdG8gZW5kIHRoZSB0eXBlIGFyZ3VtZW50LlxuICAgIC8vIFtvcGVuIGJyYWNlXSB0byBzdGFydCB0aGUgZmlyc3QgcHJvcC5cbiAgICAvLyBbanN4VGFnRW5kXSB0byBlbmQgdGhlIG9wZW4tdGFnLlxuICAgIC8vIFtzbGFzaCwganN4VGFnRW5kXSB0byBlbmQgdGhlIHNlbGYtY2xvc2luZyB0YWcuXG4gICAgbGV0IGludHJvRW5kID0gdGhpcy50b2tlbnMuY3VycmVudEluZGV4KCkgKyAxO1xuICAgIHdoaWxlIChcbiAgICAgIHRoaXMudG9rZW5zLnRva2Vuc1tpbnRyb0VuZF0uaXNUeXBlIHx8XG4gICAgICAoIXRoaXMudG9rZW5zLm1hdGNoZXMyQXRJbmRleChpbnRyb0VuZCAtIDEsIHR0LmpzeE5hbWUsIHR0LmpzeE5hbWUpICYmXG4gICAgICAgICF0aGlzLnRva2Vucy5tYXRjaGVzMkF0SW5kZXgoaW50cm9FbmQgLSAxLCB0dC5ncmVhdGVyVGhhbiwgdHQuanN4TmFtZSkgJiZcbiAgICAgICAgIXRoaXMudG9rZW5zLm1hdGNoZXMxQXRJbmRleChpbnRyb0VuZCwgdHQuYnJhY2VMKSAmJlxuICAgICAgICAhdGhpcy50b2tlbnMubWF0Y2hlczFBdEluZGV4KGludHJvRW5kLCB0dC5qc3hUYWdFbmQpICYmXG4gICAgICAgICF0aGlzLnRva2Vucy5tYXRjaGVzMkF0SW5kZXgoaW50cm9FbmQsIHR0LnNsYXNoLCB0dC5qc3hUYWdFbmQpKVxuICAgICkge1xuICAgICAgaW50cm9FbmQrKztcbiAgICB9XG4gICAgaWYgKGludHJvRW5kID09PSB0aGlzLnRva2Vucy5jdXJyZW50SW5kZXgoKSArIDEpIHtcbiAgICAgIGNvbnN0IHRhZ05hbWUgPSB0aGlzLnRva2Vucy5pZGVudGlmaWVyTmFtZSgpO1xuICAgICAgaWYgKHN0YXJ0c1dpdGhMb3dlckNhc2UodGFnTmFtZSkpIHtcbiAgICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGAnJHt0YWdOYW1lfSdgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgd2hpbGUgKHRoaXMudG9rZW5zLmN1cnJlbnRJbmRleCgpIDwgaW50cm9FbmQpIHtcbiAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NUb2tlbigpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTdGFydGluZyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwcm9wcywgYWRkIHRoZSBwcm9wcyBhcmd1bWVudCB0b1xuICAgKiBSZWFjdC5jcmVhdGVFbGVtZW50LCBpbmNsdWRpbmcgdGhlIGNvbW1hIGJlZm9yZSBpdC5cbiAgICovXG4gIHByb2Nlc3NQcm9wc09iamVjdFdpdGhEZXZJbmZvKGVsZW1lbnRMb2NhdGlvbkNvZGUpIHtcbiAgICBjb25zdCBkZXZQcm9wcyA9IHRoaXMub3B0aW9ucy5wcm9kdWN0aW9uXG4gICAgICA/IFwiXCJcbiAgICAgIDogYF9fc2VsZjogdGhpcywgX19zb3VyY2U6ICR7dGhpcy5nZXREZXZTb3VyY2UoZWxlbWVudExvY2F0aW9uQ29kZSl9YDtcbiAgICBpZiAoIXRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmpzeE5hbWUpICYmICF0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZUwpKSB7XG4gICAgICBpZiAoZGV2UHJvcHMpIHtcbiAgICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShgLCB7JHtkZXZQcm9wc319YCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKGAsIG51bGxgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShgLCB7YCk7XG4gICAgdGhpcy5wcm9jZXNzUHJvcHMoZmFsc2UpO1xuICAgIGlmIChkZXZQcm9wcykge1xuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShgICR7ZGV2UHJvcHN9fWApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKFwifVwiKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVHJhbnNmb3JtIHRoZSBjb3JlIHBhcnQgb2YgdGhlIHByb3BzLCBhc3N1bWluZyB0aGF0IGEgeyBoYXMgYWxyZWFkeSBiZWVuXG4gICAqIGluc2VydGVkIGJlZm9yZSB1cyBhbmQgdGhhdCBhIH0gd2lsbCBiZSBpbnNlcnRlZCBhZnRlciB1cy5cbiAgICpcbiAgICogSWYgZXh0cmFjdEtleUNvZGUgaXMgdHJ1ZSAoaS5lLiB3aGVuIHVzaW5nIGFueSBqc3guLi4gZnVuY3Rpb24pLCBhbnkgcHJvcFxuICAgKiBuYW1lZCBcImtleVwiIGhhcyBpdHMgY29kZSBjYXB0dXJlZCBhbmQgcmV0dXJuZWQgcmF0aGVyIHRoYW4gYmVpbmcgZW1pdHRlZCB0b1xuICAgKiB0aGUgb3V0cHV0IGNvZGUuIFRoaXMgc2hpZnRzIGxpbmUgbnVtYmVycywgYW5kIGVtaXR0aW5nIHRoZSBjb2RlIGxhdGVyIHdpbGxcbiAgICogY29ycmVjdCBsaW5lIG51bWJlcnMgYWdhaW4uIElmIG5vIGtleSBpcyBmb3VuZCBvciBpZiBleHRyYWN0S2V5Q29kZSBpc1xuICAgKiBmYWxzZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIG51bGwuXG4gICAqL1xuICBwcm9jZXNzUHJvcHMoZXh0cmFjdEtleUNvZGUpIHtcbiAgICBsZXQga2V5Q29kZSA9IG51bGw7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5qc3hOYW1lLCB0dC5lcSkpIHtcbiAgICAgICAgLy8gVGhpcyBpcyBhIHJlZ3VsYXIga2V5PXt2YWx1ZX0gb3Iga2V5PVwidmFsdWVcIiBwcm9wLlxuICAgICAgICBjb25zdCBwcm9wTmFtZSA9IHRoaXMudG9rZW5zLmlkZW50aWZpZXJOYW1lKCk7XG4gICAgICAgIGlmIChleHRyYWN0S2V5Q29kZSAmJiBwcm9wTmFtZSA9PT0gXCJrZXlcIikge1xuICAgICAgICAgIGlmIChrZXlDb2RlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAvLyBUaGUgcHJvcHMgbGlzdCBoYXMgbXVsdGlwbGUga2V5cy4gRGlmZmVyZW50IGltcGxlbWVudGF0aW9ucyBhcmVcbiAgICAgICAgICAgIC8vIGluY29uc2lzdGVudCBhYm91dCB3aGF0IHRvIGRvIGhlcmU6IGFzIG9mIHRoaXMgd3JpdGluZywgQmFiZWwgYW5kXG4gICAgICAgICAgICAvLyBzd2Mga2VlcCB0aGUgKmxhc3QqIGtleSBhbmQgY29tcGxldGVseSByZW1vdmUgdGhlIHJlc3QsIHdoaWxlXG4gICAgICAgICAgICAvLyBUeXBlU2NyaXB0IHVzZXMgdGhlICpmaXJzdCoga2V5IGFuZCBsZWF2ZXMgdGhlIG90aGVycyBhcyByZWd1bGFyXG4gICAgICAgICAgICAvLyBwcm9wcy4gVGhlIFJlYWN0IHRlYW0gY29sbGFib3JhdGVkIHdpdGggQmFiZWwgb24gdGhlXG4gICAgICAgICAgICAvLyBpbXBsZW1lbnRhdGlvbiBvZiB0aGlzIGJlaGF2aW9yLCBzbyBwcmVzdW1hYmx5IHRoZSBCYWJlbCBiZWhhdmlvclxuICAgICAgICAgICAgLy8gaXMgdGhlIG9uZSB0byB1c2UuXG4gICAgICAgICAgICAvLyBTaW5jZSB3ZSB3b24ndCBldmVyIGJlIGVtaXR0aW5nIHRoZSBwcmV2aW91cyBrZXkgY29kZSwgd2UgbmVlZCB0b1xuICAgICAgICAgICAgLy8gYXQgbGVhc3QgZW1pdCBpdHMgbmV3bGluZXMgaGVyZSBzbyB0aGF0IHRoZSBsaW5lIG51bWJlcnMgbWF0Y2ggdXBcbiAgICAgICAgICAgIC8vIGluIHRoZSBsb25nIHJ1bi5cbiAgICAgICAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUoa2V5Q29kZS5yZXBsYWNlKC9bXlxcbl0vZywgXCJcIikpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBrZXlcbiAgICAgICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgICAgICAgIC8vID1cbiAgICAgICAgICB0aGlzLnRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgICAgICAgIGNvbnN0IHNuYXBzaG90ID0gdGhpcy50b2tlbnMuc25hcHNob3QoKTtcbiAgICAgICAgICB0aGlzLnByb2Nlc3NQcm9wVmFsdWUoKTtcbiAgICAgICAgICBrZXlDb2RlID0gdGhpcy50b2tlbnMuZGFuZ2Vyb3VzbHlHZXRBbmRSZW1vdmVDb2RlU2luY2VTbmFwc2hvdChzbmFwc2hvdCk7XG4gICAgICAgICAgLy8gRG9uJ3QgYWRkIGEgY29tbWFcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnByb2Nlc3NQcm9wTmFtZShwcm9wTmFtZSk7XG4gICAgICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKFwiOiBcIik7XG4gICAgICAgICAgdGhpcy5wcm9jZXNzUHJvcFZhbHVlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuanN4TmFtZSkpIHtcbiAgICAgICAgLy8gVGhpcyBpcyBhIHNob3J0aGFuZCBwcm9wIGxpa2UgPGlucHV0IGRpc2FibGVkIC8+LlxuICAgICAgICBjb25zdCBwcm9wTmFtZSA9IHRoaXMudG9rZW5zLmlkZW50aWZpZXJOYW1lKCk7XG4gICAgICAgIHRoaXMucHJvY2Vzc1Byb3BOYW1lKHByb3BOYW1lKTtcbiAgICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIjogdHJ1ZVwiKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuYnJhY2VMKSkge1xuICAgICAgICAvLyBUaGlzIGlzIHByb3Agc3ByZWFkLCBsaWtlIDxkaXYgey4uLmdldFByb3BzKCl9Piwgd2hpY2ggd2UgY2FuIHBhc3NcbiAgICAgICAgLy8gdGhyb3VnaCBmYWlybHkgZGlyZWN0bHkgYXMgYW4gb2JqZWN0IHNwcmVhZC5cbiAgICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKFwiXCIpO1xuICAgICAgICB0aGlzLnJvb3RUcmFuc2Zvcm1lci5wcm9jZXNzQmFsYW5jZWRDb2RlKCk7XG4gICAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihcIlwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIixcIik7XG4gICAgfVxuICAgIHJldHVybiBrZXlDb2RlO1xuICB9XG5cbiAgcHJvY2Vzc1Byb3BOYW1lKHByb3BOYW1lKSB7XG4gICAgaWYgKHByb3BOYW1lLmluY2x1ZGVzKFwiLVwiKSkge1xuICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGAnJHtwcm9wTmFtZX0nYCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgIH1cbiAgfVxuXG4gIHByb2Nlc3NQcm9wVmFsdWUoKSB7XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmJyYWNlTCkpIHtcbiAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihcIlwiKTtcbiAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NCYWxhbmNlZENvZGUoKTtcbiAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihcIlwiKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmpzeFRhZ1N0YXJ0KSkge1xuICAgICAgdGhpcy5wcm9jZXNzSlNYVGFnKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucHJvY2Vzc1N0cmluZ1Byb3BWYWx1ZSgpO1xuICAgIH1cbiAgfVxuXG4gIHByb2Nlc3NTdHJpbmdQcm9wVmFsdWUoKSB7XG4gICAgY29uc3QgdG9rZW4gPSB0aGlzLnRva2Vucy5jdXJyZW50VG9rZW4oKTtcbiAgICBjb25zdCB2YWx1ZUNvZGUgPSB0aGlzLnRva2Vucy5jb2RlLnNsaWNlKHRva2VuLnN0YXJ0ICsgMSwgdG9rZW4uZW5kIC0gMSk7XG4gICAgY29uc3QgcmVwbGFjZW1lbnRDb2RlID0gZm9ybWF0SlNYVGV4dFJlcGxhY2VtZW50KHZhbHVlQ29kZSk7XG4gICAgY29uc3QgbGl0ZXJhbENvZGUgPSBmb3JtYXRKU1hTdHJpbmdWYWx1ZUxpdGVyYWwodmFsdWVDb2RlKTtcbiAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4obGl0ZXJhbENvZGUgKyByZXBsYWNlbWVudENvZGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0YXJ0aW5nIGluIHRoZSBtaWRkbGUgb2YgdGhlIHByb3BzIG9iamVjdCBsaXRlcmFsLCBwcm9kdWNlIGFuIGFkZGl0aW9uYWxcbiAgICogcHJvcCBmb3IgdGhlIGNoaWxkcmVuIGFuZCBjbG9zZSB0aGUgb2JqZWN0IGxpdGVyYWwuXG4gICAqL1xuICBwcm9jZXNzQXV0b21hdGljQ2hpbGRyZW5BbmRFbmRQcm9wcyhqc3hSb2xlKSB7XG4gICAgaWYgKGpzeFJvbGUgPT09IEpTWFJvbGUuU3RhdGljQ2hpbGRyZW4pIHtcbiAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUoXCIgY2hpbGRyZW46IFtcIik7XG4gICAgICB0aGlzLnByb2Nlc3NDaGlsZHJlbihmYWxzZSk7XG4gICAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKFwiXX1cIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFRoZSBwYXJzZXIgaW5mb3JtYXRpb24gdGVsbHMgdXMgd2hldGhlciB3ZSB3aWxsIHNlZSBhIHJlYWwgY2hpbGQgb3IgaWZcbiAgICAgIC8vIGFsbCByZW1haW5pbmcgY2hpbGRyZW4gKGlmIGFueSkgd2lsbCByZXNvbHZlIHRvIGVtcHR5LiBJZiB0aGVyZSBhcmUgbm9cbiAgICAgIC8vIG5vbi1lbXB0eSBjaGlsZHJlbiwgZG9uJ3QgZW1pdCBhIGNoaWxkcmVuIHByb3AgYXQgYWxsLCBidXQgc3RpbGxcbiAgICAgIC8vIHByb2Nlc3MgY2hpbGRyZW4gc28gdGhhdCB3ZSBwcm9wZXJseSB0cmFuc2Zvcm0gdGhlIGNvZGUgaW50byBub3RoaW5nLlxuICAgICAgaWYgKGpzeFJvbGUgPT09IEpTWFJvbGUuT25lQ2hpbGQpIHtcbiAgICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIiBjaGlsZHJlbjogXCIpO1xuICAgICAgfVxuICAgICAgdGhpcy5wcm9jZXNzQ2hpbGRyZW4oZmFsc2UpO1xuICAgICAgdGhpcy50b2tlbnMuYXBwZW5kQ29kZShcIn1cIik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFRyYW5zZm9ybSBjaGlsZHJlbiBpbnRvIGEgY29tbWEtc2VwYXJhdGVkIGxpc3QsIHdoaWNoIHdpbGwgYmUgZWl0aGVyXG4gICAqIGFyZ3VtZW50cyB0byBjcmVhdGVFbGVtZW50IG9yIGFycmF5IGVsZW1lbnRzIG9mIGEgY2hpbGRyZW4gcHJvcC5cbiAgICovXG4gIHByb2Nlc3NDaGlsZHJlbihuZWVkc0luaXRpYWxDb21tYSkge1xuICAgIGxldCBuZWVkc0NvbW1hID0gbmVlZHNJbml0aWFsQ29tbWE7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5qc3hUYWdTdGFydCwgdHQuc2xhc2gpKSB7XG4gICAgICAgIC8vIENsb3NpbmcgdGFnLCBzbyBubyBtb3JlIGNoaWxkcmVuLlxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBsZXQgZGlkRW1pdEVsZW1lbnQgPSBmYWxzZTtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMSh0dC5icmFjZUwpKSB7XG4gICAgICAgIGlmICh0aGlzLnRva2Vucy5tYXRjaGVzMih0dC5icmFjZUwsIHR0LmJyYWNlUikpIHtcbiAgICAgICAgICAvLyBFbXB0eSBpbnRlcnBvbGF0aW9ucyBhbmQgY29tbWVudC1vbmx5IGludGVycG9sYXRpb25zIGFyZSBhbGxvd2VkXG4gICAgICAgICAgLy8gYW5kIGRvbid0IGNyZWF0ZSBhbiBleHRyYSBjaGlsZCBhcmcuXG4gICAgICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKFwiXCIpO1xuICAgICAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihcIlwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBJbnRlcnBvbGF0ZWQgZXhwcmVzc2lvbi5cbiAgICAgICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4obmVlZHNDb21tYSA/IFwiLCBcIiA6IFwiXCIpO1xuICAgICAgICAgIHRoaXMucm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NCYWxhbmNlZENvZGUoKTtcbiAgICAgICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oXCJcIik7XG4gICAgICAgICAgZGlkRW1pdEVsZW1lbnQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0LmpzeFRhZ1N0YXJ0KSkge1xuICAgICAgICAvLyBDaGlsZCBKU1ggZWxlbWVudFxuICAgICAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKG5lZWRzQ29tbWEgPyBcIiwgXCIgOiBcIlwiKTtcbiAgICAgICAgdGhpcy5wcm9jZXNzSlNYVGFnKCk7XG4gICAgICAgIGRpZEVtaXRFbGVtZW50ID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy50b2tlbnMubWF0Y2hlczEodHQuanN4VGV4dCkgfHwgdGhpcy50b2tlbnMubWF0Y2hlczEodHQuanN4RW1wdHlUZXh0KSkge1xuICAgICAgICBkaWRFbWl0RWxlbWVudCA9IHRoaXMucHJvY2Vzc0NoaWxkVGV4dEVsZW1lbnQobmVlZHNDb21tYSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmV4cGVjdGVkIHRva2VuIHdoZW4gcHJvY2Vzc2luZyBKU1ggY2hpbGRyZW4uXCIpO1xuICAgICAgfVxuICAgICAgaWYgKGRpZEVtaXRFbGVtZW50KSB7XG4gICAgICAgIG5lZWRzQ29tbWEgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUdXJuIGEgSlNYIHRleHQgZWxlbWVudCBpbnRvIGEgc3RyaW5nIGxpdGVyYWwsIG9yIG5vdGhpbmcgYXQgYWxsIGlmIHRoZSBKU1hcbiAgICogdGV4dCByZXNvbHZlcyB0byB0aGUgZW1wdHkgc3RyaW5nLlxuICAgKlxuICAgKiBSZXR1cm5zIHRydWUgaWYgYSBzdHJpbmcgbGl0ZXJhbCBpcyBlbWl0dGVkLCBmYWxzZSBvdGhlcndpc2UuXG4gICAqL1xuICBwcm9jZXNzQ2hpbGRUZXh0RWxlbWVudChuZWVkc0NvbW1hKSB7XG4gICAgY29uc3QgdG9rZW4gPSB0aGlzLnRva2Vucy5jdXJyZW50VG9rZW4oKTtcbiAgICBjb25zdCB2YWx1ZUNvZGUgPSB0aGlzLnRva2Vucy5jb2RlLnNsaWNlKHRva2VuLnN0YXJ0LCB0b2tlbi5lbmQpO1xuICAgIGNvbnN0IHJlcGxhY2VtZW50Q29kZSA9IGZvcm1hdEpTWFRleHRSZXBsYWNlbWVudCh2YWx1ZUNvZGUpO1xuICAgIGNvbnN0IGxpdGVyYWxDb2RlID0gZm9ybWF0SlNYVGV4dExpdGVyYWwodmFsdWVDb2RlKTtcbiAgICBpZiAobGl0ZXJhbENvZGUgPT09ICdcIlwiJykge1xuICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKHJlcGxhY2VtZW50Q29kZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudG9rZW5zLnJlcGxhY2VUb2tlbihgJHtuZWVkc0NvbW1hID8gXCIsIFwiIDogXCJcIn0ke2xpdGVyYWxDb2RlfSR7cmVwbGFjZW1lbnRDb2RlfWApO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgZ2V0RGV2U291cmNlKGVsZW1lbnRMb2NhdGlvbkNvZGUpIHtcbiAgICByZXR1cm4gYHtmaWxlTmFtZTogJHt0aGlzLmdldEZpbGVuYW1lVmFyTmFtZSgpfSwgJHtlbGVtZW50TG9jYXRpb25Db2RlfX1gO1xuICB9XG5cbiAgZ2V0RmlsZW5hbWVWYXJOYW1lKCkge1xuICAgIGlmICghdGhpcy5maWxlbmFtZVZhck5hbWUpIHtcbiAgICAgIHRoaXMuZmlsZW5hbWVWYXJOYW1lID0gdGhpcy5uYW1lTWFuYWdlci5jbGFpbUZyZWVOYW1lKFwiX2pzeEZpbGVOYW1lXCIpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5maWxlbmFtZVZhck5hbWU7XG4gIH1cbn1cblxuLyoqXG4gKiBTcGVjIGZvciBpZGVudGlmaWVyczogaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNwcm9kLUlkZW50aWZpZXJTdGFydC5cbiAqXG4gKiBSZWFsbHkgb25seSB0cmVhdCBhbnl0aGluZyBzdGFydGluZyB3aXRoIGEteiBhcyB0YWcgbmFtZXMuICBgX2AsIGAkYCwgYMOpYFxuICogc2hvdWxkIGJlIHRyZWF0ZWQgYXMgY29tcG9uZW50IG5hbWVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdGFydHNXaXRoTG93ZXJDYXNlKHMpIHtcbiAgY29uc3QgZmlyc3RDaGFyID0gcy5jaGFyQ29kZUF0KDApO1xuICByZXR1cm4gZmlyc3RDaGFyID49IGNoYXJDb2Rlcy5sb3dlcmNhc2VBICYmIGZpcnN0Q2hhciA8PSBjaGFyQ29kZXMubG93ZXJjYXNlWjtcbn1cblxuLyoqXG4gKiBUdXJuIHRoZSBnaXZlbiBqc3hUZXh0IHN0cmluZyBpbnRvIGEgSlMgc3RyaW5nIGxpdGVyYWwuIExlYWRpbmcgYW5kIHRyYWlsaW5nXG4gKiB3aGl0ZXNwYWNlIG9uIGxpbmVzIGlzIHJlbW92ZWQsIGV4Y2VwdCBpbW1lZGlhdGVseSBhZnRlciB0aGUgb3Blbi10YWcgYW5kXG4gKiBiZWZvcmUgdGhlIGNsb3NlLXRhZy4gRW1wdHkgbGluZXMgYXJlIGNvbXBsZXRlbHkgcmVtb3ZlZCwgYW5kIHNwYWNlcyBhcmVcbiAqIGFkZGVkIGJldHdlZW4gbGluZXMgYWZ0ZXIgdGhhdC5cbiAqXG4gKiBXZSB1c2UgSlNPTi5zdHJpbmdpZnkgdG8gaW50cm9kdWNlIGVzY2FwZSBjaGFyYWN0ZXJzIGFzIG5lY2Vzc2FyeSwgYW5kIHRyaW1cbiAqIHRoZSBzdGFydCBhbmQgZW5kIG9mIGVhY2ggbGluZSBhbmQgcmVtb3ZlIGJsYW5rIGxpbmVzLlxuICovXG5mdW5jdGlvbiBmb3JtYXRKU1hUZXh0TGl0ZXJhbCh0ZXh0KSB7XG4gIGxldCByZXN1bHQgPSBcIlwiO1xuICBsZXQgd2hpdGVzcGFjZSA9IFwiXCI7XG5cbiAgbGV0IGlzSW5Jbml0aWFsTGluZVdoaXRlc3BhY2UgPSBmYWxzZTtcbiAgbGV0IHNlZW5Ob25XaGl0ZXNwYWNlID0gZmFsc2U7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGMgPSB0ZXh0W2ldO1xuICAgIGlmIChjID09PSBcIiBcIiB8fCBjID09PSBcIlxcdFwiIHx8IGMgPT09IFwiXFxyXCIpIHtcbiAgICAgIGlmICghaXNJbkluaXRpYWxMaW5lV2hpdGVzcGFjZSkge1xuICAgICAgICB3aGl0ZXNwYWNlICs9IGM7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjID09PSBcIlxcblwiKSB7XG4gICAgICB3aGl0ZXNwYWNlID0gXCJcIjtcbiAgICAgIGlzSW5Jbml0aWFsTGluZVdoaXRlc3BhY2UgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoc2Vlbk5vbldoaXRlc3BhY2UgJiYgaXNJbkluaXRpYWxMaW5lV2hpdGVzcGFjZSkge1xuICAgICAgICByZXN1bHQgKz0gXCIgXCI7XG4gICAgICB9XG4gICAgICByZXN1bHQgKz0gd2hpdGVzcGFjZTtcbiAgICAgIHdoaXRlc3BhY2UgPSBcIlwiO1xuICAgICAgaWYgKGMgPT09IFwiJlwiKSB7XG4gICAgICAgIGNvbnN0IHtlbnRpdHksIG5ld0l9ID0gcHJvY2Vzc0VudGl0eSh0ZXh0LCBpICsgMSk7XG4gICAgICAgIGkgPSBuZXdJIC0gMTtcbiAgICAgICAgcmVzdWx0ICs9IGVudGl0eTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCArPSBjO1xuICAgICAgfVxuICAgICAgc2Vlbk5vbldoaXRlc3BhY2UgPSB0cnVlO1xuICAgICAgaXNJbkluaXRpYWxMaW5lV2hpdGVzcGFjZSA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICBpZiAoIWlzSW5Jbml0aWFsTGluZVdoaXRlc3BhY2UpIHtcbiAgICByZXN1bHQgKz0gd2hpdGVzcGFjZTtcbiAgfVxuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocmVzdWx0KTtcbn1cblxuLyoqXG4gKiBQcm9kdWNlIHRoZSBjb2RlIHRoYXQgc2hvdWxkIGJlIHByaW50ZWQgYWZ0ZXIgdGhlIEpTWCB0ZXh0IHN0cmluZyBsaXRlcmFsLFxuICogd2l0aCBtb3N0IGNvbnRlbnQgcmVtb3ZlZCwgYnV0IGFsbCBuZXdsaW5lcyBwcmVzZXJ2ZWQgYW5kIGFsbCBzcGFjaW5nIGF0IHRoZVxuICogZW5kIHByZXNlcnZlZC5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0SlNYVGV4dFJlcGxhY2VtZW50KHRleHQpIHtcbiAgbGV0IG51bU5ld2xpbmVzID0gMDtcbiAgbGV0IG51bVNwYWNlcyA9IDA7XG4gIGZvciAoY29uc3QgYyBvZiB0ZXh0KSB7XG4gICAgaWYgKGMgPT09IFwiXFxuXCIpIHtcbiAgICAgIG51bU5ld2xpbmVzKys7XG4gICAgICBudW1TcGFjZXMgPSAwO1xuICAgIH0gZWxzZSBpZiAoYyA9PT0gXCIgXCIpIHtcbiAgICAgIG51bVNwYWNlcysrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gXCJcXG5cIi5yZXBlYXQobnVtTmV3bGluZXMpICsgXCIgXCIucmVwZWF0KG51bVNwYWNlcyk7XG59XG5cbi8qKlxuICogRm9ybWF0IGEgc3RyaW5nIGluIHRoZSB2YWx1ZSBwb3NpdGlvbiBvZiBhIEpTWCBwcm9wLlxuICpcbiAqIFVzZSB0aGUgc2FtZSBpbXBsZW1lbnRhdGlvbiBhcyBjb252ZXJ0QXR0cmlidXRlIGZyb21cbiAqIGJhYmVsLWhlbHBlci1idWlsZGVyLXJlYWN0LWpzeC5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0SlNYU3RyaW5nVmFsdWVMaXRlcmFsKHRleHQpIHtcbiAgbGV0IHJlc3VsdCA9IFwiXCI7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGMgPSB0ZXh0W2ldO1xuICAgIGlmIChjID09PSBcIlxcblwiKSB7XG4gICAgICBpZiAoL1xccy8udGVzdCh0ZXh0W2kgKyAxXSkpIHtcbiAgICAgICAgcmVzdWx0ICs9IFwiIFwiO1xuICAgICAgICB3aGlsZSAoaSA8IHRleHQubGVuZ3RoICYmIC9cXHMvLnRlc3QodGV4dFtpICsgMV0pKSB7XG4gICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgKz0gXCJcXG5cIjtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGMgPT09IFwiJlwiKSB7XG4gICAgICBjb25zdCB7ZW50aXR5LCBuZXdJfSA9IHByb2Nlc3NFbnRpdHkodGV4dCwgaSArIDEpO1xuICAgICAgcmVzdWx0ICs9IGVudGl0eTtcbiAgICAgIGkgPSBuZXdJIC0gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0ICs9IGM7XG4gICAgfVxuICB9XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeShyZXN1bHQpO1xufVxuXG4vKipcbiAqIFN0YXJ0aW5nIGF0IGEgJiwgc2VlIGlmIHRoZXJlJ3MgYW4gSFRNTCBlbnRpdHkgKHNwZWNpZmllZCBieSBuYW1lLCBkZWNpbWFsXG4gKiBjaGFyIGNvZGUsIG9yIGhleCBjaGFyIGNvZGUpIGFuZCByZXR1cm4gaXQgaWYgc28uXG4gKlxuICogTW9kaWZpZWQgZnJvbSBqc3hSZWFkU3RyaW5nIGluIGJhYmVsLXBhcnNlci5cbiAqL1xuZnVuY3Rpb24gcHJvY2Vzc0VudGl0eSh0ZXh0LCBpbmRleEFmdGVyQW1wZXJzYW5kKSB7XG4gIGxldCBzdHIgPSBcIlwiO1xuICBsZXQgY291bnQgPSAwO1xuICBsZXQgZW50aXR5O1xuICBsZXQgaSA9IGluZGV4QWZ0ZXJBbXBlcnNhbmQ7XG5cbiAgaWYgKHRleHRbaV0gPT09IFwiI1wiKSB7XG4gICAgbGV0IHJhZGl4ID0gMTA7XG4gICAgaSsrO1xuICAgIGxldCBudW1TdGFydDtcbiAgICBpZiAodGV4dFtpXSA9PT0gXCJ4XCIpIHtcbiAgICAgIHJhZGl4ID0gMTY7XG4gICAgICBpKys7XG4gICAgICBudW1TdGFydCA9IGk7XG4gICAgICB3aGlsZSAoaSA8IHRleHQubGVuZ3RoICYmIGlzSGV4RGlnaXQodGV4dC5jaGFyQ29kZUF0KGkpKSkge1xuICAgICAgICBpKys7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG51bVN0YXJ0ID0gaTtcbiAgICAgIHdoaWxlIChpIDwgdGV4dC5sZW5ndGggJiYgaXNEZWNpbWFsRGlnaXQodGV4dC5jaGFyQ29kZUF0KGkpKSkge1xuICAgICAgICBpKys7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0ZXh0W2ldID09PSBcIjtcIikge1xuICAgICAgY29uc3QgbnVtU3RyID0gdGV4dC5zbGljZShudW1TdGFydCwgaSk7XG4gICAgICBpZiAobnVtU3RyKSB7XG4gICAgICAgIGkrKztcbiAgICAgICAgZW50aXR5ID0gU3RyaW5nLmZyb21Db2RlUG9pbnQocGFyc2VJbnQobnVtU3RyLCByYWRpeCkpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoaSA8IHRleHQubGVuZ3RoICYmIGNvdW50KysgPCAxMCkge1xuICAgICAgY29uc3QgY2ggPSB0ZXh0W2ldO1xuICAgICAgaSsrO1xuICAgICAgaWYgKGNoID09PSBcIjtcIikge1xuICAgICAgICBlbnRpdHkgPSBYSFRNTEVudGl0aWVzLmdldChzdHIpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHN0ciArPSBjaDtcbiAgICB9XG4gIH1cblxuICBpZiAoIWVudGl0eSkge1xuICAgIHJldHVybiB7ZW50aXR5OiBcIiZcIiwgbmV3STogaW5kZXhBZnRlckFtcGVyc2FuZH07XG4gIH1cbiAgcmV0dXJuIHtlbnRpdHksIG5ld0k6IGl9O1xufVxuXG5mdW5jdGlvbiBpc0RlY2ltYWxEaWdpdChjb2RlKSB7XG4gIHJldHVybiBjb2RlID49IGNoYXJDb2Rlcy5kaWdpdDAgJiYgY29kZSA8PSBjaGFyQ29kZXMuZGlnaXQ5O1xufVxuXG5mdW5jdGlvbiBpc0hleERpZ2l0KGNvZGUpIHtcbiAgcmV0dXJuIChcbiAgICAoY29kZSA+PSBjaGFyQ29kZXMuZGlnaXQwICYmIGNvZGUgPD0gY2hhckNvZGVzLmRpZ2l0OSkgfHxcbiAgICAoY29kZSA+PSBjaGFyQ29kZXMubG93ZXJjYXNlQSAmJiBjb2RlIDw9IGNoYXJDb2Rlcy5sb3dlcmNhc2VGKSB8fFxuICAgIChjb2RlID49IGNoYXJDb2Rlcy51cHBlcmNhc2VBICYmIGNvZGUgPD0gY2hhckNvZGVzLnVwcGVyY2FzZUYpXG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/JSXTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/JestHoistTransformer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/JestHoistTransformer.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ JestHoistTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\n\n\n\n\n\nconst JEST_GLOBAL_NAME = \"jest\";\nconst HOISTED_METHODS = [\"mock\", \"unmock\", \"enableAutomock\", \"disableAutomock\"];\n\n/**\n * Implementation of babel-plugin-jest-hoist, which hoists up some jest method\n * calls above the imports to allow them to override other imports.\n *\n * To preserve line numbers, rather than directly moving the jest.mock code, we\n * wrap each invocation in a function statement and then call the function from\n * the top of the file.\n */\nclass JestHoistTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    __init() {this.hoistedFunctionNames = []}\n\n  constructor(\n     rootTransformer,\n     tokens,\n     nameManager,\n     importProcessor,\n  ) {\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.nameManager = nameManager;this.importProcessor = importProcessor;JestHoistTransformer.prototype.__init.call(this);;\n  }\n\n  process() {\n    if (\n      this.tokens.currentToken().scopeDepth === 0 &&\n      this.tokens.matches4(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.dot, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenL) &&\n      this.tokens.identifierName() === JEST_GLOBAL_NAME\n    ) {\n      // TODO: This only works if imports transform is active, which it will be for jest.\n      //       But if jest adds module support and we no longer need the import transform, this needs fixing.\n      if (_optionalChain([this, 'access', _ => _.importProcessor, 'optionalAccess', _2 => _2.getGlobalNames, 'call', _3 => _3(), 'optionalAccess', _4 => _4.has, 'call', _5 => _5(JEST_GLOBAL_NAME)])) {\n        return false;\n      }\n      return this.extractHoistedCalls();\n    }\n\n    return false;\n  }\n\n  getHoistedCode() {\n    if (this.hoistedFunctionNames.length > 0) {\n      // This will be placed before module interop code, but that's fine since\n      // imports aren't allowed in module mock factories.\n      return this.hoistedFunctionNames.map((name) => `${name}();`).join(\"\");\n    }\n    return \"\";\n  }\n\n  /**\n   * Extracts any methods calls on the jest-object that should be hoisted.\n   *\n   * According to the jest docs, https://jestjs.io/docs/en/jest-object#jestmockmodulename-factory-options,\n   * mock, unmock, enableAutomock, disableAutomock, are the methods that should be hoisted.\n   *\n   * We do not apply the same checks of the arguments as babel-plugin-jest-hoist does.\n   */\n   extractHoistedCalls() {\n    // We're handling a chain of calls where `jest` may or may not need to be inserted for each call\n    // in the chain, so remove the initial `jest` to make the loop implementation cleaner.\n    this.tokens.removeToken();\n    // Track some state so that multiple non-hoisted chained calls in a row keep their chaining\n    // syntax.\n    let followsNonHoistedJestCall = false;\n\n    // Iterate through all chained calls on the jest object.\n    while (this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.dot, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenL)) {\n      const methodName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\n      const shouldHoist = HOISTED_METHODS.includes(methodName);\n      if (shouldHoist) {\n        // We've matched e.g. `.mock(...)` or similar call.\n        // Replace the initial `.` with `function __jestHoist(){jest.`\n        const hoistedFunctionName = this.nameManager.claimFreeName(\"__jestHoist\");\n        this.hoistedFunctionNames.push(hoistedFunctionName);\n        this.tokens.replaceToken(`function ${hoistedFunctionName}(){${JEST_GLOBAL_NAME}.`);\n        this.tokens.copyToken();\n        this.tokens.copyToken();\n        this.rootTransformer.processBalancedCode();\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenR);\n        this.tokens.appendCode(\";}\");\n        followsNonHoistedJestCall = false;\n      } else {\n        // This is a non-hoisted method, so just transform the code as usual.\n        if (followsNonHoistedJestCall) {\n          // If we didn't hoist the previous call, we can leave the code as-is to chain off of the\n          // previous method call. It's important to preserve the code here because we don't know\n          // for sure that the method actually returned the jest object for chaining.\n          this.tokens.copyToken();\n        } else {\n          // If we hoisted the previous call, we know it returns the jest object back, so we insert\n          // the identifier `jest` to continue the chain.\n          this.tokens.replaceToken(`${JEST_GLOBAL_NAME}.`);\n        }\n        this.tokens.copyToken();\n        this.tokens.copyToken();\n        this.rootTransformer.processBalancedCode();\n        this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenR);\n        followsNonHoistedJestCall = true;\n      }\n    }\n\n    return true;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9KZXN0SG9pc3RUcmFuc2Zvcm1lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxnQ0FBZ0MsK0JBQStCLG9CQUFvQixXQUFXLHlCQUF5QixtQkFBbUIsdUJBQXVCLFFBQVEsMkVBQTJFLG9CQUFvQixrREFBa0QsdUJBQXVCLHFCQUFxQixtREFBbUQsNkRBQTZELCtCQUErQjs7QUFFM2I7OztBQUdsQjs7QUFFeEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2UsbUNBQW1DLG9EQUFXO0FBQzdELGNBQWM7O0FBRWQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1Q0FBdUMscUJBQXFCLCtCQUErQix1Q0FBdUM7QUFDOUk7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDhEQUFFLE9BQU8sOERBQUUsTUFBTSw4REFBRSxPQUFPLDhEQUFFO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELEtBQUssR0FBRztBQUNoRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLDhEQUFFLE1BQU0sOERBQUUsT0FBTyw4REFBRTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRTtBQUNoRTtBQUNBO0FBQ0EsNkNBQTZDLG9CQUFvQixHQUFHLEVBQUUsaUJBQWlCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw4REFBRTtBQUN4QyxrQ0FBa0M7QUFDbEM7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxzQ0FBc0MsaUJBQWlCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDhEQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vdHJhbnNmb3JtZXJzL0plc3RIb2lzdFRyYW5zZm9ybWVyLmpzP2EzMjMiXSwic291cmNlc0NvbnRlbnQiOlsiIGZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykgeyBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDsgbGV0IHZhbHVlID0gb3BzWzBdOyBsZXQgaSA9IDE7IHdoaWxlIChpIDwgb3BzLmxlbmd0aCkgeyBjb25zdCBvcCA9IG9wc1tpXTsgY29uc3QgZm4gPSBvcHNbaSArIDFdOyBpICs9IDI7IGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gaWYgKG9wID09PSAnYWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJykgeyBsYXN0QWNjZXNzTEhTID0gdmFsdWU7IHZhbHVlID0gZm4odmFsdWUpOyB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7IHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+IHZhbHVlLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpOyBsYXN0QWNjZXNzTEhTID0gdW5kZWZpbmVkOyB9IH0gcmV0dXJuIHZhbHVlOyB9XG5cbmltcG9ydCB7VG9rZW5UeXBlIGFzIHR0fSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplci90eXBlc1wiO1xuXG5cbmltcG9ydCBUcmFuc2Zvcm1lciBmcm9tIFwiLi9UcmFuc2Zvcm1lclwiO1xuXG5jb25zdCBKRVNUX0dMT0JBTF9OQU1FID0gXCJqZXN0XCI7XG5jb25zdCBIT0lTVEVEX01FVEhPRFMgPSBbXCJtb2NrXCIsIFwidW5tb2NrXCIsIFwiZW5hYmxlQXV0b21vY2tcIiwgXCJkaXNhYmxlQXV0b21vY2tcIl07XG5cbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgYmFiZWwtcGx1Z2luLWplc3QtaG9pc3QsIHdoaWNoIGhvaXN0cyB1cCBzb21lIGplc3QgbWV0aG9kXG4gKiBjYWxscyBhYm92ZSB0aGUgaW1wb3J0cyB0byBhbGxvdyB0aGVtIHRvIG92ZXJyaWRlIG90aGVyIGltcG9ydHMuXG4gKlxuICogVG8gcHJlc2VydmUgbGluZSBudW1iZXJzLCByYXRoZXIgdGhhbiBkaXJlY3RseSBtb3ZpbmcgdGhlIGplc3QubW9jayBjb2RlLCB3ZVxuICogd3JhcCBlYWNoIGludm9jYXRpb24gaW4gYSBmdW5jdGlvbiBzdGF0ZW1lbnQgYW5kIHRoZW4gY2FsbCB0aGUgZnVuY3Rpb24gZnJvbVxuICogdGhlIHRvcCBvZiB0aGUgZmlsZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSmVzdEhvaXN0VHJhbnNmb3JtZXIgZXh0ZW5kcyBUcmFuc2Zvcm1lciB7XG4gICAgX19pbml0KCkge3RoaXMuaG9pc3RlZEZ1bmN0aW9uTmFtZXMgPSBbXX1cblxuICBjb25zdHJ1Y3RvcihcbiAgICAgcm9vdFRyYW5zZm9ybWVyLFxuICAgICB0b2tlbnMsXG4gICAgIG5hbWVNYW5hZ2VyLFxuICAgICBpbXBvcnRQcm9jZXNzb3IsXG4gICkge1xuICAgIHN1cGVyKCk7dGhpcy5yb290VHJhbnNmb3JtZXIgPSByb290VHJhbnNmb3JtZXI7dGhpcy50b2tlbnMgPSB0b2tlbnM7dGhpcy5uYW1lTWFuYWdlciA9IG5hbWVNYW5hZ2VyO3RoaXMuaW1wb3J0UHJvY2Vzc29yID0gaW1wb3J0UHJvY2Vzc29yO0plc3RIb2lzdFRyYW5zZm9ybWVyLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTs7XG4gIH1cblxuICBwcm9jZXNzKCkge1xuICAgIGlmIChcbiAgICAgIHRoaXMudG9rZW5zLmN1cnJlbnRUb2tlbigpLnNjb3BlRGVwdGggPT09IDAgJiZcbiAgICAgIHRoaXMudG9rZW5zLm1hdGNoZXM0KHR0Lm5hbWUsIHR0LmRvdCwgdHQubmFtZSwgdHQucGFyZW5MKSAmJlxuICAgICAgdGhpcy50b2tlbnMuaWRlbnRpZmllck5hbWUoKSA9PT0gSkVTVF9HTE9CQUxfTkFNRVxuICAgICkge1xuICAgICAgLy8gVE9ETzogVGhpcyBvbmx5IHdvcmtzIGlmIGltcG9ydHMgdHJhbnNmb3JtIGlzIGFjdGl2ZSwgd2hpY2ggaXQgd2lsbCBiZSBmb3IgamVzdC5cbiAgICAgIC8vICAgICAgIEJ1dCBpZiBqZXN0IGFkZHMgbW9kdWxlIHN1cHBvcnQgYW5kIHdlIG5vIGxvbmdlciBuZWVkIHRoZSBpbXBvcnQgdHJhbnNmb3JtLCB0aGlzIG5lZWRzIGZpeGluZy5cbiAgICAgIGlmIChfb3B0aW9uYWxDaGFpbihbdGhpcywgJ2FjY2VzcycsIF8gPT4gXy5pbXBvcnRQcm9jZXNzb3IsICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLmdldEdsb2JhbE5hbWVzLCAnY2FsbCcsIF8zID0+IF8zKCksICdvcHRpb25hbEFjY2VzcycsIF80ID0+IF80LmhhcywgJ2NhbGwnLCBfNSA9PiBfNShKRVNUX0dMT0JBTF9OQU1FKV0pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RIb2lzdGVkQ2FsbHMoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBnZXRIb2lzdGVkQ29kZSgpIHtcbiAgICBpZiAodGhpcy5ob2lzdGVkRnVuY3Rpb25OYW1lcy5sZW5ndGggPiAwKSB7XG4gICAgICAvLyBUaGlzIHdpbGwgYmUgcGxhY2VkIGJlZm9yZSBtb2R1bGUgaW50ZXJvcCBjb2RlLCBidXQgdGhhdCdzIGZpbmUgc2luY2VcbiAgICAgIC8vIGltcG9ydHMgYXJlbid0IGFsbG93ZWQgaW4gbW9kdWxlIG1vY2sgZmFjdG9yaWVzLlxuICAgICAgcmV0dXJuIHRoaXMuaG9pc3RlZEZ1bmN0aW9uTmFtZXMubWFwKChuYW1lKSA9PiBgJHtuYW1lfSgpO2ApLmpvaW4oXCJcIik7XG4gICAgfVxuICAgIHJldHVybiBcIlwiO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4dHJhY3RzIGFueSBtZXRob2RzIGNhbGxzIG9uIHRoZSBqZXN0LW9iamVjdCB0aGF0IHNob3VsZCBiZSBob2lzdGVkLlxuICAgKlxuICAgKiBBY2NvcmRpbmcgdG8gdGhlIGplc3QgZG9jcywgaHR0cHM6Ly9qZXN0anMuaW8vZG9jcy9lbi9qZXN0LW9iamVjdCNqZXN0bW9ja21vZHVsZW5hbWUtZmFjdG9yeS1vcHRpb25zLFxuICAgKiBtb2NrLCB1bm1vY2ssIGVuYWJsZUF1dG9tb2NrLCBkaXNhYmxlQXV0b21vY2ssIGFyZSB0aGUgbWV0aG9kcyB0aGF0IHNob3VsZCBiZSBob2lzdGVkLlxuICAgKlxuICAgKiBXZSBkbyBub3QgYXBwbHkgdGhlIHNhbWUgY2hlY2tzIG9mIHRoZSBhcmd1bWVudHMgYXMgYmFiZWwtcGx1Z2luLWplc3QtaG9pc3QgZG9lcy5cbiAgICovXG4gICBleHRyYWN0SG9pc3RlZENhbGxzKCkge1xuICAgIC8vIFdlJ3JlIGhhbmRsaW5nIGEgY2hhaW4gb2YgY2FsbHMgd2hlcmUgYGplc3RgIG1heSBvciBtYXkgbm90IG5lZWQgdG8gYmUgaW5zZXJ0ZWQgZm9yIGVhY2ggY2FsbFxuICAgIC8vIGluIHRoZSBjaGFpbiwgc28gcmVtb3ZlIHRoZSBpbml0aWFsIGBqZXN0YCB0byBtYWtlIHRoZSBsb29wIGltcGxlbWVudGF0aW9uIGNsZWFuZXIuXG4gICAgdGhpcy50b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAvLyBUcmFjayBzb21lIHN0YXRlIHNvIHRoYXQgbXVsdGlwbGUgbm9uLWhvaXN0ZWQgY2hhaW5lZCBjYWxscyBpbiBhIHJvdyBrZWVwIHRoZWlyIGNoYWluaW5nXG4gICAgLy8gc3ludGF4LlxuICAgIGxldCBmb2xsb3dzTm9uSG9pc3RlZEplc3RDYWxsID0gZmFsc2U7XG5cbiAgICAvLyBJdGVyYXRlIHRocm91Z2ggYWxsIGNoYWluZWQgY2FsbHMgb24gdGhlIGplc3Qgb2JqZWN0LlxuICAgIHdoaWxlICh0aGlzLnRva2Vucy5tYXRjaGVzMyh0dC5kb3QsIHR0Lm5hbWUsIHR0LnBhcmVuTCkpIHtcbiAgICAgIGNvbnN0IG1ldGhvZE5hbWUgPSB0aGlzLnRva2Vucy5pZGVudGlmaWVyTmFtZUF0SW5kZXgodGhpcy50b2tlbnMuY3VycmVudEluZGV4KCkgKyAxKTtcbiAgICAgIGNvbnN0IHNob3VsZEhvaXN0ID0gSE9JU1RFRF9NRVRIT0RTLmluY2x1ZGVzKG1ldGhvZE5hbWUpO1xuICAgICAgaWYgKHNob3VsZEhvaXN0KSB7XG4gICAgICAgIC8vIFdlJ3ZlIG1hdGNoZWQgZS5nLiBgLm1vY2soLi4uKWAgb3Igc2ltaWxhciBjYWxsLlxuICAgICAgICAvLyBSZXBsYWNlIHRoZSBpbml0aWFsIGAuYCB3aXRoIGBmdW5jdGlvbiBfX2plc3RIb2lzdCgpe2plc3QuYFxuICAgICAgICBjb25zdCBob2lzdGVkRnVuY3Rpb25OYW1lID0gdGhpcy5uYW1lTWFuYWdlci5jbGFpbUZyZWVOYW1lKFwiX19qZXN0SG9pc3RcIik7XG4gICAgICAgIHRoaXMuaG9pc3RlZEZ1bmN0aW9uTmFtZXMucHVzaChob2lzdGVkRnVuY3Rpb25OYW1lKTtcbiAgICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGBmdW5jdGlvbiAke2hvaXN0ZWRGdW5jdGlvbk5hbWV9KCl7JHtKRVNUX0dMT0JBTF9OQU1FfS5gKTtcbiAgICAgICAgdGhpcy50b2tlbnMuY29weVRva2VuKCk7XG4gICAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgICB0aGlzLnJvb3RUcmFuc2Zvcm1lci5wcm9jZXNzQmFsYW5jZWRDb2RlKCk7XG4gICAgICAgIHRoaXMudG9rZW5zLmNvcHlFeHBlY3RlZFRva2VuKHR0LnBhcmVuUik7XG4gICAgICAgIHRoaXMudG9rZW5zLmFwcGVuZENvZGUoXCI7fVwiKTtcbiAgICAgICAgZm9sbG93c05vbkhvaXN0ZWRKZXN0Q2FsbCA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVGhpcyBpcyBhIG5vbi1ob2lzdGVkIG1ldGhvZCwgc28ganVzdCB0cmFuc2Zvcm0gdGhlIGNvZGUgYXMgdXN1YWwuXG4gICAgICAgIGlmIChmb2xsb3dzTm9uSG9pc3RlZEplc3RDYWxsKSB7XG4gICAgICAgICAgLy8gSWYgd2UgZGlkbid0IGhvaXN0IHRoZSBwcmV2aW91cyBjYWxsLCB3ZSBjYW4gbGVhdmUgdGhlIGNvZGUgYXMtaXMgdG8gY2hhaW4gb2ZmIG9mIHRoZVxuICAgICAgICAgIC8vIHByZXZpb3VzIG1ldGhvZCBjYWxsLiBJdCdzIGltcG9ydGFudCB0byBwcmVzZXJ2ZSB0aGUgY29kZSBoZXJlIGJlY2F1c2Ugd2UgZG9uJ3Qga25vd1xuICAgICAgICAgIC8vIGZvciBzdXJlIHRoYXQgdGhlIG1ldGhvZCBhY3R1YWxseSByZXR1cm5lZCB0aGUgamVzdCBvYmplY3QgZm9yIGNoYWluaW5nLlxuICAgICAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIElmIHdlIGhvaXN0ZWQgdGhlIHByZXZpb3VzIGNhbGwsIHdlIGtub3cgaXQgcmV0dXJucyB0aGUgamVzdCBvYmplY3QgYmFjaywgc28gd2UgaW5zZXJ0XG4gICAgICAgICAgLy8gdGhlIGlkZW50aWZpZXIgYGplc3RgIHRvIGNvbnRpbnVlIHRoZSBjaGFpbi5cbiAgICAgICAgICB0aGlzLnRva2Vucy5yZXBsYWNlVG9rZW4oYCR7SkVTVF9HTE9CQUxfTkFNRX0uYCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50b2tlbnMuY29weVRva2VuKCk7XG4gICAgICAgIHRoaXMudG9rZW5zLmNvcHlUb2tlbigpO1xuICAgICAgICB0aGlzLnJvb3RUcmFuc2Zvcm1lci5wcm9jZXNzQmFsYW5jZWRDb2RlKCk7XG4gICAgICAgIHRoaXMudG9rZW5zLmNvcHlFeHBlY3RlZFRva2VuKHR0LnBhcmVuUik7XG4gICAgICAgIGZvbGxvd3NOb25Ib2lzdGVkSmVzdENhbGwgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/JestHoistTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/NumericSeparatorTransformer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/NumericSeparatorTransformer.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ NumericSeparatorTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\nclass NumericSeparatorTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor( tokens) {\n    super();this.tokens = tokens;;\n  }\n\n  process() {\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.num)) {\n      const code = this.tokens.currentTokenCode();\n      if (code.includes(\"_\")) {\n        this.tokens.replaceToken(code.replace(/_/g, \"\"));\n        return true;\n      }\n    }\n    return false;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9OdW1lcmljU2VwYXJhdG9yVHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBEOztBQUVsQjs7QUFFekIsMENBQTBDLG9EQUFXO0FBQ3BFO0FBQ0EsWUFBWTtBQUNaOztBQUVBO0FBQ0EsNkJBQTZCLDhEQUFFO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS90cmFuc2Zvcm1lcnMvTnVtZXJpY1NlcGFyYXRvclRyYW5zZm9ybWVyLmpzPzI1MTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUb2tlblR5cGUgYXMgdHR9IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyL3R5cGVzXCI7XG5cbmltcG9ydCBUcmFuc2Zvcm1lciBmcm9tIFwiLi9UcmFuc2Zvcm1lclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOdW1lcmljU2VwYXJhdG9yVHJhbnNmb3JtZXIgZXh0ZW5kcyBUcmFuc2Zvcm1lciB7XG4gIGNvbnN0cnVjdG9yKCB0b2tlbnMpIHtcbiAgICBzdXBlcigpO3RoaXMudG9rZW5zID0gdG9rZW5zOztcbiAgfVxuXG4gIHByb2Nlc3MoKSB7XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMxKHR0Lm51bSkpIHtcbiAgICAgIGNvbnN0IGNvZGUgPSB0aGlzLnRva2Vucy5jdXJyZW50VG9rZW5Db2RlKCk7XG4gICAgICBpZiAoY29kZS5pbmNsdWRlcyhcIl9cIikpIHtcbiAgICAgICAgdGhpcy50b2tlbnMucmVwbGFjZVRva2VuKGNvZGUucmVwbGFjZSgvXy9nLCBcIlwiKSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/NumericSeparatorTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/OptionalCatchBindingTransformer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/OptionalCatchBindingTransformer.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OptionalCatchBindingTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\nclass OptionalCatchBindingTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor( tokens,  nameManager) {\n    super();this.tokens = tokens;this.nameManager = nameManager;;\n  }\n\n  process() {\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._catch, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceL)) {\n      this.tokens.copyToken();\n      this.tokens.appendCode(` (${this.nameManager.claimFreeName(\"e\")})`);\n      return true;\n    }\n    return false;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9PcHRpb25hbENhdGNoQmluZGluZ1RyYW5zZm9ybWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDMEQ7O0FBRWxCOztBQUV6Qiw4Q0FBOEMsb0RBQVc7QUFDeEU7QUFDQSxZQUFZLHFCQUFxQjtBQUNqQzs7QUFFQTtBQUNBLDZCQUE2Qiw4REFBRSxTQUFTLDhEQUFFO0FBQzFDO0FBQ0Esa0NBQWtDLG9DQUFvQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9PcHRpb25hbENhdGNoQmluZGluZ1RyYW5zZm9ybWVyLmpzPzAxMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge1Rva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIvdHlwZXNcIjtcblxuaW1wb3J0IFRyYW5zZm9ybWVyIGZyb20gXCIuL1RyYW5zZm9ybWVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9wdGlvbmFsQ2F0Y2hCaW5kaW5nVHJhbnNmb3JtZXIgZXh0ZW5kcyBUcmFuc2Zvcm1lciB7XG4gIGNvbnN0cnVjdG9yKCB0b2tlbnMsICBuYW1lTWFuYWdlcikge1xuICAgIHN1cGVyKCk7dGhpcy50b2tlbnMgPSB0b2tlbnM7dGhpcy5uYW1lTWFuYWdlciA9IG5hbWVNYW5hZ2VyOztcbiAgfVxuXG4gIHByb2Nlc3MoKSB7XG4gICAgaWYgKHRoaXMudG9rZW5zLm1hdGNoZXMyKHR0Ll9jYXRjaCwgdHQuYnJhY2VMKSkge1xuICAgICAgdGhpcy50b2tlbnMuY29weVRva2VuKCk7XG4gICAgICB0aGlzLnRva2Vucy5hcHBlbmRDb2RlKGAgKCR7dGhpcy5uYW1lTWFuYWdlci5jbGFpbUZyZWVOYW1lKFwiZVwiKX0pYCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/OptionalCatchBindingTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/OptionalChainingNullishTransformer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/OptionalChainingNullishTransformer.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OptionalChainingNullishTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\n/**\n * Transformer supporting the optional chaining and nullish coalescing operators.\n *\n * Tech plan here:\n * https://github.com/alangpierce/sucrase/wiki/Sucrase-Optional-Chaining-and-Nullish-Coalescing-Technical-Plan\n *\n * The prefix and suffix code snippets are handled by TokenProcessor, and this transformer handles\n * the operators themselves.\n */\nclass OptionalChainingNullishTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor( tokens,  nameManager) {\n    super();this.tokens = tokens;this.nameManager = nameManager;;\n  }\n\n  process() {\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.nullishCoalescing)) {\n      const token = this.tokens.currentToken();\n      if (this.tokens.tokens[token.nullishStartIndex].isAsyncOperation) {\n        this.tokens.replaceTokenTrimmingLeftWhitespace(\", async () => (\");\n      } else {\n        this.tokens.replaceTokenTrimmingLeftWhitespace(\", () => (\");\n      }\n      return true;\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._delete)) {\n      const nextToken = this.tokens.tokenAtRelativeIndex(1);\n      if (nextToken.isOptionalChainStart) {\n        this.tokens.removeInitialToken();\n        return true;\n      }\n    }\n    const token = this.tokens.currentToken();\n    const chainStart = token.subscriptStartIndex;\n    if (\n      chainStart != null &&\n      this.tokens.tokens[chainStart].isOptionalChainStart &&\n      // Super subscripts can't be optional (since super is never null/undefined), and the syntax\n      // relies on the subscript being intact, so leave this token alone.\n      this.tokens.tokenAtRelativeIndex(-1).type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._super\n    ) {\n      const param = this.nameManager.claimFreeName(\"_\");\n      let arrowStartSnippet;\n      if (\n        chainStart > 0 &&\n        this.tokens.matches1AtIndex(chainStart - 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._delete) &&\n        this.isLastSubscriptInChain()\n      ) {\n        // Delete operations are special: we already removed the delete keyword, and to still\n        // perform a delete, we need to insert a delete in the very last part of the chain, which\n        // in correct code will always be a property access.\n        arrowStartSnippet = `${param} => delete ${param}`;\n      } else {\n        arrowStartSnippet = `${param} => ${param}`;\n      }\n      if (this.tokens.tokens[chainStart].isAsyncOperation) {\n        arrowStartSnippet = `async ${arrowStartSnippet}`;\n      }\n      if (\n        this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.questionDot, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenL) ||\n        this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.questionDot, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.lessThan)\n      ) {\n        if (this.justSkippedSuper()) {\n          this.tokens.appendCode(\".bind(this)\");\n        }\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalCall', ${arrowStartSnippet}`);\n      } else if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.questionDot, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.bracketL)) {\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalAccess', ${arrowStartSnippet}`);\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.questionDot)) {\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalAccess', ${arrowStartSnippet}.`);\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.dot)) {\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'access', ${arrowStartSnippet}.`);\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.bracketL)) {\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'access', ${arrowStartSnippet}[`);\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenL)) {\n        if (this.justSkippedSuper()) {\n          this.tokens.appendCode(\".bind(this)\");\n        }\n        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'call', ${arrowStartSnippet}(`);\n      } else {\n        throw new Error(\"Unexpected subscript operator in optional chain.\");\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Determine if the current token is the last of its chain, so that we know whether it's eligible\n   * to have a delete op inserted.\n   *\n   * We can do this by walking forward until we determine one way or another. Each\n   * isOptionalChainStart token must be paired with exactly one isOptionalChainEnd token after it in\n   * a nesting way, so we can track depth and walk to the end of the chain (the point where the\n   * depth goes negative) and see if any other subscript token is after us in the chain.\n   */\n  isLastSubscriptInChain() {\n    let depth = 0;\n    for (let i = this.tokens.currentIndex() + 1; ; i++) {\n      if (i >= this.tokens.tokens.length) {\n        throw new Error(\"Reached the end of the code while finding the end of the access chain.\");\n      }\n      if (this.tokens.tokens[i].isOptionalChainStart) {\n        depth++;\n      } else if (this.tokens.tokens[i].isOptionalChainEnd) {\n        depth--;\n      }\n      if (depth < 0) {\n        return true;\n      }\n\n      // This subscript token is a later one in the same chain.\n      if (depth === 0 && this.tokens.tokens[i].subscriptStartIndex != null) {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Determine if we are the open-paren in an expression like super.a()?.b.\n   *\n   * We can do this by walking backward to find the previous subscript. If that subscript was\n   * preceded by a super, then we must be the subscript after it, so if this is a call expression,\n   * we'll need to attach the right context.\n   */\n  justSkippedSuper() {\n    let depth = 0;\n    let index = this.tokens.currentIndex() - 1;\n    while (true) {\n      if (index < 0) {\n        throw new Error(\n          \"Reached the start of the code while finding the start of the access chain.\",\n        );\n      }\n      if (this.tokens.tokens[index].isOptionalChainStart) {\n        depth--;\n      } else if (this.tokens.tokens[index].isOptionalChainEnd) {\n        depth++;\n      }\n      if (depth < 0) {\n        return false;\n      }\n\n      // This subscript token is a later one in the same chain.\n      if (depth === 0 && this.tokens.tokens[index].subscriptStartIndex != null) {\n        return this.tokens.tokens[index - 1].type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._super;\n      }\n      index--;\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/OptionalChainingNullishTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ReactDisplayNameTransformer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/ReactDisplayNameTransformer.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ReactDisplayNameTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\n\n\n\n/**\n * Implementation of babel-plugin-transform-react-display-name, which adds a\n * display name to usages of React.createClass and createReactClass.\n */\nclass ReactDisplayNameTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor(\n     rootTransformer,\n     tokens,\n     importProcessor,\n     options,\n  ) {\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.options = options;;\n  }\n\n  process() {\n    const startIndex = this.tokens.currentIndex();\n    if (this.tokens.identifierName() === \"createReactClass\") {\n      const newName =\n        this.importProcessor && this.importProcessor.getIdentifierReplacement(\"createReactClass\");\n      if (newName) {\n        this.tokens.replaceToken(`(0, ${newName})`);\n      } else {\n        this.tokens.copyToken();\n      }\n      this.tryProcessCreateClassCall(startIndex);\n      return true;\n    }\n    if (\n      this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.dot, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name) &&\n      this.tokens.identifierName() === \"React\" &&\n      this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 2) === \"createClass\"\n    ) {\n      const newName = this.importProcessor\n        ? this.importProcessor.getIdentifierReplacement(\"React\") || \"React\"\n        : \"React\";\n      if (newName) {\n        this.tokens.replaceToken(newName);\n        this.tokens.copyToken();\n        this.tokens.copyToken();\n      } else {\n        this.tokens.copyToken();\n        this.tokens.copyToken();\n        this.tokens.copyToken();\n      }\n      this.tryProcessCreateClassCall(startIndex);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * This is called with the token position at the open-paren.\n   */\n   tryProcessCreateClassCall(startIndex) {\n    const displayName = this.findDisplayName(startIndex);\n    if (!displayName) {\n      return;\n    }\n\n    if (this.classNeedsDisplayName()) {\n      this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenL);\n      this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL);\n      this.tokens.appendCode(`displayName: '${displayName}',`);\n      this.rootTransformer.processBalancedCode();\n      this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR);\n      this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR);\n    }\n  }\n\n   findDisplayName(startIndex) {\n    if (startIndex < 2) {\n      return null;\n    }\n    if (this.tokens.matches2AtIndex(startIndex - 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq)) {\n      // This is an assignment (or declaration) and the LHS is either an identifier or a member\n      // expression ending in an identifier, so use that identifier name.\n      return this.tokens.identifierNameAtIndex(startIndex - 2);\n    }\n    if (\n      startIndex >= 2 &&\n      this.tokens.tokens[startIndex - 2].identifierRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ObjectKey\n    ) {\n      // This is an object literal value.\n      return this.tokens.identifierNameAtIndex(startIndex - 2);\n    }\n    if (this.tokens.matches2AtIndex(startIndex - 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._default)) {\n      return this.getDisplayNameFromFilename();\n    }\n    return null;\n  }\n\n   getDisplayNameFromFilename() {\n    const filePath = this.options.filePath || \"unknown\";\n    const pathSegments = filePath.split(\"/\");\n    const filename = pathSegments[pathSegments.length - 1];\n    const dotIndex = filename.lastIndexOf(\".\");\n    const baseFilename = dotIndex === -1 ? filename : filename.slice(0, dotIndex);\n    if (baseFilename === \"index\" && pathSegments[pathSegments.length - 2]) {\n      return pathSegments[pathSegments.length - 2];\n    } else {\n      return baseFilename;\n    }\n  }\n\n  /**\n   * We only want to add a display name when this is a function call containing\n   * one argument, which is an object literal without `displayName` as an\n   * existing key.\n   */\n   classNeedsDisplayName() {\n    let index = this.tokens.currentIndex();\n    if (!this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenL, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL)) {\n      return false;\n    }\n    // The block starts on the {, and we expect any displayName key to be in\n    // that context. We need to ignore other other contexts to avoid matching\n    // nested displayName keys.\n    const objectStartIndex = index + 1;\n    const objectContextId = this.tokens.tokens[objectStartIndex].contextId;\n    if (objectContextId == null) {\n      throw new Error(\"Expected non-null context ID on object open-brace.\");\n    }\n\n    for (; index < this.tokens.tokens.length; index++) {\n      const token = this.tokens.tokens[index];\n      if (token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR && token.contextId === objectContextId) {\n        index++;\n        break;\n      }\n\n      if (\n        this.tokens.identifierNameAtIndex(index) === \"displayName\" &&\n        this.tokens.tokens[index].identifierRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ObjectKey &&\n        token.contextId === objectContextId\n      ) {\n        // We found a displayName key, so bail out.\n        return false;\n      }\n    }\n\n    if (index === this.tokens.tokens.length) {\n      throw new Error(\"Unexpected end of input when processing React class.\");\n    }\n\n    // If we got this far, we know we have createClass with an object with no\n    // display name, so we want to proceed as long as that was the only argument.\n    return (\n      this.tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR) ||\n      this.tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.comma, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR)\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ReactDisplayNameTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ReactHotLoaderTransformer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/ReactHotLoaderTransformer.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ReactHotLoaderTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\nclass ReactHotLoaderTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n   __init() {this.extractedDefaultExportName = null}\n\n  constructor( tokens,  filePath) {\n    super();this.tokens = tokens;this.filePath = filePath;ReactHotLoaderTransformer.prototype.__init.call(this);;\n  }\n\n  setExtractedDefaultExportName(extractedDefaultExportName) {\n    this.extractedDefaultExportName = extractedDefaultExportName;\n  }\n\n  getPrefixCode() {\n    return `\n      (function () {\n        var enterModule = require('react-hot-loader').enterModule;\n        enterModule && enterModule(module);\n      })();`\n      .replace(/\\s+/g, \" \")\n      .trim();\n  }\n\n  getSuffixCode() {\n    const topLevelNames = new Set();\n    for (const token of this.tokens.tokens) {\n      if (\n        !token.isType &&\n        (0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isTopLevelDeclaration)(token) &&\n        token.identifierRole !== _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ImportDeclaration\n      ) {\n        topLevelNames.add(this.tokens.identifierNameForToken(token));\n      }\n    }\n    const namesToRegister = Array.from(topLevelNames).map((name) => ({\n      variableName: name,\n      uniqueLocalName: name,\n    }));\n    if (this.extractedDefaultExportName) {\n      namesToRegister.push({\n        variableName: this.extractedDefaultExportName,\n        uniqueLocalName: \"default\",\n      });\n    }\n    return `\n;(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n  var leaveModule = require('react-hot-loader').leaveModule;\n  if (!reactHotLoader) {\n    return;\n  }\n${namesToRegister\n  .map(\n    ({variableName, uniqueLocalName}) =>\n      `  reactHotLoader.register(${variableName}, \"${uniqueLocalName}\", ${JSON.stringify(\n        this.filePath || \"\",\n      )});`,\n  )\n  .join(\"\\n\")}\n  leaveModule(module);\n})();`;\n  }\n\n  process() {\n    return false;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9SZWFjdEhvdExvYWRlclRyYW5zZm9ybWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwRTs7QUFFbEM7O0FBRXpCLHdDQUF3QyxvREFBVztBQUNsRSxhQUFhOztBQUViO0FBQ0EsWUFBWSxxQkFBcUIseUJBQXlCO0FBQzFEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxJQUFJO0FBQ1g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdFQUFxQjtBQUM3QixpQ0FBaUMsNkRBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsTUFBTSw4QkFBOEI7QUFDcEMsbUNBQW1DLGFBQWEsS0FBSyxnQkFBZ0IsS0FBSztBQUMxRTtBQUNBLFFBQVEsRUFBRTtBQUNWO0FBQ0E7QUFDQTtBQUNBLENBQUMsSUFBSTtBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9SZWFjdEhvdExvYWRlclRyYW5zZm9ybWVyLmpzPzMzZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJZGVudGlmaWVyUm9sZSwgaXNUb3BMZXZlbERlY2xhcmF0aW9ufSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplclwiO1xuXG5pbXBvcnQgVHJhbnNmb3JtZXIgZnJvbSBcIi4vVHJhbnNmb3JtZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVhY3RIb3RMb2FkZXJUcmFuc2Zvcm1lciBleHRlbmRzIFRyYW5zZm9ybWVyIHtcbiAgIF9faW5pdCgpIHt0aGlzLmV4dHJhY3RlZERlZmF1bHRFeHBvcnROYW1lID0gbnVsbH1cblxuICBjb25zdHJ1Y3RvciggdG9rZW5zLCAgZmlsZVBhdGgpIHtcbiAgICBzdXBlcigpO3RoaXMudG9rZW5zID0gdG9rZW5zO3RoaXMuZmlsZVBhdGggPSBmaWxlUGF0aDtSZWFjdEhvdExvYWRlclRyYW5zZm9ybWVyLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTs7XG4gIH1cblxuICBzZXRFeHRyYWN0ZWREZWZhdWx0RXhwb3J0TmFtZShleHRyYWN0ZWREZWZhdWx0RXhwb3J0TmFtZSkge1xuICAgIHRoaXMuZXh0cmFjdGVkRGVmYXVsdEV4cG9ydE5hbWUgPSBleHRyYWN0ZWREZWZhdWx0RXhwb3J0TmFtZTtcbiAgfVxuXG4gIGdldFByZWZpeENvZGUoKSB7XG4gICAgcmV0dXJuIGBcbiAgICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBlbnRlck1vZHVsZSA9IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKS5lbnRlck1vZHVsZTtcbiAgICAgICAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTtcbiAgICAgIH0pKCk7YFxuICAgICAgLnJlcGxhY2UoL1xccysvZywgXCIgXCIpXG4gICAgICAudHJpbSgpO1xuICB9XG5cbiAgZ2V0U3VmZml4Q29kZSgpIHtcbiAgICBjb25zdCB0b3BMZXZlbE5hbWVzID0gbmV3IFNldCgpO1xuICAgIGZvciAoY29uc3QgdG9rZW4gb2YgdGhpcy50b2tlbnMudG9rZW5zKSB7XG4gICAgICBpZiAoXG4gICAgICAgICF0b2tlbi5pc1R5cGUgJiZcbiAgICAgICAgaXNUb3BMZXZlbERlY2xhcmF0aW9uKHRva2VuKSAmJlxuICAgICAgICB0b2tlbi5pZGVudGlmaWVyUm9sZSAhPT0gSWRlbnRpZmllclJvbGUuSW1wb3J0RGVjbGFyYXRpb25cbiAgICAgICkge1xuICAgICAgICB0b3BMZXZlbE5hbWVzLmFkZCh0aGlzLnRva2Vucy5pZGVudGlmaWVyTmFtZUZvclRva2VuKHRva2VuKSk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG5hbWVzVG9SZWdpc3RlciA9IEFycmF5LmZyb20odG9wTGV2ZWxOYW1lcykubWFwKChuYW1lKSA9PiAoe1xuICAgICAgdmFyaWFibGVOYW1lOiBuYW1lLFxuICAgICAgdW5pcXVlTG9jYWxOYW1lOiBuYW1lLFxuICAgIH0pKTtcbiAgICBpZiAodGhpcy5leHRyYWN0ZWREZWZhdWx0RXhwb3J0TmFtZSkge1xuICAgICAgbmFtZXNUb1JlZ2lzdGVyLnB1c2goe1xuICAgICAgICB2YXJpYWJsZU5hbWU6IHRoaXMuZXh0cmFjdGVkRGVmYXVsdEV4cG9ydE5hbWUsXG4gICAgICAgIHVuaXF1ZUxvY2FsTmFtZTogXCJkZWZhdWx0XCIsXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGBcbjsoZnVuY3Rpb24gKCkge1xuICB2YXIgcmVhY3RIb3RMb2FkZXIgPSByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykuZGVmYXVsdDtcbiAgdmFyIGxlYXZlTW9kdWxlID0gcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpLmxlYXZlTW9kdWxlO1xuICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7XG4gICAgcmV0dXJuO1xuICB9XG4ke25hbWVzVG9SZWdpc3RlclxuICAubWFwKFxuICAgICh7dmFyaWFibGVOYW1lLCB1bmlxdWVMb2NhbE5hbWV9KSA9PlxuICAgICAgYCAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoJHt2YXJpYWJsZU5hbWV9LCBcIiR7dW5pcXVlTG9jYWxOYW1lfVwiLCAke0pTT04uc3RyaW5naWZ5KFxuICAgICAgICB0aGlzLmZpbGVQYXRoIHx8IFwiXCIsXG4gICAgICApfSk7YCxcbiAgKVxuICAuam9pbihcIlxcblwiKX1cbiAgbGVhdmVNb2R1bGUobW9kdWxlKTtcbn0pKCk7YDtcbiAgfVxuXG4gIHByb2Nlc3MoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ReactHotLoaderTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/RootTransformer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/RootTransformer.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RootTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_getClassInfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/getClassInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getClassInfo.js\");\n/* harmony import */ var _CJSImportTransformer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CJSImportTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/CJSImportTransformer.js\");\n/* harmony import */ var _ESMImportTransformer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ESMImportTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ESMImportTransformer.js\");\n/* harmony import */ var _FlowTransformer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FlowTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/FlowTransformer.js\");\n/* harmony import */ var _JestHoistTransformer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./JestHoistTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/JestHoistTransformer.js\");\n/* harmony import */ var _JSXTransformer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./JSXTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/JSXTransformer.js\");\n/* harmony import */ var _NumericSeparatorTransformer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./NumericSeparatorTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/NumericSeparatorTransformer.js\");\n/* harmony import */ var _OptionalCatchBindingTransformer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OptionalCatchBindingTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/OptionalCatchBindingTransformer.js\");\n/* harmony import */ var _OptionalChainingNullishTransformer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./OptionalChainingNullishTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/OptionalChainingNullishTransformer.js\");\n/* harmony import */ var _ReactDisplayNameTransformer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ReactDisplayNameTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ReactDisplayNameTransformer.js\");\n/* harmony import */ var _ReactHotLoaderTransformer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ReactHotLoaderTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/ReactHotLoaderTransformer.js\");\n/* harmony import */ var _TypeScriptTransformer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./TypeScriptTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/TypeScriptTransformer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass RootTransformer {\n   __init() {this.transformers = []}\n  \n  \n   __init2() {this.generatedVariables = []}\n  \n  \n  \n  \n\n  constructor(\n    sucraseContext,\n    transforms,\n    enableLegacyBabel5ModuleInterop,\n    options,\n  ) {;RootTransformer.prototype.__init.call(this);RootTransformer.prototype.__init2.call(this);\n    this.nameManager = sucraseContext.nameManager;\n    this.helperManager = sucraseContext.helperManager;\n    const {tokenProcessor, importProcessor} = sucraseContext;\n    this.tokens = tokenProcessor;\n    this.isImportsTransformEnabled = transforms.includes(\"imports\");\n    this.isReactHotLoaderTransformEnabled = transforms.includes(\"react-hot-loader\");\n    this.disableESTransforms = Boolean(options.disableESTransforms);\n\n    if (!options.disableESTransforms) {\n      this.transformers.push(\n        new _OptionalChainingNullishTransformer__WEBPACK_IMPORTED_MODULE_10__[\"default\"](tokenProcessor, this.nameManager),\n      );\n      this.transformers.push(new _NumericSeparatorTransformer__WEBPACK_IMPORTED_MODULE_8__[\"default\"](tokenProcessor));\n      this.transformers.push(new _OptionalCatchBindingTransformer__WEBPACK_IMPORTED_MODULE_9__[\"default\"](tokenProcessor, this.nameManager));\n    }\n\n    if (transforms.includes(\"jsx\")) {\n      if (options.jsxRuntime !== \"preserve\") {\n        this.transformers.push(\n          new _JSXTransformer__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this, tokenProcessor, importProcessor, this.nameManager, options),\n        );\n      }\n      this.transformers.push(\n        new _ReactDisplayNameTransformer__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this, tokenProcessor, importProcessor, options),\n      );\n    }\n\n    let reactHotLoaderTransformer = null;\n    if (transforms.includes(\"react-hot-loader\")) {\n      if (!options.filePath) {\n        throw new Error(\"filePath is required when using the react-hot-loader transform.\");\n      }\n      reactHotLoaderTransformer = new _ReactHotLoaderTransformer__WEBPACK_IMPORTED_MODULE_12__[\"default\"](tokenProcessor, options.filePath);\n      this.transformers.push(reactHotLoaderTransformer);\n    }\n\n    // Note that we always want to enable the imports transformer, even when the import transform\n    // itself isn't enabled, since we need to do type-only import pruning for both Flow and\n    // TypeScript.\n    if (transforms.includes(\"imports\")) {\n      if (importProcessor === null) {\n        throw new Error(\"Expected non-null importProcessor with imports transform enabled.\");\n      }\n      this.transformers.push(\n        new _CJSImportTransformer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\n          this,\n          tokenProcessor,\n          importProcessor,\n          this.nameManager,\n          this.helperManager,\n          reactHotLoaderTransformer,\n          enableLegacyBabel5ModuleInterop,\n          Boolean(options.enableLegacyTypeScriptModuleInterop),\n          transforms.includes(\"typescript\"),\n          transforms.includes(\"flow\"),\n          Boolean(options.preserveDynamicImport),\n          Boolean(options.keepUnusedImports),\n        ),\n      );\n    } else {\n      this.transformers.push(\n        new _ESMImportTransformer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n          tokenProcessor,\n          this.nameManager,\n          this.helperManager,\n          reactHotLoaderTransformer,\n          transforms.includes(\"typescript\"),\n          transforms.includes(\"flow\"),\n          Boolean(options.keepUnusedImports),\n          options,\n        ),\n      );\n    }\n\n    if (transforms.includes(\"flow\")) {\n      this.transformers.push(\n        new _FlowTransformer__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, tokenProcessor, transforms.includes(\"imports\")),\n      );\n    }\n    if (transforms.includes(\"typescript\")) {\n      this.transformers.push(\n        new _TypeScriptTransformer__WEBPACK_IMPORTED_MODULE_13__[\"default\"](this, tokenProcessor, transforms.includes(\"imports\")),\n      );\n    }\n    if (transforms.includes(\"jest\")) {\n      this.transformers.push(\n        new _JestHoistTransformer__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, tokenProcessor, this.nameManager, importProcessor),\n      );\n    }\n  }\n\n  transform() {\n    this.tokens.reset();\n    this.processBalancedCode();\n    const shouldAddUseStrict = this.isImportsTransformEnabled;\n    // \"use strict\" always needs to be first, so override the normal transformer order.\n    let prefix = shouldAddUseStrict ? '\"use strict\";' : \"\";\n    for (const transformer of this.transformers) {\n      prefix += transformer.getPrefixCode();\n    }\n    prefix += this.helperManager.emitHelpers();\n    prefix += this.generatedVariables.map((v) => ` var ${v};`).join(\"\");\n    for (const transformer of this.transformers) {\n      prefix += transformer.getHoistedCode();\n    }\n    let suffix = \"\";\n    for (const transformer of this.transformers) {\n      suffix += transformer.getSuffixCode();\n    }\n    const result = this.tokens.finish();\n    let {code} = result;\n    if (code.startsWith(\"#!\")) {\n      let newlineIndex = code.indexOf(\"\\n\");\n      if (newlineIndex === -1) {\n        newlineIndex = code.length;\n        code += \"\\n\";\n      }\n      return {\n        code: code.slice(0, newlineIndex + 1) + prefix + code.slice(newlineIndex + 1) + suffix,\n        // The hashbang line has no tokens, so shifting the tokens to account\n        // for prefix can happen normally.\n        mappings: this.shiftMappings(result.mappings, prefix.length),\n      };\n    } else {\n      return {\n        code: prefix + code + suffix,\n        mappings: this.shiftMappings(result.mappings, prefix.length),\n      };\n    }\n  }\n\n  processBalancedCode() {\n    let braceDepth = 0;\n    let parenDepth = 0;\n    while (!this.tokens.isAtEnd()) {\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL) || this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.dollarBraceL)) {\n        braceDepth++;\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR)) {\n        if (braceDepth === 0) {\n          return;\n        }\n        braceDepth--;\n      }\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenL)) {\n        parenDepth++;\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR)) {\n        if (parenDepth === 0) {\n          return;\n        }\n        parenDepth--;\n      }\n      this.processToken();\n    }\n  }\n\n  processToken() {\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._class)) {\n      this.processClass();\n      return;\n    }\n    for (const transformer of this.transformers) {\n      const wasProcessed = transformer.process();\n      if (wasProcessed) {\n        return;\n      }\n    }\n    this.tokens.copyToken();\n  }\n\n  /**\n   * Skip past a class with a name and return that name.\n   */\n  processNamedClass() {\n    if (!this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._class, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name)) {\n      throw new Error(\"Expected identifier for exported class name.\");\n    }\n    const name = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);\n    this.processClass();\n    return name;\n  }\n\n  processClass() {\n    const classInfo = (0,_util_getClassInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, this.tokens, this.nameManager, this.disableESTransforms);\n\n    // Both static and instance initializers need a class name to use to invoke the initializer, so\n    // assign to one if necessary.\n    const needsCommaExpression =\n      (classInfo.headerInfo.isExpression || !classInfo.headerInfo.className) &&\n      classInfo.staticInitializerNames.length + classInfo.instanceInitializerNames.length > 0;\n\n    let className = classInfo.headerInfo.className;\n    if (needsCommaExpression) {\n      className = this.nameManager.claimFreeName(\"_class\");\n      this.generatedVariables.push(className);\n      this.tokens.appendCode(` (${className} =`);\n    }\n\n    const classToken = this.tokens.currentToken();\n    const contextId = classToken.contextId;\n    if (contextId == null) {\n      throw new Error(\"Expected class to have a context ID.\");\n    }\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._class);\n    while (!this.tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL, contextId)) {\n      this.processToken();\n    }\n\n    this.processClassBody(classInfo, className);\n\n    const staticInitializerStatements = classInfo.staticInitializerNames.map(\n      (name) => `${className}.${name}()`,\n    );\n    if (needsCommaExpression) {\n      this.tokens.appendCode(\n        `, ${staticInitializerStatements.map((s) => `${s}, `).join(\"\")}${className})`,\n      );\n    } else if (classInfo.staticInitializerNames.length > 0) {\n      this.tokens.appendCode(` ${staticInitializerStatements.map((s) => `${s};`).join(\" \")}`);\n    }\n  }\n\n  /**\n   * We want to just handle class fields in all contexts, since TypeScript supports them. Later,\n   * when some JS implementations support class fields, this should be made optional.\n   */\n  processClassBody(classInfo, className) {\n    const {\n      headerInfo,\n      constructorInsertPos,\n      constructorInitializerStatements,\n      fields,\n      instanceInitializerNames,\n      rangesToRemove,\n    } = classInfo;\n    let fieldIndex = 0;\n    let rangeToRemoveIndex = 0;\n    const classContextId = this.tokens.currentToken().contextId;\n    if (classContextId == null) {\n      throw new Error(\"Expected non-null context ID on class.\");\n    }\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL);\n    if (this.isReactHotLoaderTransformEnabled) {\n      this.tokens.appendCode(\n        \"__reactstandin__regenerateByEval(key, code) {this[key] = eval(code);}\",\n      );\n    }\n\n    const needsConstructorInit =\n      constructorInitializerStatements.length + instanceInitializerNames.length > 0;\n\n    if (constructorInsertPos === null && needsConstructorInit) {\n      const constructorInitializersCode = this.makeConstructorInitCode(\n        constructorInitializerStatements,\n        instanceInitializerNames,\n        className,\n      );\n      if (headerInfo.hasSuperclass) {\n        const argsName = this.nameManager.claimFreeName(\"args\");\n        this.tokens.appendCode(\n          `constructor(...${argsName}) { super(...${argsName}); ${constructorInitializersCode}; }`,\n        );\n      } else {\n        this.tokens.appendCode(`constructor() { ${constructorInitializersCode}; }`);\n      }\n    }\n\n    while (!this.tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR, classContextId)) {\n      if (fieldIndex < fields.length && this.tokens.currentIndex() === fields[fieldIndex].start) {\n        let needsCloseBrace = false;\n        if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.bracketL)) {\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this`);\n        } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.string) || this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.num)) {\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this[`);\n          needsCloseBrace = true;\n        } else {\n          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this.`);\n        }\n        while (this.tokens.currentIndex() < fields[fieldIndex].end) {\n          if (needsCloseBrace && this.tokens.currentIndex() === fields[fieldIndex].equalsIndex) {\n            this.tokens.appendCode(\"]\");\n          }\n          this.processToken();\n        }\n        this.tokens.appendCode(\"}\");\n        fieldIndex++;\n      } else if (\n        rangeToRemoveIndex < rangesToRemove.length &&\n        this.tokens.currentIndex() >= rangesToRemove[rangeToRemoveIndex].start\n      ) {\n        if (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {\n          this.tokens.removeInitialToken();\n        }\n        while (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {\n          this.tokens.removeToken();\n        }\n        rangeToRemoveIndex++;\n      } else if (this.tokens.currentIndex() === constructorInsertPos) {\n        this.tokens.copyToken();\n        if (needsConstructorInit) {\n          this.tokens.appendCode(\n            `;${this.makeConstructorInitCode(\n              constructorInitializerStatements,\n              instanceInitializerNames,\n              className,\n            )};`,\n          );\n        }\n        this.processToken();\n      } else {\n        this.processToken();\n      }\n    }\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR);\n  }\n\n  makeConstructorInitCode(\n    constructorInitializerStatements,\n    instanceInitializerNames,\n    className,\n  ) {\n    return [\n      ...constructorInitializerStatements,\n      ...instanceInitializerNames.map((name) => `${className}.prototype.${name}.call(this)`),\n    ].join(\";\");\n  }\n\n  /**\n   * Normally it's ok to simply remove type tokens, but we need to be more careful when dealing with\n   * arrow function return types since they can confuse the parser. In that case, we want to move\n   * the close-paren to the same line as the arrow.\n   *\n   * See https://github.com/alangpierce/sucrase/issues/391 for more details.\n   */\n  processPossibleArrowParamEnd() {\n    if (this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.colon) && this.tokens.tokenAtRelativeIndex(1).isType) {\n      let nextNonTypeIndex = this.tokens.currentIndex() + 1;\n      // Look ahead to see if this is an arrow function or something else.\n      while (this.tokens.tokens[nextNonTypeIndex].isType) {\n        nextNonTypeIndex++;\n      }\n      if (this.tokens.matches1AtIndex(nextNonTypeIndex, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.arrow)) {\n        this.tokens.removeInitialToken();\n        while (this.tokens.currentIndex() < nextNonTypeIndex) {\n          this.tokens.removeToken();\n        }\n        this.tokens.replaceTokenTrimmingLeftWhitespace(\") =>\");\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * An async arrow function might be of the form:\n   *\n   * async <\n   *   T\n   * >() => {}\n   *\n   * in which case, removing the type parameters will cause a syntax error. Detect this case and\n   * move the open-paren earlier.\n   */\n  processPossibleAsyncArrowWithTypeParams() {\n    if (\n      !this.tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._async) &&\n      !this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._async)\n    ) {\n      return false;\n    }\n    const nextToken = this.tokens.tokenAtRelativeIndex(1);\n    if (nextToken.type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.lessThan || !nextToken.isType) {\n      return false;\n    }\n\n    let nextNonTypeIndex = this.tokens.currentIndex() + 1;\n    // Look ahead to see if this is an arrow function or something else.\n    while (this.tokens.tokens[nextNonTypeIndex].isType) {\n      nextNonTypeIndex++;\n    }\n    if (this.tokens.matches1AtIndex(nextNonTypeIndex, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenL)) {\n      this.tokens.replaceToken(\"async (\");\n      this.tokens.removeInitialToken();\n      while (this.tokens.currentIndex() < nextNonTypeIndex) {\n        this.tokens.removeToken();\n      }\n      this.tokens.removeToken();\n      // We ate a ( token, so we need to process the tokens in between and then the ) token so that\n      // we remain balanced.\n      this.processBalancedCode();\n      this.processToken();\n      return true;\n    }\n    return false;\n  }\n\n  processPossibleTypeRange() {\n    if (this.tokens.currentToken().isType) {\n      this.tokens.removeInitialToken();\n      while (this.tokens.currentToken().isType) {\n        this.tokens.removeToken();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  shiftMappings(\n    mappings,\n    prefixLength,\n  ) {\n    for (let i = 0; i < mappings.length; i++) {\n      const mapping = mappings[i];\n      if (mapping !== undefined) {\n        mappings[i] = mapping + prefixLength;\n      }\n    }\n    return mappings;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/RootTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/Transformer.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Transformer; }\n/* harmony export */ });\nclass Transformer {\n  // Return true if anything was processed, false otherwise.\n  \n\n  getPrefixCode() {\n    return \"\";\n  }\n\n  getHoistedCode() {\n    return \"\";\n  }\n\n  getSuffixCode() {\n    return \"\";\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3RyYW5zZm9ybWVycy9UcmFuc2Zvcm1lci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS90cmFuc2Zvcm1lcnMvVHJhbnNmb3JtZXIuanM/YWY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAgY2xhc3MgVHJhbnNmb3JtZXIge1xuICAvLyBSZXR1cm4gdHJ1ZSBpZiBhbnl0aGluZyB3YXMgcHJvY2Vzc2VkLCBmYWxzZSBvdGhlcndpc2UuXG4gIFxuXG4gIGdldFByZWZpeENvZGUoKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cblxuICBnZXRIb2lzdGVkQ29kZSgpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIGdldFN1ZmZpeENvZGUoKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/TypeScriptTransformer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/transformers/TypeScriptTransformer.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TypeScriptTransformer; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _util_isIdentifier__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isIdentifier */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isIdentifier.js\");\n/* harmony import */ var _Transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/Transformer.js\");\n\n\n\n\n\n\n\nclass TypeScriptTransformer extends _Transformer__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor(\n     rootTransformer,\n     tokens,\n     isImportsTransformEnabled,\n  ) {\n    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.isImportsTransformEnabled = isImportsTransformEnabled;;\n  }\n\n  process() {\n    if (\n      this.rootTransformer.processPossibleArrowParamEnd() ||\n      this.rootTransformer.processPossibleAsyncArrowWithTypeParams() ||\n      this.rootTransformer.processPossibleTypeRange()\n    ) {\n      return true;\n    }\n    if (\n      this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._public) ||\n      this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._protected) ||\n      this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._private) ||\n      this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._abstract) ||\n      this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._readonly) ||\n      this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._override) ||\n      this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.nonNullAssertion)\n    ) {\n      this.tokens.removeInitialToken();\n      return true;\n    }\n    if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._enum) || this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._const, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._enum)) {\n      this.processEnum();\n      return true;\n    }\n    if (\n      this.tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._enum) ||\n      this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._export, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._const, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._enum)\n    ) {\n      this.processEnum(true);\n      return true;\n    }\n    return false;\n  }\n\n  processEnum(isExport = false) {\n    // We might have \"export const enum\", so just remove all relevant tokens.\n    this.tokens.removeInitialToken();\n    while (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._const) || this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._enum)) {\n      this.tokens.removeToken();\n    }\n    const enumName = this.tokens.identifierName();\n    this.tokens.removeToken();\n    if (isExport && !this.isImportsTransformEnabled) {\n      this.tokens.appendCode(\"export \");\n    }\n    this.tokens.appendCode(`var ${enumName}; (function (${enumName})`);\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceL);\n    this.processEnumBody(enumName);\n    this.tokens.copyExpectedToken(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR);\n    if (isExport && this.isImportsTransformEnabled) {\n      this.tokens.appendCode(`)(${enumName} || (exports.${enumName} = ${enumName} = {}));`);\n    } else {\n      this.tokens.appendCode(`)(${enumName} || (${enumName} = {}));`);\n    }\n  }\n\n  /**\n   * Transform an enum into equivalent JS. This has complexity in a few places:\n   * - TS allows string enums, numeric enums, and a mix of the two styles within an enum.\n   * - Enum keys are allowed to be referenced in later enum values.\n   * - Enum keys are allowed to be strings.\n   * - When enum values are omitted, they should follow an auto-increment behavior.\n   */\n  processEnumBody(enumName) {\n    // Code that can be used to reference the previous enum member, or null if this is the first\n    // enum member.\n    let previousValueCode = null;\n    while (true) {\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR)) {\n        break;\n      }\n      const {nameStringCode, variableName} = this.extractEnumKeyInfo(this.tokens.currentToken());\n      this.tokens.removeInitialToken();\n\n      if (\n        this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.eq, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.string, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.comma) ||\n        this.tokens.matches3(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.eq, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.string, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR)\n      ) {\n        this.processStringLiteralEnumMember(enumName, nameStringCode, variableName);\n      } else if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.eq)) {\n        this.processExplicitValueEnumMember(enumName, nameStringCode, variableName);\n      } else {\n        this.processImplicitValueEnumMember(\n          enumName,\n          nameStringCode,\n          variableName,\n          previousValueCode,\n        );\n      }\n      if (this.tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.comma)) {\n        this.tokens.removeToken();\n      }\n\n      if (variableName != null) {\n        previousValueCode = variableName;\n      } else {\n        previousValueCode = `${enumName}[${nameStringCode}]`;\n      }\n    }\n  }\n\n  /**\n   * Detect name information about this enum key, which will be used to determine which code to emit\n   * and whether we should declare a variable as part of this declaration.\n   *\n   * Some cases to keep in mind:\n   * - Enum keys can be implicitly referenced later, e.g. `X = 1, Y = X`. In Sucrase, we implement\n   *   this by declaring a variable `X` so that later expressions can use it.\n   * - In addition to the usual identifier key syntax, enum keys are allowed to be string literals,\n   *   e.g. `\"hello world\" = 3,`. Template literal syntax is NOT allowed.\n   * - Even if the enum key is defined as a string literal, it may still be referenced by identifier\n   *   later, e.g. `\"X\" = 1, Y = X`. That means that we need to detect whether or not a string\n   *   literal is identifier-like and emit a variable if so, even if the declaration did not use an\n   *   identifier.\n   * - Reserved keywords like `break` are valid enum keys, but are not valid to be referenced later\n   *   and would be a syntax error if we emitted a variable, so we need to skip the variable\n   *   declaration in those cases.\n   *\n   * The variableName return value captures these nuances: if non-null, we can and must emit a\n   * variable declaration, and if null, we can't and shouldn't.\n   */\n  extractEnumKeyInfo(nameToken) {\n    if (nameToken.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name) {\n      const name = this.tokens.identifierNameForToken(nameToken);\n      return {\n        nameStringCode: `\"${name}\"`,\n        variableName: (0,_util_isIdentifier__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(name) ? name : null,\n      };\n    } else if (nameToken.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.string) {\n      const name = this.tokens.stringValueForToken(nameToken);\n      return {\n        nameStringCode: this.tokens.code.slice(nameToken.start, nameToken.end),\n        variableName: (0,_util_isIdentifier__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(name) ? name : null,\n      };\n    } else {\n      throw new Error(\"Expected name or string at beginning of enum element.\");\n    }\n  }\n\n  /**\n   * Handle an enum member where the RHS is just a string literal (not omitted, not a number, and\n   * not a complex expression). This is the typical form for TS string enums, and in this case, we\n   * do *not* create a reverse mapping.\n   *\n   * This is called after deleting the key token, when the token processor is at the equals sign.\n   *\n   * Example 1:\n   * someKey = \"some value\"\n   * ->\n   * const someKey = \"some value\"; MyEnum[\"someKey\"] = someKey;\n   *\n   * Example 2:\n   * \"some key\" = \"some value\"\n   * ->\n   * MyEnum[\"some key\"] = \"some value\";\n   */\n  processStringLiteralEnumMember(\n    enumName,\n    nameStringCode,\n    variableName,\n  ) {\n    if (variableName != null) {\n      this.tokens.appendCode(`const ${variableName}`);\n      // =\n      this.tokens.copyToken();\n      // value string\n      this.tokens.copyToken();\n      this.tokens.appendCode(`; ${enumName}[${nameStringCode}] = ${variableName};`);\n    } else {\n      this.tokens.appendCode(`${enumName}[${nameStringCode}]`);\n      // =\n      this.tokens.copyToken();\n      // value string\n      this.tokens.copyToken();\n      this.tokens.appendCode(\";\");\n    }\n  }\n\n  /**\n   * Handle an enum member initialized with an expression on the right-hand side (other than a\n   * string literal). In these cases, we should transform the expression and emit code that sets up\n   * a reverse mapping.\n   *\n   * The TypeScript implementation of this operation distinguishes between expressions that can be\n   * \"constant folded\" at compile time (i.e. consist of number literals and simple math operations\n   * on those numbers) and ones that are dynamic. For constant expressions, it emits the resolved\n   * numeric value, and auto-incrementing is only allowed in that case. Evaluating expressions at\n   * compile time would add significant complexity to Sucrase, so Sucrase instead leaves the\n   * expression as-is, and will later emit something like `MyEnum[\"previousKey\"] + 1` to implement\n   * auto-incrementing.\n   *\n   * This is called after deleting the key token, when the token processor is at the equals sign.\n   *\n   * Example 1:\n   * someKey = 1 + 1\n   * ->\n   * const someKey = 1 + 1; MyEnum[MyEnum[\"someKey\"] = someKey] = \"someKey\";\n   *\n   * Example 2:\n   * \"some key\" = 1 + 1\n   * ->\n   * MyEnum[MyEnum[\"some key\"] = 1 + 1] = \"some key\";\n   */\n  processExplicitValueEnumMember(\n    enumName,\n    nameStringCode,\n    variableName,\n  ) {\n    const rhsEndIndex = this.tokens.currentToken().rhsEndIndex;\n    if (rhsEndIndex == null) {\n      throw new Error(\"Expected rhsEndIndex on enum assign.\");\n    }\n\n    if (variableName != null) {\n      this.tokens.appendCode(`const ${variableName}`);\n      this.tokens.copyToken();\n      while (this.tokens.currentIndex() < rhsEndIndex) {\n        this.rootTransformer.processToken();\n      }\n      this.tokens.appendCode(\n        `; ${enumName}[${enumName}[${nameStringCode}] = ${variableName}] = ${nameStringCode};`,\n      );\n    } else {\n      this.tokens.appendCode(`${enumName}[${enumName}[${nameStringCode}]`);\n      this.tokens.copyToken();\n      while (this.tokens.currentIndex() < rhsEndIndex) {\n        this.rootTransformer.processToken();\n      }\n      this.tokens.appendCode(`] = ${nameStringCode};`);\n    }\n  }\n\n  /**\n   * Handle an enum member with no right-hand side expression. In this case, the value is the\n   * previous value plus 1, or 0 if there was no previous value. We should also always emit a\n   * reverse mapping.\n   *\n   * Example 1:\n   * someKey2\n   * ->\n   * const someKey2 = someKey1 + 1; MyEnum[MyEnum[\"someKey2\"] = someKey2] = \"someKey2\";\n   *\n   * Example 2:\n   * \"some key 2\"\n   * ->\n   * MyEnum[MyEnum[\"some key 2\"] = someKey1 + 1] = \"some key 2\";\n   */\n  processImplicitValueEnumMember(\n    enumName,\n    nameStringCode,\n    variableName,\n    previousValueCode,\n  ) {\n    let valueCode = previousValueCode != null ? `${previousValueCode} + 1` : \"0\";\n    if (variableName != null) {\n      this.tokens.appendCode(`const ${variableName} = ${valueCode}; `);\n      valueCode = variableName;\n    }\n    this.tokens.appendCode(\n      `${enumName}[${enumName}[${nameStringCode}] = ${valueCode}] = ${nameStringCode};`,\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/TypeScriptTransformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/elideImportEquals.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/elideImportEquals.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ elideImportEquals; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\nfunction elideImportEquals(tokens) {\n  // import\n  tokens.removeInitialToken();\n  // name\n  tokens.removeToken();\n  // =\n  tokens.removeToken();\n  // name or require\n  tokens.removeToken();\n  // Handle either `import A = require('A')` or `import A = B.C.D`.\n  if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenL)) {\n    // (\n    tokens.removeToken();\n    // path string\n    tokens.removeToken();\n    // )\n    tokens.removeToken();\n  } else {\n    while (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.dot)) {\n      // .\n      tokens.removeToken();\n      // name\n      tokens.removeToken();\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZWxpZGVJbXBvcnRFcXVhbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7OztBQUczQztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBRTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMkJBQTJCLDhEQUFFO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZWxpZGVJbXBvcnRFcXVhbHMuanM/NjFkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Rva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIvdHlwZXNcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBlbGlkZUltcG9ydEVxdWFscyh0b2tlbnMpIHtcbiAgLy8gaW1wb3J0XG4gIHRva2Vucy5yZW1vdmVJbml0aWFsVG9rZW4oKTtcbiAgLy8gbmFtZVxuICB0b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgLy8gPVxuICB0b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgLy8gbmFtZSBvciByZXF1aXJlXG4gIHRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAvLyBIYW5kbGUgZWl0aGVyIGBpbXBvcnQgQSA9IHJlcXVpcmUoJ0EnKWAgb3IgYGltcG9ydCBBID0gQi5DLkRgLlxuICBpZiAodG9rZW5zLm1hdGNoZXMxKHR0LnBhcmVuTCkpIHtcbiAgICAvLyAoXG4gICAgdG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gICAgLy8gcGF0aCBzdHJpbmdcbiAgICB0b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAvLyApXG4gICAgdG9rZW5zLnJlbW92ZVRva2VuKCk7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHRva2Vucy5tYXRjaGVzMSh0dC5kb3QpKSB7XG4gICAgICAvLyAuXG4gICAgICB0b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICAgIC8vIG5hbWVcbiAgICAgIHRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/elideImportEquals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/formatTokens.js":
/*!************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/formatTokens.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ formatTokens; }\n/* harmony export */ });\n/* harmony import */ var lines_and_columns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lines-and-columns */ \"(app-pages-browser)/./node_modules/lines-and-columns/build/index.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n\nfunction formatTokens(code, tokens) {\n  if (tokens.length === 0) {\n    return \"\";\n  }\n\n  const tokenKeys = Object.keys(tokens[0]).filter(\n    (k) => k !== \"type\" && k !== \"value\" && k !== \"start\" && k !== \"end\" && k !== \"loc\",\n  );\n  const typeKeys = Object.keys(tokens[0].type).filter((k) => k !== \"label\" && k !== \"keyword\");\n\n  const headings = [\"Location\", \"Label\", \"Raw\", ...tokenKeys, ...typeKeys];\n\n  const lines = new lines_and_columns__WEBPACK_IMPORTED_MODULE_0__[\"default\"](code);\n  const rows = [headings, ...tokens.map(getTokenComponents)];\n  const padding = headings.map(() => 0);\n  for (const components of rows) {\n    for (let i = 0; i < components.length; i++) {\n      padding[i] = Math.max(padding[i], components[i].length);\n    }\n  }\n  return rows\n    .map((components) => components.map((component, i) => component.padEnd(padding[i])).join(\" \"))\n    .join(\"\\n\");\n\n  function getTokenComponents(token) {\n    const raw = code.slice(token.start, token.end);\n    return [\n      formatRange(token.start, token.end),\n      (0,_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.formatTokenType)(token.type),\n      truncate(String(raw), 14),\n      // @ts-ignore: Intentional dynamic access by key.\n      ...tokenKeys.map((key) => formatValue(token[key], key)),\n      // @ts-ignore: Intentional dynamic access by key.\n      ...typeKeys.map((key) => formatValue(token.type[key], key)),\n    ];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function formatValue(value, key) {\n    if (value === true) {\n      return key;\n    } else if (value === false || value === null) {\n      return \"\";\n    } else {\n      return String(value);\n    }\n  }\n\n  function formatRange(start, end) {\n    return `${formatPos(start)}-${formatPos(end)}`;\n  }\n\n  function formatPos(pos) {\n    const location = lines.locationForIndex(pos);\n    if (!location) {\n      return \"Unknown\";\n    } else {\n      return `${location.line + 1}:${location.column + 1}`;\n    }\n  }\n}\n\nfunction truncate(s, length) {\n  if (s.length > length) {\n    return `${s.slice(0, length - 3)}...`;\n  } else {\n    return s;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZm9ybWF0VG9rZW5zLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRDs7O0FBR1U7O0FBRTNDO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLG9CQUFvQix5REFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sd0VBQWU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxpQkFBaUIsR0FBRyxlQUFlO0FBQ2pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLGdCQUFnQixrQkFBa0IsR0FBRyxvQkFBb0I7QUFDekQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLHVCQUF1QjtBQUNyQyxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZm9ybWF0VG9rZW5zLmpzPzhlZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmVzQW5kQ29sdW1ucyBmcm9tIFwibGluZXMtYW5kLWNvbHVtbnNcIjtcblxuXG5pbXBvcnQge2Zvcm1hdFRva2VuVHlwZX0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIvdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0VG9rZW5zKGNvZGUsIHRva2Vucykge1xuICBpZiAodG9rZW5zLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG5cbiAgY29uc3QgdG9rZW5LZXlzID0gT2JqZWN0LmtleXModG9rZW5zWzBdKS5maWx0ZXIoXG4gICAgKGspID0+IGsgIT09IFwidHlwZVwiICYmIGsgIT09IFwidmFsdWVcIiAmJiBrICE9PSBcInN0YXJ0XCIgJiYgayAhPT0gXCJlbmRcIiAmJiBrICE9PSBcImxvY1wiLFxuICApO1xuICBjb25zdCB0eXBlS2V5cyA9IE9iamVjdC5rZXlzKHRva2Vuc1swXS50eXBlKS5maWx0ZXIoKGspID0+IGsgIT09IFwibGFiZWxcIiAmJiBrICE9PSBcImtleXdvcmRcIik7XG5cbiAgY29uc3QgaGVhZGluZ3MgPSBbXCJMb2NhdGlvblwiLCBcIkxhYmVsXCIsIFwiUmF3XCIsIC4uLnRva2VuS2V5cywgLi4udHlwZUtleXNdO1xuXG4gIGNvbnN0IGxpbmVzID0gbmV3IExpbmVzQW5kQ29sdW1ucyhjb2RlKTtcbiAgY29uc3Qgcm93cyA9IFtoZWFkaW5ncywgLi4udG9rZW5zLm1hcChnZXRUb2tlbkNvbXBvbmVudHMpXTtcbiAgY29uc3QgcGFkZGluZyA9IGhlYWRpbmdzLm1hcCgoKSA9PiAwKTtcbiAgZm9yIChjb25zdCBjb21wb25lbnRzIG9mIHJvd3MpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbXBvbmVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHBhZGRpbmdbaV0gPSBNYXRoLm1heChwYWRkaW5nW2ldLCBjb21wb25lbnRzW2ldLmxlbmd0aCk7XG4gICAgfVxuICB9XG4gIHJldHVybiByb3dzXG4gICAgLm1hcCgoY29tcG9uZW50cykgPT4gY29tcG9uZW50cy5tYXAoKGNvbXBvbmVudCwgaSkgPT4gY29tcG9uZW50LnBhZEVuZChwYWRkaW5nW2ldKSkuam9pbihcIiBcIikpXG4gICAgLmpvaW4oXCJcXG5cIik7XG5cbiAgZnVuY3Rpb24gZ2V0VG9rZW5Db21wb25lbnRzKHRva2VuKSB7XG4gICAgY29uc3QgcmF3ID0gY29kZS5zbGljZSh0b2tlbi5zdGFydCwgdG9rZW4uZW5kKTtcbiAgICByZXR1cm4gW1xuICAgICAgZm9ybWF0UmFuZ2UodG9rZW4uc3RhcnQsIHRva2VuLmVuZCksXG4gICAgICBmb3JtYXRUb2tlblR5cGUodG9rZW4udHlwZSksXG4gICAgICB0cnVuY2F0ZShTdHJpbmcocmF3KSwgMTQpLFxuICAgICAgLy8gQHRzLWlnbm9yZTogSW50ZW50aW9uYWwgZHluYW1pYyBhY2Nlc3MgYnkga2V5LlxuICAgICAgLi4udG9rZW5LZXlzLm1hcCgoa2V5KSA9PiBmb3JtYXRWYWx1ZSh0b2tlbltrZXldLCBrZXkpKSxcbiAgICAgIC8vIEB0cy1pZ25vcmU6IEludGVudGlvbmFsIGR5bmFtaWMgYWNjZXNzIGJ5IGtleS5cbiAgICAgIC4uLnR5cGVLZXlzLm1hcCgoa2V5KSA9PiBmb3JtYXRWYWx1ZSh0b2tlbi50eXBlW2tleV0sIGtleSkpLFxuICAgIF07XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBmdW5jdGlvbiBmb3JtYXRWYWx1ZSh2YWx1ZSwga2V5KSB7XG4gICAgaWYgKHZhbHVlID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0UmFuZ2Uoc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiBgJHtmb3JtYXRQb3Moc3RhcnQpfS0ke2Zvcm1hdFBvcyhlbmQpfWA7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRQb3MocG9zKSB7XG4gICAgY29uc3QgbG9jYXRpb24gPSBsaW5lcy5sb2NhdGlvbkZvckluZGV4KHBvcyk7XG4gICAgaWYgKCFsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIFwiVW5rbm93blwiO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYCR7bG9jYXRpb24ubGluZSArIDF9OiR7bG9jYXRpb24uY29sdW1uICsgMX1gO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiB0cnVuY2F0ZShzLCBsZW5ndGgpIHtcbiAgaWYgKHMubGVuZ3RoID4gbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGAke3Muc2xpY2UoMCwgbGVuZ3RoIC0gMyl9Li4uYDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcztcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/formatTokens.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getClassInfo.js":
/*!************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/getClassInfo.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getClassInfo; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Get information about the class fields for this class, given a token processor pointing to the\n * open-brace at the start of the class.\n */\nfunction getClassInfo(\n  rootTransformer,\n  tokens,\n  nameManager,\n  disableESTransforms,\n) {\n  const snapshot = tokens.snapshot();\n\n  const headerInfo = processClassHeader(tokens);\n\n  let constructorInitializerStatements = [];\n  const instanceInitializerNames = [];\n  const staticInitializerNames = [];\n  let constructorInsertPos = null;\n  const fields = [];\n  const rangesToRemove = [];\n\n  const classContextId = tokens.currentToken().contextId;\n  if (classContextId == null) {\n    throw new Error(\"Expected non-null class context ID on class open-brace.\");\n  }\n\n  tokens.nextToken();\n  while (!tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR, classContextId)) {\n    if (tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._constructor) && !tokens.currentToken().isType) {\n      ({constructorInitializerStatements, constructorInsertPos} = processConstructor(tokens));\n    } else if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.semi)) {\n      if (!disableESTransforms) {\n        rangesToRemove.push({start: tokens.currentIndex(), end: tokens.currentIndex() + 1});\n      }\n      tokens.nextToken();\n    } else if (tokens.currentToken().isType) {\n      tokens.nextToken();\n    } else {\n      // Either a method or a field. Skip to the identifier part.\n      const statementStartIndex = tokens.currentIndex();\n      let isStatic = false;\n      let isESPrivate = false;\n      let isDeclareOrAbstract = false;\n      while (isAccessModifier(tokens.currentToken())) {\n        if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._static)) {\n          isStatic = true;\n        }\n        if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.hash)) {\n          isESPrivate = true;\n        }\n        if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._declare) || tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._abstract)) {\n          isDeclareOrAbstract = true;\n        }\n        tokens.nextToken();\n      }\n      if (isStatic && tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL)) {\n        // This is a static block, so don't process it in any special way.\n        skipToNextClassElement(tokens, classContextId);\n        continue;\n      }\n      if (isESPrivate) {\n        // Sucrase doesn't attempt to transpile private fields; just leave them as-is.\n        skipToNextClassElement(tokens, classContextId);\n        continue;\n      }\n      if (\n        tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._constructor) &&\n        !tokens.currentToken().isType\n      ) {\n        ({constructorInitializerStatements, constructorInsertPos} = processConstructor(tokens));\n        continue;\n      }\n\n      const nameStartIndex = tokens.currentIndex();\n      skipFieldName(tokens);\n      if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.lessThan) || tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenL)) {\n        // This is a method, so nothing to process.\n        skipToNextClassElement(tokens, classContextId);\n        continue;\n      }\n      // There might be a type annotation that we need to skip.\n      while (tokens.currentToken().isType) {\n        tokens.nextToken();\n      }\n      if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.eq)) {\n        const equalsIndex = tokens.currentIndex();\n        // This is an initializer, so we need to wrap in an initializer method.\n        const valueEnd = tokens.currentToken().rhsEndIndex;\n        if (valueEnd == null) {\n          throw new Error(\"Expected rhsEndIndex on class field assignment.\");\n        }\n        tokens.nextToken();\n        while (tokens.currentIndex() < valueEnd) {\n          rootTransformer.processToken();\n        }\n        let initializerName;\n        if (isStatic) {\n          initializerName = nameManager.claimFreeName(\"__initStatic\");\n          staticInitializerNames.push(initializerName);\n        } else {\n          initializerName = nameManager.claimFreeName(\"__init\");\n          instanceInitializerNames.push(initializerName);\n        }\n        // Fields start at the name, so `static x = 1;` has a field range of `x = 1;`.\n        fields.push({\n          initializerName,\n          equalsIndex,\n          start: nameStartIndex,\n          end: tokens.currentIndex(),\n        });\n      } else if (!disableESTransforms || isDeclareOrAbstract) {\n        // This is a regular field declaration, like `x;`. With the class transform enabled, we just\n        // remove the line so that no output is produced. With the class transform disabled, we\n        // usually want to preserve the declaration (but still strip types), but if the `declare`\n        // or `abstract` keyword is specified, we should remove the line to avoid initializing the\n        // value to undefined.\n        rangesToRemove.push({start: statementStartIndex, end: tokens.currentIndex()});\n      }\n    }\n  }\n\n  tokens.restoreToSnapshot(snapshot);\n  if (disableESTransforms) {\n    // With ES transforms disabled, we don't want to transform regular class\n    // field declarations, and we don't need to do any additional tricks to\n    // reference the constructor for static init, but we still need to transform\n    // TypeScript field initializers defined as constructor parameters and we\n    // still need to remove `declare` fields. For now, we run the same code\n    // path but omit any field information, as if the class had no field\n    // declarations. In the future, when we fully drop the class fields\n    // transform, we can simplify this code significantly.\n    return {\n      headerInfo,\n      constructorInitializerStatements,\n      instanceInitializerNames: [],\n      staticInitializerNames: [],\n      constructorInsertPos,\n      fields: [],\n      rangesToRemove,\n    };\n  } else {\n    return {\n      headerInfo,\n      constructorInitializerStatements,\n      instanceInitializerNames,\n      staticInitializerNames,\n      constructorInsertPos,\n      fields,\n      rangesToRemove,\n    };\n  }\n}\n\n/**\n * Move the token processor to the next method/field in the class.\n *\n * To do that, we seek forward to the next start of a class name (either an open\n * bracket or an identifier, or the closing curly brace), then seek backward to\n * include any access modifiers.\n */\nfunction skipToNextClassElement(tokens, classContextId) {\n  tokens.nextToken();\n  while (tokens.currentToken().contextId !== classContextId) {\n    tokens.nextToken();\n  }\n  while (isAccessModifier(tokens.tokenAtRelativeIndex(-1))) {\n    tokens.previousToken();\n  }\n}\n\nfunction processClassHeader(tokens) {\n  const classToken = tokens.currentToken();\n  const contextId = classToken.contextId;\n  if (contextId == null) {\n    throw new Error(\"Expected context ID on class token.\");\n  }\n  const isExpression = classToken.isExpression;\n  if (isExpression == null) {\n    throw new Error(\"Expected isExpression on class token.\");\n  }\n  let className = null;\n  let hasSuperclass = false;\n  tokens.nextToken();\n  if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name)) {\n    className = tokens.identifierName();\n  }\n  while (!tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL, contextId)) {\n    // If this has a superclass, there will always be an `extends` token. If it doesn't have a\n    // superclass, only type parameters and `implements` clauses can show up here, all of which\n    // consist only of type tokens. A declaration like `class A<B extends C> {` should *not* count\n    // as having a superclass.\n    if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._extends) && !tokens.currentToken().isType) {\n      hasSuperclass = true;\n    }\n    tokens.nextToken();\n  }\n  return {isExpression, className, hasSuperclass};\n}\n\n/**\n * Extract useful information out of a constructor, starting at the \"constructor\" name.\n */\nfunction processConstructor(tokens)\n\n\n {\n  const constructorInitializerStatements = [];\n\n  tokens.nextToken();\n  const constructorContextId = tokens.currentToken().contextId;\n  if (constructorContextId == null) {\n    throw new Error(\"Expected context ID on open-paren starting constructor params.\");\n  }\n  // Advance through parameters looking for access modifiers.\n  while (!tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR, constructorContextId)) {\n    if (tokens.currentToken().contextId === constructorContextId) {\n      // Current token is an open paren or comma just before a param, so check\n      // that param for access modifiers.\n      tokens.nextToken();\n      if (isAccessModifier(tokens.currentToken())) {\n        tokens.nextToken();\n        while (isAccessModifier(tokens.currentToken())) {\n          tokens.nextToken();\n        }\n        const token = tokens.currentToken();\n        if (token.type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name) {\n          throw new Error(\"Expected identifier after access modifiers in constructor arg.\");\n        }\n        const name = tokens.identifierNameForToken(token);\n        constructorInitializerStatements.push(`this.${name} = ${name}`);\n      }\n    } else {\n      tokens.nextToken();\n    }\n  }\n  // )\n  tokens.nextToken();\n  // Constructor type annotations are invalid, but skip them anyway since\n  // they're easy to skip.\n  while (tokens.currentToken().isType) {\n    tokens.nextToken();\n  }\n  let constructorInsertPos = tokens.currentIndex();\n\n  // Advance through body looking for a super call.\n  let foundSuperCall = false;\n  while (!tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR, constructorContextId)) {\n    if (!foundSuperCall && tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._super, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenL)) {\n      tokens.nextToken();\n      const superCallContextId = tokens.currentToken().contextId;\n      if (superCallContextId == null) {\n        throw new Error(\"Expected a context ID on the super call\");\n      }\n      while (!tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.parenR, superCallContextId)) {\n        tokens.nextToken();\n      }\n      constructorInsertPos = tokens.currentIndex();\n      foundSuperCall = true;\n    }\n    tokens.nextToken();\n  }\n  // }\n  tokens.nextToken();\n\n  return {constructorInitializerStatements, constructorInsertPos};\n}\n\n/**\n * Determine if this is any token that can go before the name in a method/field.\n */\nfunction isAccessModifier(token) {\n  return [\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._async,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._get,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._set,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.plus,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.minus,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._readonly,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._static,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._public,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._private,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._protected,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._override,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._abstract,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.star,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._declare,\n    _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.hash,\n  ].includes(token.type);\n}\n\n/**\n * The next token or set of tokens is either an identifier or an expression in square brackets, for\n * a method or field name.\n */\nfunction skipFieldName(tokens) {\n  if (tokens.matches1(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.bracketL)) {\n    const startToken = tokens.currentToken();\n    const classContextId = startToken.contextId;\n    if (classContextId == null) {\n      throw new Error(\"Expected class context ID on computed name open bracket.\");\n    }\n    while (!tokens.matchesContextIdAndLabel(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.bracketR, classContextId)) {\n      tokens.nextToken();\n    }\n    tokens.nextToken();\n  } else {\n    tokens.nextToken();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0Q2xhc3NJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRStEO0FBQ0w7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMENBQTBDLDhEQUFFO0FBQzVDLGlDQUFpQyx5RUFBaUI7QUFDbEQsUUFBUSx3REFBd0Q7QUFDaEUsTUFBTSx5QkFBeUIsOERBQUU7QUFDakM7QUFDQSw2QkFBNkIsNkRBQTZEO0FBQzFGO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDhEQUFFO0FBQzlCO0FBQ0E7QUFDQSw0QkFBNEIsOERBQUU7QUFDOUI7QUFDQTtBQUNBLDRCQUE0Qiw4REFBRSw4QkFBOEIsOERBQUU7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsOERBQUU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx5RUFBaUI7QUFDbEQ7QUFDQTtBQUNBLFVBQVUsd0RBQXdEO0FBQ2xFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBCQUEwQiw4REFBRSw4QkFBOEIsOERBQUU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4REFBRTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCw4QkFBOEI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxRQUFRO0FBQ1Isd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHVEQUF1RDtBQUNwRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBRTtBQUN4QjtBQUNBO0FBQ0EsMENBQTBDLDhEQUFFO0FBQzVDO0FBQ0E7QUFDQSw4RUFBOEU7QUFDOUU7QUFDQSx3QkFBd0IsOERBQUU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLDhEQUFFO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDhEQUFFO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNLElBQUksS0FBSztBQUNyRTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwwQ0FBMEMsOERBQUU7QUFDNUMsMkNBQTJDLDhEQUFFLFNBQVMsOERBQUU7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw4REFBRTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDhEQUFFO0FBQ04sSUFBSSw4REFBRTtBQUNOLElBQUksOERBQUU7QUFDTixJQUFJLDhEQUFFO0FBQ04sSUFBSSw4REFBRTtBQUNOLElBQUksOERBQUU7QUFDTixJQUFJLDhEQUFFO0FBQ04sSUFBSSw4REFBRTtBQUNOLElBQUksOERBQUU7QUFDTixJQUFJLDhEQUFFO0FBQ04sSUFBSSw4REFBRTtBQUNOLElBQUksOERBQUU7QUFDTixJQUFJLDhEQUFFO0FBQ04sSUFBSSw4REFBRTtBQUNOLElBQUksOERBQUU7QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsOERBQUU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyw4REFBRTtBQUM5QztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0Q2xhc3NJbmZvLmpzPzNkYzMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmltcG9ydCB7Q29udGV4dHVhbEtleXdvcmR9IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyL2tleXdvcmRzXCI7XG5pbXBvcnQge1Rva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIvdHlwZXNcIjtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi8qKlxuICogR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjbGFzcyBmaWVsZHMgZm9yIHRoaXMgY2xhc3MsIGdpdmVuIGEgdG9rZW4gcHJvY2Vzc29yIHBvaW50aW5nIHRvIHRoZVxuICogb3Blbi1icmFjZSBhdCB0aGUgc3RhcnQgb2YgdGhlIGNsYXNzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDbGFzc0luZm8oXG4gIHJvb3RUcmFuc2Zvcm1lcixcbiAgdG9rZW5zLFxuICBuYW1lTWFuYWdlcixcbiAgZGlzYWJsZUVTVHJhbnNmb3Jtcyxcbikge1xuICBjb25zdCBzbmFwc2hvdCA9IHRva2Vucy5zbmFwc2hvdCgpO1xuXG4gIGNvbnN0IGhlYWRlckluZm8gPSBwcm9jZXNzQ2xhc3NIZWFkZXIodG9rZW5zKTtcblxuICBsZXQgY29uc3RydWN0b3JJbml0aWFsaXplclN0YXRlbWVudHMgPSBbXTtcbiAgY29uc3QgaW5zdGFuY2VJbml0aWFsaXplck5hbWVzID0gW107XG4gIGNvbnN0IHN0YXRpY0luaXRpYWxpemVyTmFtZXMgPSBbXTtcbiAgbGV0IGNvbnN0cnVjdG9ySW5zZXJ0UG9zID0gbnVsbDtcbiAgY29uc3QgZmllbGRzID0gW107XG4gIGNvbnN0IHJhbmdlc1RvUmVtb3ZlID0gW107XG5cbiAgY29uc3QgY2xhc3NDb250ZXh0SWQgPSB0b2tlbnMuY3VycmVudFRva2VuKCkuY29udGV4dElkO1xuICBpZiAoY2xhc3NDb250ZXh0SWQgPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIG5vbi1udWxsIGNsYXNzIGNvbnRleHQgSUQgb24gY2xhc3Mgb3Blbi1icmFjZS5cIik7XG4gIH1cblxuICB0b2tlbnMubmV4dFRva2VuKCk7XG4gIHdoaWxlICghdG9rZW5zLm1hdGNoZXNDb250ZXh0SWRBbmRMYWJlbCh0dC5icmFjZVIsIGNsYXNzQ29udGV4dElkKSkge1xuICAgIGlmICh0b2tlbnMubWF0Y2hlc0NvbnRleHR1YWwoQ29udGV4dHVhbEtleXdvcmQuX2NvbnN0cnVjdG9yKSAmJiAhdG9rZW5zLmN1cnJlbnRUb2tlbigpLmlzVHlwZSkge1xuICAgICAgKHtjb25zdHJ1Y3RvckluaXRpYWxpemVyU3RhdGVtZW50cywgY29uc3RydWN0b3JJbnNlcnRQb3N9ID0gcHJvY2Vzc0NvbnN0cnVjdG9yKHRva2VucykpO1xuICAgIH0gZWxzZSBpZiAodG9rZW5zLm1hdGNoZXMxKHR0LnNlbWkpKSB7XG4gICAgICBpZiAoIWRpc2FibGVFU1RyYW5zZm9ybXMpIHtcbiAgICAgICAgcmFuZ2VzVG9SZW1vdmUucHVzaCh7c3RhcnQ6IHRva2Vucy5jdXJyZW50SW5kZXgoKSwgZW5kOiB0b2tlbnMuY3VycmVudEluZGV4KCkgKyAxfSk7XG4gICAgICB9XG4gICAgICB0b2tlbnMubmV4dFRva2VuKCk7XG4gICAgfSBlbHNlIGlmICh0b2tlbnMuY3VycmVudFRva2VuKCkuaXNUeXBlKSB7XG4gICAgICB0b2tlbnMubmV4dFRva2VuKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEVpdGhlciBhIG1ldGhvZCBvciBhIGZpZWxkLiBTa2lwIHRvIHRoZSBpZGVudGlmaWVyIHBhcnQuXG4gICAgICBjb25zdCBzdGF0ZW1lbnRTdGFydEluZGV4ID0gdG9rZW5zLmN1cnJlbnRJbmRleCgpO1xuICAgICAgbGV0IGlzU3RhdGljID0gZmFsc2U7XG4gICAgICBsZXQgaXNFU1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgIGxldCBpc0RlY2xhcmVPckFic3RyYWN0ID0gZmFsc2U7XG4gICAgICB3aGlsZSAoaXNBY2Nlc3NNb2RpZmllcih0b2tlbnMuY3VycmVudFRva2VuKCkpKSB7XG4gICAgICAgIGlmICh0b2tlbnMubWF0Y2hlczEodHQuX3N0YXRpYykpIHtcbiAgICAgICAgICBpc1N0YXRpYyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRva2Vucy5tYXRjaGVzMSh0dC5oYXNoKSkge1xuICAgICAgICAgIGlzRVNQcml2YXRlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG9rZW5zLm1hdGNoZXMxKHR0Ll9kZWNsYXJlKSB8fCB0b2tlbnMubWF0Y2hlczEodHQuX2Fic3RyYWN0KSkge1xuICAgICAgICAgIGlzRGVjbGFyZU9yQWJzdHJhY3QgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgICAgIH1cbiAgICAgIGlmIChpc1N0YXRpYyAmJiB0b2tlbnMubWF0Y2hlczEodHQuYnJhY2VMKSkge1xuICAgICAgICAvLyBUaGlzIGlzIGEgc3RhdGljIGJsb2NrLCBzbyBkb24ndCBwcm9jZXNzIGl0IGluIGFueSBzcGVjaWFsIHdheS5cbiAgICAgICAgc2tpcFRvTmV4dENsYXNzRWxlbWVudCh0b2tlbnMsIGNsYXNzQ29udGV4dElkKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoaXNFU1ByaXZhdGUpIHtcbiAgICAgICAgLy8gU3VjcmFzZSBkb2Vzbid0IGF0dGVtcHQgdG8gdHJhbnNwaWxlIHByaXZhdGUgZmllbGRzOyBqdXN0IGxlYXZlIHRoZW0gYXMtaXMuXG4gICAgICAgIHNraXBUb05leHRDbGFzc0VsZW1lbnQodG9rZW5zLCBjbGFzc0NvbnRleHRJZCk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKFxuICAgICAgICB0b2tlbnMubWF0Y2hlc0NvbnRleHR1YWwoQ29udGV4dHVhbEtleXdvcmQuX2NvbnN0cnVjdG9yKSAmJlxuICAgICAgICAhdG9rZW5zLmN1cnJlbnRUb2tlbigpLmlzVHlwZVxuICAgICAgKSB7XG4gICAgICAgICh7Y29uc3RydWN0b3JJbml0aWFsaXplclN0YXRlbWVudHMsIGNvbnN0cnVjdG9ySW5zZXJ0UG9zfSA9IHByb2Nlc3NDb25zdHJ1Y3Rvcih0b2tlbnMpKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG5hbWVTdGFydEluZGV4ID0gdG9rZW5zLmN1cnJlbnRJbmRleCgpO1xuICAgICAgc2tpcEZpZWxkTmFtZSh0b2tlbnMpO1xuICAgICAgaWYgKHRva2Vucy5tYXRjaGVzMSh0dC5sZXNzVGhhbikgfHwgdG9rZW5zLm1hdGNoZXMxKHR0LnBhcmVuTCkpIHtcbiAgICAgICAgLy8gVGhpcyBpcyBhIG1ldGhvZCwgc28gbm90aGluZyB0byBwcm9jZXNzLlxuICAgICAgICBza2lwVG9OZXh0Q2xhc3NFbGVtZW50KHRva2VucywgY2xhc3NDb250ZXh0SWQpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIC8vIFRoZXJlIG1pZ2h0IGJlIGEgdHlwZSBhbm5vdGF0aW9uIHRoYXQgd2UgbmVlZCB0byBza2lwLlxuICAgICAgd2hpbGUgKHRva2Vucy5jdXJyZW50VG9rZW4oKS5pc1R5cGUpIHtcbiAgICAgICAgdG9rZW5zLm5leHRUb2tlbigpO1xuICAgICAgfVxuICAgICAgaWYgKHRva2Vucy5tYXRjaGVzMSh0dC5lcSkpIHtcbiAgICAgICAgY29uc3QgZXF1YWxzSW5kZXggPSB0b2tlbnMuY3VycmVudEluZGV4KCk7XG4gICAgICAgIC8vIFRoaXMgaXMgYW4gaW5pdGlhbGl6ZXIsIHNvIHdlIG5lZWQgdG8gd3JhcCBpbiBhbiBpbml0aWFsaXplciBtZXRob2QuXG4gICAgICAgIGNvbnN0IHZhbHVlRW5kID0gdG9rZW5zLmN1cnJlbnRUb2tlbigpLnJoc0VuZEluZGV4O1xuICAgICAgICBpZiAodmFsdWVFbmQgPT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIHJoc0VuZEluZGV4IG9uIGNsYXNzIGZpZWxkIGFzc2lnbm1lbnQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgICAgICAgd2hpbGUgKHRva2Vucy5jdXJyZW50SW5kZXgoKSA8IHZhbHVlRW5kKSB7XG4gICAgICAgICAgcm9vdFRyYW5zZm9ybWVyLnByb2Nlc3NUb2tlbigpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpbml0aWFsaXplck5hbWU7XG4gICAgICAgIGlmIChpc1N0YXRpYykge1xuICAgICAgICAgIGluaXRpYWxpemVyTmFtZSA9IG5hbWVNYW5hZ2VyLmNsYWltRnJlZU5hbWUoXCJfX2luaXRTdGF0aWNcIik7XG4gICAgICAgICAgc3RhdGljSW5pdGlhbGl6ZXJOYW1lcy5wdXNoKGluaXRpYWxpemVyTmFtZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW5pdGlhbGl6ZXJOYW1lID0gbmFtZU1hbmFnZXIuY2xhaW1GcmVlTmFtZShcIl9faW5pdFwiKTtcbiAgICAgICAgICBpbnN0YW5jZUluaXRpYWxpemVyTmFtZXMucHVzaChpbml0aWFsaXplck5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEZpZWxkcyBzdGFydCBhdCB0aGUgbmFtZSwgc28gYHN0YXRpYyB4ID0gMTtgIGhhcyBhIGZpZWxkIHJhbmdlIG9mIGB4ID0gMTtgLlxuICAgICAgICBmaWVsZHMucHVzaCh7XG4gICAgICAgICAgaW5pdGlhbGl6ZXJOYW1lLFxuICAgICAgICAgIGVxdWFsc0luZGV4LFxuICAgICAgICAgIHN0YXJ0OiBuYW1lU3RhcnRJbmRleCxcbiAgICAgICAgICBlbmQ6IHRva2Vucy5jdXJyZW50SW5kZXgoKSxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKCFkaXNhYmxlRVNUcmFuc2Zvcm1zIHx8IGlzRGVjbGFyZU9yQWJzdHJhY3QpIHtcbiAgICAgICAgLy8gVGhpcyBpcyBhIHJlZ3VsYXIgZmllbGQgZGVjbGFyYXRpb24sIGxpa2UgYHg7YC4gV2l0aCB0aGUgY2xhc3MgdHJhbnNmb3JtIGVuYWJsZWQsIHdlIGp1c3RcbiAgICAgICAgLy8gcmVtb3ZlIHRoZSBsaW5lIHNvIHRoYXQgbm8gb3V0cHV0IGlzIHByb2R1Y2VkLiBXaXRoIHRoZSBjbGFzcyB0cmFuc2Zvcm0gZGlzYWJsZWQsIHdlXG4gICAgICAgIC8vIHVzdWFsbHkgd2FudCB0byBwcmVzZXJ2ZSB0aGUgZGVjbGFyYXRpb24gKGJ1dCBzdGlsbCBzdHJpcCB0eXBlcyksIGJ1dCBpZiB0aGUgYGRlY2xhcmVgXG4gICAgICAgIC8vIG9yIGBhYnN0cmFjdGAga2V5d29yZCBpcyBzcGVjaWZpZWQsIHdlIHNob3VsZCByZW1vdmUgdGhlIGxpbmUgdG8gYXZvaWQgaW5pdGlhbGl6aW5nIHRoZVxuICAgICAgICAvLyB2YWx1ZSB0byB1bmRlZmluZWQuXG4gICAgICAgIHJhbmdlc1RvUmVtb3ZlLnB1c2goe3N0YXJ0OiBzdGF0ZW1lbnRTdGFydEluZGV4LCBlbmQ6IHRva2Vucy5jdXJyZW50SW5kZXgoKX0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHRva2Vucy5yZXN0b3JlVG9TbmFwc2hvdChzbmFwc2hvdCk7XG4gIGlmIChkaXNhYmxlRVNUcmFuc2Zvcm1zKSB7XG4gICAgLy8gV2l0aCBFUyB0cmFuc2Zvcm1zIGRpc2FibGVkLCB3ZSBkb24ndCB3YW50IHRvIHRyYW5zZm9ybSByZWd1bGFyIGNsYXNzXG4gICAgLy8gZmllbGQgZGVjbGFyYXRpb25zLCBhbmQgd2UgZG9uJ3QgbmVlZCB0byBkbyBhbnkgYWRkaXRpb25hbCB0cmlja3MgdG9cbiAgICAvLyByZWZlcmVuY2UgdGhlIGNvbnN0cnVjdG9yIGZvciBzdGF0aWMgaW5pdCwgYnV0IHdlIHN0aWxsIG5lZWQgdG8gdHJhbnNmb3JtXG4gICAgLy8gVHlwZVNjcmlwdCBmaWVsZCBpbml0aWFsaXplcnMgZGVmaW5lZCBhcyBjb25zdHJ1Y3RvciBwYXJhbWV0ZXJzIGFuZCB3ZVxuICAgIC8vIHN0aWxsIG5lZWQgdG8gcmVtb3ZlIGBkZWNsYXJlYCBmaWVsZHMuIEZvciBub3csIHdlIHJ1biB0aGUgc2FtZSBjb2RlXG4gICAgLy8gcGF0aCBidXQgb21pdCBhbnkgZmllbGQgaW5mb3JtYXRpb24sIGFzIGlmIHRoZSBjbGFzcyBoYWQgbm8gZmllbGRcbiAgICAvLyBkZWNsYXJhdGlvbnMuIEluIHRoZSBmdXR1cmUsIHdoZW4gd2UgZnVsbHkgZHJvcCB0aGUgY2xhc3MgZmllbGRzXG4gICAgLy8gdHJhbnNmb3JtLCB3ZSBjYW4gc2ltcGxpZnkgdGhpcyBjb2RlIHNpZ25pZmljYW50bHkuXG4gICAgcmV0dXJuIHtcbiAgICAgIGhlYWRlckluZm8sXG4gICAgICBjb25zdHJ1Y3RvckluaXRpYWxpemVyU3RhdGVtZW50cyxcbiAgICAgIGluc3RhbmNlSW5pdGlhbGl6ZXJOYW1lczogW10sXG4gICAgICBzdGF0aWNJbml0aWFsaXplck5hbWVzOiBbXSxcbiAgICAgIGNvbnN0cnVjdG9ySW5zZXJ0UG9zLFxuICAgICAgZmllbGRzOiBbXSxcbiAgICAgIHJhbmdlc1RvUmVtb3ZlLFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhlYWRlckluZm8sXG4gICAgICBjb25zdHJ1Y3RvckluaXRpYWxpemVyU3RhdGVtZW50cyxcbiAgICAgIGluc3RhbmNlSW5pdGlhbGl6ZXJOYW1lcyxcbiAgICAgIHN0YXRpY0luaXRpYWxpemVyTmFtZXMsXG4gICAgICBjb25zdHJ1Y3Rvckluc2VydFBvcyxcbiAgICAgIGZpZWxkcyxcbiAgICAgIHJhbmdlc1RvUmVtb3ZlLFxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBNb3ZlIHRoZSB0b2tlbiBwcm9jZXNzb3IgdG8gdGhlIG5leHQgbWV0aG9kL2ZpZWxkIGluIHRoZSBjbGFzcy5cbiAqXG4gKiBUbyBkbyB0aGF0LCB3ZSBzZWVrIGZvcndhcmQgdG8gdGhlIG5leHQgc3RhcnQgb2YgYSBjbGFzcyBuYW1lIChlaXRoZXIgYW4gb3BlblxuICogYnJhY2tldCBvciBhbiBpZGVudGlmaWVyLCBvciB0aGUgY2xvc2luZyBjdXJseSBicmFjZSksIHRoZW4gc2VlayBiYWNrd2FyZCB0b1xuICogaW5jbHVkZSBhbnkgYWNjZXNzIG1vZGlmaWVycy5cbiAqL1xuZnVuY3Rpb24gc2tpcFRvTmV4dENsYXNzRWxlbWVudCh0b2tlbnMsIGNsYXNzQ29udGV4dElkKSB7XG4gIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgd2hpbGUgKHRva2Vucy5jdXJyZW50VG9rZW4oKS5jb250ZXh0SWQgIT09IGNsYXNzQ29udGV4dElkKSB7XG4gICAgdG9rZW5zLm5leHRUb2tlbigpO1xuICB9XG4gIHdoaWxlIChpc0FjY2Vzc01vZGlmaWVyKHRva2Vucy50b2tlbkF0UmVsYXRpdmVJbmRleCgtMSkpKSB7XG4gICAgdG9rZW5zLnByZXZpb3VzVG9rZW4oKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwcm9jZXNzQ2xhc3NIZWFkZXIodG9rZW5zKSB7XG4gIGNvbnN0IGNsYXNzVG9rZW4gPSB0b2tlbnMuY3VycmVudFRva2VuKCk7XG4gIGNvbnN0IGNvbnRleHRJZCA9IGNsYXNzVG9rZW4uY29udGV4dElkO1xuICBpZiAoY29udGV4dElkID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCBjb250ZXh0IElEIG9uIGNsYXNzIHRva2VuLlwiKTtcbiAgfVxuICBjb25zdCBpc0V4cHJlc3Npb24gPSBjbGFzc1Rva2VuLmlzRXhwcmVzc2lvbjtcbiAgaWYgKGlzRXhwcmVzc2lvbiA9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgaXNFeHByZXNzaW9uIG9uIGNsYXNzIHRva2VuLlwiKTtcbiAgfVxuICBsZXQgY2xhc3NOYW1lID0gbnVsbDtcbiAgbGV0IGhhc1N1cGVyY2xhc3MgPSBmYWxzZTtcbiAgdG9rZW5zLm5leHRUb2tlbigpO1xuICBpZiAodG9rZW5zLm1hdGNoZXMxKHR0Lm5hbWUpKSB7XG4gICAgY2xhc3NOYW1lID0gdG9rZW5zLmlkZW50aWZpZXJOYW1lKCk7XG4gIH1cbiAgd2hpbGUgKCF0b2tlbnMubWF0Y2hlc0NvbnRleHRJZEFuZExhYmVsKHR0LmJyYWNlTCwgY29udGV4dElkKSkge1xuICAgIC8vIElmIHRoaXMgaGFzIGEgc3VwZXJjbGFzcywgdGhlcmUgd2lsbCBhbHdheXMgYmUgYW4gYGV4dGVuZHNgIHRva2VuLiBJZiBpdCBkb2Vzbid0IGhhdmUgYVxuICAgIC8vIHN1cGVyY2xhc3MsIG9ubHkgdHlwZSBwYXJhbWV0ZXJzIGFuZCBgaW1wbGVtZW50c2AgY2xhdXNlcyBjYW4gc2hvdyB1cCBoZXJlLCBhbGwgb2Ygd2hpY2hcbiAgICAvLyBjb25zaXN0IG9ubHkgb2YgdHlwZSB0b2tlbnMuIEEgZGVjbGFyYXRpb24gbGlrZSBgY2xhc3MgQTxCIGV4dGVuZHMgQz4ge2Agc2hvdWxkICpub3QqIGNvdW50XG4gICAgLy8gYXMgaGF2aW5nIGEgc3VwZXJjbGFzcy5cbiAgICBpZiAodG9rZW5zLm1hdGNoZXMxKHR0Ll9leHRlbmRzKSAmJiAhdG9rZW5zLmN1cnJlbnRUb2tlbigpLmlzVHlwZSkge1xuICAgICAgaGFzU3VwZXJjbGFzcyA9IHRydWU7XG4gICAgfVxuICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgfVxuICByZXR1cm4ge2lzRXhwcmVzc2lvbiwgY2xhc3NOYW1lLCBoYXNTdXBlcmNsYXNzfTtcbn1cblxuLyoqXG4gKiBFeHRyYWN0IHVzZWZ1bCBpbmZvcm1hdGlvbiBvdXQgb2YgYSBjb25zdHJ1Y3Rvciwgc3RhcnRpbmcgYXQgdGhlIFwiY29uc3RydWN0b3JcIiBuYW1lLlxuICovXG5mdW5jdGlvbiBwcm9jZXNzQ29uc3RydWN0b3IodG9rZW5zKVxuXG5cbiB7XG4gIGNvbnN0IGNvbnN0cnVjdG9ySW5pdGlhbGl6ZXJTdGF0ZW1lbnRzID0gW107XG5cbiAgdG9rZW5zLm5leHRUb2tlbigpO1xuICBjb25zdCBjb25zdHJ1Y3RvckNvbnRleHRJZCA9IHRva2Vucy5jdXJyZW50VG9rZW4oKS5jb250ZXh0SWQ7XG4gIGlmIChjb25zdHJ1Y3RvckNvbnRleHRJZCA9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgY29udGV4dCBJRCBvbiBvcGVuLXBhcmVuIHN0YXJ0aW5nIGNvbnN0cnVjdG9yIHBhcmFtcy5cIik7XG4gIH1cbiAgLy8gQWR2YW5jZSB0aHJvdWdoIHBhcmFtZXRlcnMgbG9va2luZyBmb3IgYWNjZXNzIG1vZGlmaWVycy5cbiAgd2hpbGUgKCF0b2tlbnMubWF0Y2hlc0NvbnRleHRJZEFuZExhYmVsKHR0LnBhcmVuUiwgY29uc3RydWN0b3JDb250ZXh0SWQpKSB7XG4gICAgaWYgKHRva2Vucy5jdXJyZW50VG9rZW4oKS5jb250ZXh0SWQgPT09IGNvbnN0cnVjdG9yQ29udGV4dElkKSB7XG4gICAgICAvLyBDdXJyZW50IHRva2VuIGlzIGFuIG9wZW4gcGFyZW4gb3IgY29tbWEganVzdCBiZWZvcmUgYSBwYXJhbSwgc28gY2hlY2tcbiAgICAgIC8vIHRoYXQgcGFyYW0gZm9yIGFjY2VzcyBtb2RpZmllcnMuXG4gICAgICB0b2tlbnMubmV4dFRva2VuKCk7XG4gICAgICBpZiAoaXNBY2Nlc3NNb2RpZmllcih0b2tlbnMuY3VycmVudFRva2VuKCkpKSB7XG4gICAgICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgICAgICAgd2hpbGUgKGlzQWNjZXNzTW9kaWZpZXIodG9rZW5zLmN1cnJlbnRUb2tlbigpKSkge1xuICAgICAgICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0b2tlbiA9IHRva2Vucy5jdXJyZW50VG9rZW4oKTtcbiAgICAgICAgaWYgKHRva2VuLnR5cGUgIT09IHR0Lm5hbWUpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCBpZGVudGlmaWVyIGFmdGVyIGFjY2VzcyBtb2RpZmllcnMgaW4gY29uc3RydWN0b3IgYXJnLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuYW1lID0gdG9rZW5zLmlkZW50aWZpZXJOYW1lRm9yVG9rZW4odG9rZW4pO1xuICAgICAgICBjb25zdHJ1Y3RvckluaXRpYWxpemVyU3RhdGVtZW50cy5wdXNoKGB0aGlzLiR7bmFtZX0gPSAke25hbWV9YCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgICB9XG4gIH1cbiAgLy8gKVxuICB0b2tlbnMubmV4dFRva2VuKCk7XG4gIC8vIENvbnN0cnVjdG9yIHR5cGUgYW5ub3RhdGlvbnMgYXJlIGludmFsaWQsIGJ1dCBza2lwIHRoZW0gYW55d2F5IHNpbmNlXG4gIC8vIHRoZXkncmUgZWFzeSB0byBza2lwLlxuICB3aGlsZSAodG9rZW5zLmN1cnJlbnRUb2tlbigpLmlzVHlwZSkge1xuICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgfVxuICBsZXQgY29uc3RydWN0b3JJbnNlcnRQb3MgPSB0b2tlbnMuY3VycmVudEluZGV4KCk7XG5cbiAgLy8gQWR2YW5jZSB0aHJvdWdoIGJvZHkgbG9va2luZyBmb3IgYSBzdXBlciBjYWxsLlxuICBsZXQgZm91bmRTdXBlckNhbGwgPSBmYWxzZTtcbiAgd2hpbGUgKCF0b2tlbnMubWF0Y2hlc0NvbnRleHRJZEFuZExhYmVsKHR0LmJyYWNlUiwgY29uc3RydWN0b3JDb250ZXh0SWQpKSB7XG4gICAgaWYgKCFmb3VuZFN1cGVyQ2FsbCAmJiB0b2tlbnMubWF0Y2hlczIodHQuX3N1cGVyLCB0dC5wYXJlbkwpKSB7XG4gICAgICB0b2tlbnMubmV4dFRva2VuKCk7XG4gICAgICBjb25zdCBzdXBlckNhbGxDb250ZXh0SWQgPSB0b2tlbnMuY3VycmVudFRva2VuKCkuY29udGV4dElkO1xuICAgICAgaWYgKHN1cGVyQ2FsbENvbnRleHRJZCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGEgY29udGV4dCBJRCBvbiB0aGUgc3VwZXIgY2FsbFwiKTtcbiAgICAgIH1cbiAgICAgIHdoaWxlICghdG9rZW5zLm1hdGNoZXNDb250ZXh0SWRBbmRMYWJlbCh0dC5wYXJlblIsIHN1cGVyQ2FsbENvbnRleHRJZCkpIHtcbiAgICAgICAgdG9rZW5zLm5leHRUb2tlbigpO1xuICAgICAgfVxuICAgICAgY29uc3RydWN0b3JJbnNlcnRQb3MgPSB0b2tlbnMuY3VycmVudEluZGV4KCk7XG4gICAgICBmb3VuZFN1cGVyQ2FsbCA9IHRydWU7XG4gICAgfVxuICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgfVxuICAvLyB9XG4gIHRva2Vucy5uZXh0VG9rZW4oKTtcblxuICByZXR1cm4ge2NvbnN0cnVjdG9ySW5pdGlhbGl6ZXJTdGF0ZW1lbnRzLCBjb25zdHJ1Y3Rvckluc2VydFBvc307XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHRoaXMgaXMgYW55IHRva2VuIHRoYXQgY2FuIGdvIGJlZm9yZSB0aGUgbmFtZSBpbiBhIG1ldGhvZC9maWVsZC5cbiAqL1xuZnVuY3Rpb24gaXNBY2Nlc3NNb2RpZmllcih0b2tlbikge1xuICByZXR1cm4gW1xuICAgIHR0Ll9hc3luYyxcbiAgICB0dC5fZ2V0LFxuICAgIHR0Ll9zZXQsXG4gICAgdHQucGx1cyxcbiAgICB0dC5taW51cyxcbiAgICB0dC5fcmVhZG9ubHksXG4gICAgdHQuX3N0YXRpYyxcbiAgICB0dC5fcHVibGljLFxuICAgIHR0Ll9wcml2YXRlLFxuICAgIHR0Ll9wcm90ZWN0ZWQsXG4gICAgdHQuX292ZXJyaWRlLFxuICAgIHR0Ll9hYnN0cmFjdCxcbiAgICB0dC5zdGFyLFxuICAgIHR0Ll9kZWNsYXJlLFxuICAgIHR0Lmhhc2gsXG4gIF0uaW5jbHVkZXModG9rZW4udHlwZSk7XG59XG5cbi8qKlxuICogVGhlIG5leHQgdG9rZW4gb3Igc2V0IG9mIHRva2VucyBpcyBlaXRoZXIgYW4gaWRlbnRpZmllciBvciBhbiBleHByZXNzaW9uIGluIHNxdWFyZSBicmFja2V0cywgZm9yXG4gKiBhIG1ldGhvZCBvciBmaWVsZCBuYW1lLlxuICovXG5mdW5jdGlvbiBza2lwRmllbGROYW1lKHRva2Vucykge1xuICBpZiAodG9rZW5zLm1hdGNoZXMxKHR0LmJyYWNrZXRMKSkge1xuICAgIGNvbnN0IHN0YXJ0VG9rZW4gPSB0b2tlbnMuY3VycmVudFRva2VuKCk7XG4gICAgY29uc3QgY2xhc3NDb250ZXh0SWQgPSBzdGFydFRva2VuLmNvbnRleHRJZDtcbiAgICBpZiAoY2xhc3NDb250ZXh0SWQgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgY2xhc3MgY29udGV4dCBJRCBvbiBjb21wdXRlZCBuYW1lIG9wZW4gYnJhY2tldC5cIik7XG4gICAgfVxuICAgIHdoaWxlICghdG9rZW5zLm1hdGNoZXNDb250ZXh0SWRBbmRMYWJlbCh0dC5icmFja2V0UiwgY2xhc3NDb250ZXh0SWQpKSB7XG4gICAgICB0b2tlbnMubmV4dFRva2VuKCk7XG4gICAgfVxuICAgIHRva2Vucy5uZXh0VG9rZW4oKTtcbiAgfSBlbHNlIHtcbiAgICB0b2tlbnMubmV4dFRva2VuKCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getClassInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getDeclarationInfo.js":
/*!******************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/getDeclarationInfo.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMPTY_DECLARATION_INFO: function() { return /* binding */ EMPTY_DECLARATION_INFO; },\n/* harmony export */   \"default\": function() { return /* binding */ getDeclarationInfo; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n\n\n\n\n\nconst EMPTY_DECLARATION_INFO = {\n  typeDeclarations: new Set(),\n  valueDeclarations: new Set(),\n};\n\n/**\n * Get all top-level identifiers that should be preserved when exported in TypeScript.\n *\n * Examples:\n * - If an identifier is declared as `const x`, then `export {x}` should be preserved.\n * - If it's declared as `type x`, then `export {x}` should be removed.\n * - If it's declared as both `const x` and `type x`, then the export should be preserved.\n * - Classes and enums should be preserved (even though they also introduce types).\n * - Imported identifiers should be preserved since we don't have enough information to\n *   rule them out. --isolatedModules disallows re-exports, which catches errors here.\n */\nfunction getDeclarationInfo(tokens) {\n  const typeDeclarations = new Set();\n  const valueDeclarations = new Set();\n  for (let i = 0; i < tokens.tokens.length; i++) {\n    const token = tokens.tokens[i];\n    if (token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name && (0,_parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.isTopLevelDeclaration)(token)) {\n      if (token.isType) {\n        typeDeclarations.add(tokens.identifierNameForToken(token));\n      } else {\n        valueDeclarations.add(tokens.identifierNameForToken(token));\n      }\n    }\n  }\n  return {typeDeclarations, valueDeclarations};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0RGVjbGFyYXRpb25JbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEQ7QUFDQTs7Ozs7Ozs7QUFRbkQ7QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsRUFBRTtBQUNoRSxpREFBaUQsRUFBRTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0Esa0JBQWtCLDBCQUEwQjtBQUM1QztBQUNBLHVCQUF1Qiw4REFBRSxTQUFTLHdFQUFxQjtBQUN2RDtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0RGVjbGFyYXRpb25JbmZvLmpzPzVkMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpc1RvcExldmVsRGVjbGFyYXRpb259IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyXCI7XG5pbXBvcnQge1Rva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIvdHlwZXNcIjtcblxuXG5cblxuXG5cblxuZXhwb3J0IGNvbnN0IEVNUFRZX0RFQ0xBUkFUSU9OX0lORk8gPSB7XG4gIHR5cGVEZWNsYXJhdGlvbnM6IG5ldyBTZXQoKSxcbiAgdmFsdWVEZWNsYXJhdGlvbnM6IG5ldyBTZXQoKSxcbn07XG5cbi8qKlxuICogR2V0IGFsbCB0b3AtbGV2ZWwgaWRlbnRpZmllcnMgdGhhdCBzaG91bGQgYmUgcHJlc2VydmVkIHdoZW4gZXhwb3J0ZWQgaW4gVHlwZVNjcmlwdC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqIC0gSWYgYW4gaWRlbnRpZmllciBpcyBkZWNsYXJlZCBhcyBgY29uc3QgeGAsIHRoZW4gYGV4cG9ydCB7eH1gIHNob3VsZCBiZSBwcmVzZXJ2ZWQuXG4gKiAtIElmIGl0J3MgZGVjbGFyZWQgYXMgYHR5cGUgeGAsIHRoZW4gYGV4cG9ydCB7eH1gIHNob3VsZCBiZSByZW1vdmVkLlxuICogLSBJZiBpdCdzIGRlY2xhcmVkIGFzIGJvdGggYGNvbnN0IHhgIGFuZCBgdHlwZSB4YCwgdGhlbiB0aGUgZXhwb3J0IHNob3VsZCBiZSBwcmVzZXJ2ZWQuXG4gKiAtIENsYXNzZXMgYW5kIGVudW1zIHNob3VsZCBiZSBwcmVzZXJ2ZWQgKGV2ZW4gdGhvdWdoIHRoZXkgYWxzbyBpbnRyb2R1Y2UgdHlwZXMpLlxuICogLSBJbXBvcnRlZCBpZGVudGlmaWVycyBzaG91bGQgYmUgcHJlc2VydmVkIHNpbmNlIHdlIGRvbid0IGhhdmUgZW5vdWdoIGluZm9ybWF0aW9uIHRvXG4gKiAgIHJ1bGUgdGhlbSBvdXQuIC0taXNvbGF0ZWRNb2R1bGVzIGRpc2FsbG93cyByZS1leHBvcnRzLCB3aGljaCBjYXRjaGVzIGVycm9ycyBoZXJlLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREZWNsYXJhdGlvbkluZm8odG9rZW5zKSB7XG4gIGNvbnN0IHR5cGVEZWNsYXJhdGlvbnMgPSBuZXcgU2V0KCk7XG4gIGNvbnN0IHZhbHVlRGVjbGFyYXRpb25zID0gbmV3IFNldCgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vucy50b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB0b2tlbiA9IHRva2Vucy50b2tlbnNbaV07XG4gICAgaWYgKHRva2VuLnR5cGUgPT09IHR0Lm5hbWUgJiYgaXNUb3BMZXZlbERlY2xhcmF0aW9uKHRva2VuKSkge1xuICAgICAgaWYgKHRva2VuLmlzVHlwZSkge1xuICAgICAgICB0eXBlRGVjbGFyYXRpb25zLmFkZCh0b2tlbnMuaWRlbnRpZmllck5hbWVGb3JUb2tlbih0b2tlbikpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWVEZWNsYXJhdGlvbnMuYWRkKHRva2Vucy5pZGVudGlmaWVyTmFtZUZvclRva2VuKHRva2VuKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiB7dHlwZURlY2xhcmF0aW9ucywgdmFsdWVEZWNsYXJhdGlvbnN9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getDeclarationInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getIdentifierNames.js":
/*!******************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/getIdentifierNames.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getIdentifierNames; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n/**\n * Get all identifier names in the code, in order, including duplicates.\n */\nfunction getIdentifierNames(code, tokens) {\n  const names = [];\n  for (const token of tokens) {\n    if (token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name) {\n      names.push(code.slice(token.start, token.end));\n    }\n  }\n  return names;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0SWRlbnRpZmllck5hbWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUMwRDs7QUFFMUQ7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0EsdUJBQXVCLDhEQUFFO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1Y3Jhc2UvZGlzdC9lc20vdXRpbC9nZXRJZGVudGlmaWVyTmFtZXMuanM/Y2I0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7VG9rZW5UeXBlIGFzIHR0fSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplci90eXBlc1wiO1xuXG4vKipcbiAqIEdldCBhbGwgaWRlbnRpZmllciBuYW1lcyBpbiB0aGUgY29kZSwgaW4gb3JkZXIsIGluY2x1ZGluZyBkdXBsaWNhdGVzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRJZGVudGlmaWVyTmFtZXMoY29kZSwgdG9rZW5zKSB7XG4gIGNvbnN0IG5hbWVzID0gW107XG4gIGZvciAoY29uc3QgdG9rZW4gb2YgdG9rZW5zKSB7XG4gICAgaWYgKHRva2VuLnR5cGUgPT09IHR0Lm5hbWUpIHtcbiAgICAgIG5hbWVzLnB1c2goY29kZS5zbGljZSh0b2tlbi5zdGFydCwgdG9rZW4uZW5kKSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBuYW1lcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getIdentifierNames.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getImportExportSpecifierInfo.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/getImportExportSpecifierInfo.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getImportExportSpecifierInfo; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Determine information about this named import or named export specifier.\n *\n * This syntax is the `a` from statements like these:\n * import {A} from \"./foo\";\n * export {A};\n * export {A} from \"./foo\";\n *\n * As it turns out, we can exactly characterize the syntax meaning by simply\n * counting the number of tokens, which can be from 1 to 4:\n * {A}\n * {type A}\n * {A as B}\n * {type A as B}\n *\n * In the type case, we never actually need the names in practice, so don't get\n * them.\n *\n * TODO: There's some redundancy with the type detection here and the isType\n * flag that's already present on tokens in TS mode. This function could\n * potentially be simplified and/or pushed to the call sites to avoid the object\n * allocation.\n */\nfunction getImportExportSpecifierInfo(\n  tokens,\n  index = tokens.currentIndex(),\n) {\n  let endIndex = index + 1;\n  if (isSpecifierEnd(tokens, endIndex)) {\n    // import {A}\n    const name = tokens.identifierNameAtIndex(index);\n    return {\n      isType: false,\n      leftName: name,\n      rightName: name,\n      endIndex,\n    };\n  }\n  endIndex++;\n  if (isSpecifierEnd(tokens, endIndex)) {\n    // import {type A}\n    return {\n      isType: true,\n      leftName: null,\n      rightName: null,\n      endIndex,\n    };\n  }\n  endIndex++;\n  if (isSpecifierEnd(tokens, endIndex)) {\n    // import {A as B}\n    return {\n      isType: false,\n      leftName: tokens.identifierNameAtIndex(index),\n      rightName: tokens.identifierNameAtIndex(index + 2),\n      endIndex,\n    };\n  }\n  endIndex++;\n  if (isSpecifierEnd(tokens, endIndex)) {\n    // import {type A as B}\n    return {\n      isType: true,\n      leftName: null,\n      rightName: null,\n      endIndex,\n    };\n  }\n  throw new Error(`Unexpected import/export specifier at ${index}`);\n}\n\nfunction isSpecifierEnd(tokens, index) {\n  const token = tokens.tokens[index];\n  return token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR || token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.comma;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0SW1wb3J0RXhwb3J0U3BlY2lmaWVySW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRDs7O0FBRzFEOzs7Ozs7Ozs7Ozs7OztBQWNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVztBQUNYLFdBQVcsR0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixJQUFJO0FBQ0osSUFBSTtBQUNKLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxNQUFNO0FBQ2pFOztBQUVBO0FBQ0E7QUFDQSx3QkFBd0IsOERBQUUsMEJBQTBCLDhEQUFFO0FBQ3REIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0SW1wb3J0RXhwb3J0U3BlY2lmaWVySW5mby5qcz80ZGEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VG9rZW5UeXBlIGFzIHR0fSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplci90eXBlc1wiO1xuXG5cbiBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuLyoqXG4gKiBEZXRlcm1pbmUgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBuYW1lZCBpbXBvcnQgb3IgbmFtZWQgZXhwb3J0IHNwZWNpZmllci5cbiAqXG4gKiBUaGlzIHN5bnRheCBpcyB0aGUgYGFgIGZyb20gc3RhdGVtZW50cyBsaWtlIHRoZXNlOlxuICogaW1wb3J0IHtBfSBmcm9tIFwiLi9mb29cIjtcbiAqIGV4cG9ydCB7QX07XG4gKiBleHBvcnQge0F9IGZyb20gXCIuL2Zvb1wiO1xuICpcbiAqIEFzIGl0IHR1cm5zIG91dCwgd2UgY2FuIGV4YWN0bHkgY2hhcmFjdGVyaXplIHRoZSBzeW50YXggbWVhbmluZyBieSBzaW1wbHlcbiAqIGNvdW50aW5nIHRoZSBudW1iZXIgb2YgdG9rZW5zLCB3aGljaCBjYW4gYmUgZnJvbSAxIHRvIDQ6XG4gKiB7QX1cbiAqIHt0eXBlIEF9XG4gKiB7QSBhcyBCfVxuICoge3R5cGUgQSBhcyBCfVxuICpcbiAqIEluIHRoZSB0eXBlIGNhc2UsIHdlIG5ldmVyIGFjdHVhbGx5IG5lZWQgdGhlIG5hbWVzIGluIHByYWN0aWNlLCBzbyBkb24ndCBnZXRcbiAqIHRoZW0uXG4gKlxuICogVE9ETzogVGhlcmUncyBzb21lIHJlZHVuZGFuY3kgd2l0aCB0aGUgdHlwZSBkZXRlY3Rpb24gaGVyZSBhbmQgdGhlIGlzVHlwZVxuICogZmxhZyB0aGF0J3MgYWxyZWFkeSBwcmVzZW50IG9uIHRva2VucyBpbiBUUyBtb2RlLiBUaGlzIGZ1bmN0aW9uIGNvdWxkXG4gKiBwb3RlbnRpYWxseSBiZSBzaW1wbGlmaWVkIGFuZC9vciBwdXNoZWQgdG8gdGhlIGNhbGwgc2l0ZXMgdG8gYXZvaWQgdGhlIG9iamVjdFxuICogYWxsb2NhdGlvbi5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0SW1wb3J0RXhwb3J0U3BlY2lmaWVySW5mbyhcbiAgdG9rZW5zLFxuICBpbmRleCA9IHRva2Vucy5jdXJyZW50SW5kZXgoKSxcbikge1xuICBsZXQgZW5kSW5kZXggPSBpbmRleCArIDE7XG4gIGlmIChpc1NwZWNpZmllckVuZCh0b2tlbnMsIGVuZEluZGV4KSkge1xuICAgIC8vIGltcG9ydCB7QX1cbiAgICBjb25zdCBuYW1lID0gdG9rZW5zLmlkZW50aWZpZXJOYW1lQXRJbmRleChpbmRleCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVHlwZTogZmFsc2UsXG4gICAgICBsZWZ0TmFtZTogbmFtZSxcbiAgICAgIHJpZ2h0TmFtZTogbmFtZSxcbiAgICAgIGVuZEluZGV4LFxuICAgIH07XG4gIH1cbiAgZW5kSW5kZXgrKztcbiAgaWYgKGlzU3BlY2lmaWVyRW5kKHRva2VucywgZW5kSW5kZXgpKSB7XG4gICAgLy8gaW1wb3J0IHt0eXBlIEF9XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVHlwZTogdHJ1ZSxcbiAgICAgIGxlZnROYW1lOiBudWxsLFxuICAgICAgcmlnaHROYW1lOiBudWxsLFxuICAgICAgZW5kSW5kZXgsXG4gICAgfTtcbiAgfVxuICBlbmRJbmRleCsrO1xuICBpZiAoaXNTcGVjaWZpZXJFbmQodG9rZW5zLCBlbmRJbmRleCkpIHtcbiAgICAvLyBpbXBvcnQge0EgYXMgQn1cbiAgICByZXR1cm4ge1xuICAgICAgaXNUeXBlOiBmYWxzZSxcbiAgICAgIGxlZnROYW1lOiB0b2tlbnMuaWRlbnRpZmllck5hbWVBdEluZGV4KGluZGV4KSxcbiAgICAgIHJpZ2h0TmFtZTogdG9rZW5zLmlkZW50aWZpZXJOYW1lQXRJbmRleChpbmRleCArIDIpLFxuICAgICAgZW5kSW5kZXgsXG4gICAgfTtcbiAgfVxuICBlbmRJbmRleCsrO1xuICBpZiAoaXNTcGVjaWZpZXJFbmQodG9rZW5zLCBlbmRJbmRleCkpIHtcbiAgICAvLyBpbXBvcnQge3R5cGUgQSBhcyBCfVxuICAgIHJldHVybiB7XG4gICAgICBpc1R5cGU6IHRydWUsXG4gICAgICBsZWZ0TmFtZTogbnVsbCxcbiAgICAgIHJpZ2h0TmFtZTogbnVsbCxcbiAgICAgIGVuZEluZGV4LFxuICAgIH07XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIGltcG9ydC9leHBvcnQgc3BlY2lmaWVyIGF0ICR7aW5kZXh9YCk7XG59XG5cbmZ1bmN0aW9uIGlzU3BlY2lmaWVyRW5kKHRva2VucywgaW5kZXgpIHtcbiAgY29uc3QgdG9rZW4gPSB0b2tlbnMudG9rZW5zW2luZGV4XTtcbiAgcmV0dXJuIHRva2VuLnR5cGUgPT09IHR0LmJyYWNlUiB8fCB0b2tlbi50eXBlID09PSB0dC5jb21tYTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getImportExportSpecifierInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getJSXPragmaInfo.js":
/*!****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/getJSXPragmaInfo.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getJSXPragmaInfo; }\n/* harmony export */ });\n\n\n\n\n\n\n\n\n\nfunction getJSXPragmaInfo(options) {\n  const [base, suffix] = splitPragma(options.jsxPragma || \"React.createElement\");\n  const [fragmentBase, fragmentSuffix] = splitPragma(options.jsxFragmentPragma || \"React.Fragment\");\n  return {base, suffix, fragmentBase, fragmentSuffix};\n}\n\nfunction splitPragma(pragma) {\n  let dotIndex = pragma.indexOf(\".\");\n  if (dotIndex === -1) {\n    dotIndex = pragma.length;\n  }\n  return [pragma.slice(0, dotIndex), pragma.slice(dotIndex)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0SlNYUHJhZ21hSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBU2U7QUFDZjtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0SlNYUHJhZ21hSW5mby5qcz8yZjkzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5cblxuXG5cblxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEpTWFByYWdtYUluZm8ob3B0aW9ucykge1xuICBjb25zdCBbYmFzZSwgc3VmZml4XSA9IHNwbGl0UHJhZ21hKG9wdGlvbnMuanN4UHJhZ21hIHx8IFwiUmVhY3QuY3JlYXRlRWxlbWVudFwiKTtcbiAgY29uc3QgW2ZyYWdtZW50QmFzZSwgZnJhZ21lbnRTdWZmaXhdID0gc3BsaXRQcmFnbWEob3B0aW9ucy5qc3hGcmFnbWVudFByYWdtYSB8fCBcIlJlYWN0LkZyYWdtZW50XCIpO1xuICByZXR1cm4ge2Jhc2UsIHN1ZmZpeCwgZnJhZ21lbnRCYXNlLCBmcmFnbWVudFN1ZmZpeH07XG59XG5cbmZ1bmN0aW9uIHNwbGl0UHJhZ21hKHByYWdtYSkge1xuICBsZXQgZG90SW5kZXggPSBwcmFnbWEuaW5kZXhPZihcIi5cIik7XG4gIGlmIChkb3RJbmRleCA9PT0gLTEpIHtcbiAgICBkb3RJbmRleCA9IHByYWdtYS5sZW5ndGg7XG4gIH1cbiAgcmV0dXJuIFtwcmFnbWEuc2xpY2UoMCwgZG90SW5kZXgpLCBwcmFnbWEuc2xpY2UoZG90SW5kZXgpXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getJSXPragmaInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getNonTypeIdentifiers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/getNonTypeIdentifiers.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNonTypeIdentifiers: function() { return /* binding */ getNonTypeIdentifiers; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/index.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _transformers_JSXTransformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transformers/JSXTransformer */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/transformers/JSXTransformer.js\");\n/* harmony import */ var _getJSXPragmaInfo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getJSXPragmaInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getJSXPragmaInfo.js\");\n\n\n\n\n\n\n\nfunction getNonTypeIdentifiers(tokens, options) {\n  const jsxPragmaInfo = (0,_getJSXPragmaInfo__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(options);\n  const nonTypeIdentifiers = new Set();\n  for (let i = 0; i < tokens.tokens.length; i++) {\n    const token = tokens.tokens[i];\n    if (\n      token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name &&\n      !token.isType &&\n      (token.identifierRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.Access ||\n        token.identifierRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ObjectShorthand ||\n        token.identifierRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.ExportAccess) &&\n      !token.shadowsGlobal\n    ) {\n      nonTypeIdentifiers.add(tokens.identifierNameForToken(token));\n    }\n    if (token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagStart) {\n      nonTypeIdentifiers.add(jsxPragmaInfo.base);\n    }\n    if (\n      token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagStart &&\n      i + 1 < tokens.tokens.length &&\n      tokens.tokens[i + 1].type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxTagEnd\n    ) {\n      nonTypeIdentifiers.add(jsxPragmaInfo.base);\n      nonTypeIdentifiers.add(jsxPragmaInfo.fragmentBase);\n    }\n    if (token.type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.jsxName && token.identifierRole === _parser_tokenizer__WEBPACK_IMPORTED_MODULE_0__.IdentifierRole.Access) {\n      const identifierName = tokens.identifierNameForToken(token);\n      // Lower-case single-component tag names like \"div\" don't count.\n      if (!(0,_transformers_JSXTransformer__WEBPACK_IMPORTED_MODULE_2__.startsWithLowerCase)(identifierName) || tokens.tokens[i + 1].type === _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.dot) {\n        nonTypeIdentifiers.add(tokens.identifierNameForToken(token));\n      }\n    }\n  }\n  return nonTypeIdentifiers;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0Tm9uVHlwZUlkZW50aWZpZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNtRDtBQUNrQjs7QUFFRjtBQUNqQjs7QUFFM0M7QUFDUCx3QkFBd0IsNkRBQWdCO0FBQ3hDO0FBQ0Esa0JBQWtCLDBCQUEwQjtBQUM1QztBQUNBO0FBQ0EscUJBQXFCLDhEQUFFO0FBQ3ZCO0FBQ0EsZ0NBQWdDLDZEQUFjO0FBQzlDLGlDQUFpQyw2REFBYztBQUMvQyxpQ0FBaUMsNkRBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOERBQUU7QUFDekI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDhEQUFFO0FBQ3ZCO0FBQ0Esb0NBQW9DLDhEQUFFO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDhEQUFFLHFDQUFxQyw2REFBYztBQUM1RTtBQUNBO0FBQ0EsV0FBVyxpRkFBbUIsa0RBQWtELDhEQUFTO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS91dGlsL2dldE5vblR5cGVJZGVudGlmaWVycy5qcz80OWYyIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtJZGVudGlmaWVyUm9sZX0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXJcIjtcbmltcG9ydCB7VG9rZW5UeXBlLCBUb2tlblR5cGUgYXMgdHR9IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyL3R5cGVzXCI7XG5cbmltcG9ydCB7c3RhcnRzV2l0aExvd2VyQ2FzZX0gZnJvbSBcIi4uL3RyYW5zZm9ybWVycy9KU1hUcmFuc2Zvcm1lclwiO1xuaW1wb3J0IGdldEpTWFByYWdtYUluZm8gZnJvbSBcIi4vZ2V0SlNYUHJhZ21hSW5mb1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm9uVHlwZUlkZW50aWZpZXJzKHRva2Vucywgb3B0aW9ucykge1xuICBjb25zdCBqc3hQcmFnbWFJbmZvID0gZ2V0SlNYUHJhZ21hSW5mbyhvcHRpb25zKTtcbiAgY29uc3Qgbm9uVHlwZUlkZW50aWZpZXJzID0gbmV3IFNldCgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vucy50b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB0b2tlbiA9IHRva2Vucy50b2tlbnNbaV07XG4gICAgaWYgKFxuICAgICAgdG9rZW4udHlwZSA9PT0gdHQubmFtZSAmJlxuICAgICAgIXRva2VuLmlzVHlwZSAmJlxuICAgICAgKHRva2VuLmlkZW50aWZpZXJSb2xlID09PSBJZGVudGlmaWVyUm9sZS5BY2Nlc3MgfHxcbiAgICAgICAgdG9rZW4uaWRlbnRpZmllclJvbGUgPT09IElkZW50aWZpZXJSb2xlLk9iamVjdFNob3J0aGFuZCB8fFxuICAgICAgICB0b2tlbi5pZGVudGlmaWVyUm9sZSA9PT0gSWRlbnRpZmllclJvbGUuRXhwb3J0QWNjZXNzKSAmJlxuICAgICAgIXRva2VuLnNoYWRvd3NHbG9iYWxcbiAgICApIHtcbiAgICAgIG5vblR5cGVJZGVudGlmaWVycy5hZGQodG9rZW5zLmlkZW50aWZpZXJOYW1lRm9yVG9rZW4odG9rZW4pKTtcbiAgICB9XG4gICAgaWYgKHRva2VuLnR5cGUgPT09IHR0LmpzeFRhZ1N0YXJ0KSB7XG4gICAgICBub25UeXBlSWRlbnRpZmllcnMuYWRkKGpzeFByYWdtYUluZm8uYmFzZSk7XG4gICAgfVxuICAgIGlmIChcbiAgICAgIHRva2VuLnR5cGUgPT09IHR0LmpzeFRhZ1N0YXJ0ICYmXG4gICAgICBpICsgMSA8IHRva2Vucy50b2tlbnMubGVuZ3RoICYmXG4gICAgICB0b2tlbnMudG9rZW5zW2kgKyAxXS50eXBlID09PSB0dC5qc3hUYWdFbmRcbiAgICApIHtcbiAgICAgIG5vblR5cGVJZGVudGlmaWVycy5hZGQoanN4UHJhZ21hSW5mby5iYXNlKTtcbiAgICAgIG5vblR5cGVJZGVudGlmaWVycy5hZGQoanN4UHJhZ21hSW5mby5mcmFnbWVudEJhc2UpO1xuICAgIH1cbiAgICBpZiAodG9rZW4udHlwZSA9PT0gdHQuanN4TmFtZSAmJiB0b2tlbi5pZGVudGlmaWVyUm9sZSA9PT0gSWRlbnRpZmllclJvbGUuQWNjZXNzKSB7XG4gICAgICBjb25zdCBpZGVudGlmaWVyTmFtZSA9IHRva2Vucy5pZGVudGlmaWVyTmFtZUZvclRva2VuKHRva2VuKTtcbiAgICAgIC8vIExvd2VyLWNhc2Ugc2luZ2xlLWNvbXBvbmVudCB0YWcgbmFtZXMgbGlrZSBcImRpdlwiIGRvbid0IGNvdW50LlxuICAgICAgaWYgKCFzdGFydHNXaXRoTG93ZXJDYXNlKGlkZW50aWZpZXJOYW1lKSB8fCB0b2tlbnMudG9rZW5zW2kgKyAxXS50eXBlID09PSBUb2tlblR5cGUuZG90KSB7XG4gICAgICAgIG5vblR5cGVJZGVudGlmaWVycy5hZGQodG9rZW5zLmlkZW50aWZpZXJOYW1lRm9yVG9rZW4odG9rZW4pKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5vblR5cGVJZGVudGlmaWVycztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getNonTypeIdentifiers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getTSImportedNames.js":
/*!******************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/getTSImportedNames.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getTSImportedNames; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n/* harmony import */ var _getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getImportExportSpecifierInfo */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getImportExportSpecifierInfo.js\");\n\n\n\n\n/**\n * Special case code to scan for imported names in ESM TypeScript. We need to do this so we can\n * properly get globals so we can compute shadowed globals.\n *\n * This is similar to logic in CJSImportProcessor, but trimmed down to avoid logic with CJS\n * replacement and flow type imports.\n */\nfunction getTSImportedNames(tokens) {\n  const importedNames = new Set();\n  for (let i = 0; i < tokens.tokens.length; i++) {\n    if (\n      tokens.matches1AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._import) &&\n      !tokens.matches3AtIndex(i, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType._import, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.eq)\n    ) {\n      collectNamesForImport(tokens, i, importedNames);\n    }\n  }\n  return importedNames;\n}\n\nfunction collectNamesForImport(\n  tokens,\n  index,\n  importedNames,\n) {\n  index++;\n\n  if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.parenL)) {\n    // Dynamic import, so nothing to do\n    return;\n  }\n\n  if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name)) {\n    importedNames.add(tokens.identifierNameAtIndex(index));\n    index++;\n    if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.comma)) {\n      index++;\n    }\n  }\n\n  if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.star)) {\n    // * as\n    index += 2;\n    importedNames.add(tokens.identifierNameAtIndex(index));\n    index++;\n  }\n\n  if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceL)) {\n    index++;\n    collectNamesForNamedImport(tokens, index, importedNames);\n  }\n}\n\nfunction collectNamesForNamedImport(\n  tokens,\n  index,\n  importedNames,\n) {\n  while (true) {\n    if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR)) {\n      return;\n    }\n\n    const specifierInfo = (0,_getImportExportSpecifierInfo__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(tokens, index);\n    index = specifierInfo.endIndex;\n    if (!specifierInfo.isType) {\n      importedNames.add(specifierInfo.rightName);\n    }\n\n    if (tokens.matches2AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.comma, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR)) {\n      return;\n    } else if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.braceR)) {\n      return;\n    } else if (tokens.matches1AtIndex(index, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.comma)) {\n      index++;\n    } else {\n      throw new Error(`Unexpected token: ${JSON.stringify(tokens.tokens[index])}`);\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvZ2V0VFNJbXBvcnRlZE5hbWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwRDs7QUFFZ0I7O0FBRTFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBLGtCQUFrQiwwQkFBMEI7QUFDNUM7QUFDQSxnQ0FBZ0MsOERBQUU7QUFDbEMsaUNBQWlDLDhEQUFFLFVBQVUsOERBQUUsT0FBTyw4REFBRTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9DQUFvQyw4REFBRTtBQUN0QztBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DLDhEQUFFO0FBQ3RDO0FBQ0E7QUFDQSxzQ0FBc0MsOERBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBLG9DQUFvQyw4REFBRTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9DQUFvQyw4REFBRTtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsOERBQUU7QUFDeEM7QUFDQTs7QUFFQSwwQkFBMEIseUVBQTRCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNDQUFzQyw4REFBRSxRQUFRLDhEQUFFO0FBQ2xEO0FBQ0EsTUFBTSx1Q0FBdUMsOERBQUU7QUFDL0M7QUFDQSxNQUFNLHVDQUF1Qyw4REFBRTtBQUMvQztBQUNBLE1BQU07QUFDTiwyQ0FBMkMscUNBQXFDO0FBQ2hGO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS91dGlsL2dldFRTSW1wb3J0ZWROYW1lcy5qcz8yMjg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VG9rZW5UeXBlIGFzIHR0fSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplci90eXBlc1wiO1xuXG5pbXBvcnQgZ2V0SW1wb3J0RXhwb3J0U3BlY2lmaWVySW5mbyBmcm9tIFwiLi9nZXRJbXBvcnRFeHBvcnRTcGVjaWZpZXJJbmZvXCI7XG5cbi8qKlxuICogU3BlY2lhbCBjYXNlIGNvZGUgdG8gc2NhbiBmb3IgaW1wb3J0ZWQgbmFtZXMgaW4gRVNNIFR5cGVTY3JpcHQuIFdlIG5lZWQgdG8gZG8gdGhpcyBzbyB3ZSBjYW5cbiAqIHByb3Blcmx5IGdldCBnbG9iYWxzIHNvIHdlIGNhbiBjb21wdXRlIHNoYWRvd2VkIGdsb2JhbHMuXG4gKlxuICogVGhpcyBpcyBzaW1pbGFyIHRvIGxvZ2ljIGluIENKU0ltcG9ydFByb2Nlc3NvciwgYnV0IHRyaW1tZWQgZG93biB0byBhdm9pZCBsb2dpYyB3aXRoIENKU1xuICogcmVwbGFjZW1lbnQgYW5kIGZsb3cgdHlwZSBpbXBvcnRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUU0ltcG9ydGVkTmFtZXModG9rZW5zKSB7XG4gIGNvbnN0IGltcG9ydGVkTmFtZXMgPSBuZXcgU2V0KCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW5zLnRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChcbiAgICAgIHRva2Vucy5tYXRjaGVzMUF0SW5kZXgoaSwgdHQuX2ltcG9ydCkgJiZcbiAgICAgICF0b2tlbnMubWF0Y2hlczNBdEluZGV4KGksIHR0Ll9pbXBvcnQsIHR0Lm5hbWUsIHR0LmVxKVxuICAgICkge1xuICAgICAgY29sbGVjdE5hbWVzRm9ySW1wb3J0KHRva2VucywgaSwgaW1wb3J0ZWROYW1lcyk7XG4gICAgfVxuICB9XG4gIHJldHVybiBpbXBvcnRlZE5hbWVzO1xufVxuXG5mdW5jdGlvbiBjb2xsZWN0TmFtZXNGb3JJbXBvcnQoXG4gIHRva2VucyxcbiAgaW5kZXgsXG4gIGltcG9ydGVkTmFtZXMsXG4pIHtcbiAgaW5kZXgrKztcblxuICBpZiAodG9rZW5zLm1hdGNoZXMxQXRJbmRleChpbmRleCwgdHQucGFyZW5MKSkge1xuICAgIC8vIER5bmFtaWMgaW1wb3J0LCBzbyBub3RoaW5nIHRvIGRvXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHRva2Vucy5tYXRjaGVzMUF0SW5kZXgoaW5kZXgsIHR0Lm5hbWUpKSB7XG4gICAgaW1wb3J0ZWROYW1lcy5hZGQodG9rZW5zLmlkZW50aWZpZXJOYW1lQXRJbmRleChpbmRleCkpO1xuICAgIGluZGV4Kys7XG4gICAgaWYgKHRva2Vucy5tYXRjaGVzMUF0SW5kZXgoaW5kZXgsIHR0LmNvbW1hKSkge1xuICAgICAgaW5kZXgrKztcbiAgICB9XG4gIH1cblxuICBpZiAodG9rZW5zLm1hdGNoZXMxQXRJbmRleChpbmRleCwgdHQuc3RhcikpIHtcbiAgICAvLyAqIGFzXG4gICAgaW5kZXggKz0gMjtcbiAgICBpbXBvcnRlZE5hbWVzLmFkZCh0b2tlbnMuaWRlbnRpZmllck5hbWVBdEluZGV4KGluZGV4KSk7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGlmICh0b2tlbnMubWF0Y2hlczFBdEluZGV4KGluZGV4LCB0dC5icmFjZUwpKSB7XG4gICAgaW5kZXgrKztcbiAgICBjb2xsZWN0TmFtZXNGb3JOYW1lZEltcG9ydCh0b2tlbnMsIGluZGV4LCBpbXBvcnRlZE5hbWVzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb2xsZWN0TmFtZXNGb3JOYW1lZEltcG9ydChcbiAgdG9rZW5zLFxuICBpbmRleCxcbiAgaW1wb3J0ZWROYW1lcyxcbikge1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIGlmICh0b2tlbnMubWF0Y2hlczFBdEluZGV4KGluZGV4LCB0dC5icmFjZVIpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qgc3BlY2lmaWVySW5mbyA9IGdldEltcG9ydEV4cG9ydFNwZWNpZmllckluZm8odG9rZW5zLCBpbmRleCk7XG4gICAgaW5kZXggPSBzcGVjaWZpZXJJbmZvLmVuZEluZGV4O1xuICAgIGlmICghc3BlY2lmaWVySW5mby5pc1R5cGUpIHtcbiAgICAgIGltcG9ydGVkTmFtZXMuYWRkKHNwZWNpZmllckluZm8ucmlnaHROYW1lKTtcbiAgICB9XG5cbiAgICBpZiAodG9rZW5zLm1hdGNoZXMyQXRJbmRleChpbmRleCwgdHQuY29tbWEsIHR0LmJyYWNlUikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKHRva2Vucy5tYXRjaGVzMUF0SW5kZXgoaW5kZXgsIHR0LmJyYWNlUikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKHRva2Vucy5tYXRjaGVzMUF0SW5kZXgoaW5kZXgsIHR0LmNvbW1hKSkge1xuICAgICAgaW5kZXgrKztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHRva2VuOiAke0pTT04uc3RyaW5naWZ5KHRva2Vucy50b2tlbnNbaW5kZXhdKX1gKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/getTSImportedNames.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isAsyncOperation.js":
/*!****************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/isAsyncOperation.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAsyncOperation; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n\n\n\n/**\n * Determine whether this optional chain or nullish coalescing operation has any await statements in\n * it. If so, we'll need to transpile to an async operation.\n *\n * We compute this by walking the length of the operation and returning true if we see an await\n * keyword used as a real await (rather than an object key or property access). Nested optional\n * chain/nullish operations need to be tracked but don't silence await, but a nested async function\n * (or any other nested scope) will make the await not count.\n */\nfunction isAsyncOperation(tokens) {\n  let index = tokens.currentIndex();\n  let depth = 0;\n  const startToken = tokens.currentToken();\n  do {\n    const token = tokens.tokens[index];\n    if (token.isOptionalChainStart) {\n      depth++;\n    }\n    if (token.isOptionalChainEnd) {\n      depth--;\n    }\n    depth += token.numNullishCoalesceStarts;\n    depth -= token.numNullishCoalesceEnds;\n\n    if (\n      token.contextualKeyword === _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._await &&\n      token.identifierRole == null &&\n      token.scopeDepth === startToken.scopeDepth\n    ) {\n      return true;\n    }\n    index += 1;\n  } while (depth > 0 && index < tokens.tokens.length);\n  return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvaXNBc3luY09wZXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErRDs7O0FBRy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MseUVBQWlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvaXNBc3luY09wZXJhdGlvbi5qcz84MTkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29udGV4dHVhbEtleXdvcmR9IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyL2tleXdvcmRzXCI7XG5cblxuLyoqXG4gKiBEZXRlcm1pbmUgd2hldGhlciB0aGlzIG9wdGlvbmFsIGNoYWluIG9yIG51bGxpc2ggY29hbGVzY2luZyBvcGVyYXRpb24gaGFzIGFueSBhd2FpdCBzdGF0ZW1lbnRzIGluXG4gKiBpdC4gSWYgc28sIHdlJ2xsIG5lZWQgdG8gdHJhbnNwaWxlIHRvIGFuIGFzeW5jIG9wZXJhdGlvbi5cbiAqXG4gKiBXZSBjb21wdXRlIHRoaXMgYnkgd2Fsa2luZyB0aGUgbGVuZ3RoIG9mIHRoZSBvcGVyYXRpb24gYW5kIHJldHVybmluZyB0cnVlIGlmIHdlIHNlZSBhbiBhd2FpdFxuICoga2V5d29yZCB1c2VkIGFzIGEgcmVhbCBhd2FpdCAocmF0aGVyIHRoYW4gYW4gb2JqZWN0IGtleSBvciBwcm9wZXJ0eSBhY2Nlc3MpLiBOZXN0ZWQgb3B0aW9uYWxcbiAqIGNoYWluL251bGxpc2ggb3BlcmF0aW9ucyBuZWVkIHRvIGJlIHRyYWNrZWQgYnV0IGRvbid0IHNpbGVuY2UgYXdhaXQsIGJ1dCBhIG5lc3RlZCBhc3luYyBmdW5jdGlvblxuICogKG9yIGFueSBvdGhlciBuZXN0ZWQgc2NvcGUpIHdpbGwgbWFrZSB0aGUgYXdhaXQgbm90IGNvdW50LlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0FzeW5jT3BlcmF0aW9uKHRva2Vucykge1xuICBsZXQgaW5kZXggPSB0b2tlbnMuY3VycmVudEluZGV4KCk7XG4gIGxldCBkZXB0aCA9IDA7XG4gIGNvbnN0IHN0YXJ0VG9rZW4gPSB0b2tlbnMuY3VycmVudFRva2VuKCk7XG4gIGRvIHtcbiAgICBjb25zdCB0b2tlbiA9IHRva2Vucy50b2tlbnNbaW5kZXhdO1xuICAgIGlmICh0b2tlbi5pc09wdGlvbmFsQ2hhaW5TdGFydCkge1xuICAgICAgZGVwdGgrKztcbiAgICB9XG4gICAgaWYgKHRva2VuLmlzT3B0aW9uYWxDaGFpbkVuZCkge1xuICAgICAgZGVwdGgtLTtcbiAgICB9XG4gICAgZGVwdGggKz0gdG9rZW4ubnVtTnVsbGlzaENvYWxlc2NlU3RhcnRzO1xuICAgIGRlcHRoIC09IHRva2VuLm51bU51bGxpc2hDb2FsZXNjZUVuZHM7XG5cbiAgICBpZiAoXG4gICAgICB0b2tlbi5jb250ZXh0dWFsS2V5d29yZCA9PT0gQ29udGV4dHVhbEtleXdvcmQuX2F3YWl0ICYmXG4gICAgICB0b2tlbi5pZGVudGlmaWVyUm9sZSA9PSBudWxsICYmXG4gICAgICB0b2tlbi5zY29wZURlcHRoID09PSBzdGFydFRva2VuLnNjb3BlRGVwdGhcbiAgICApIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpbmRleCArPSAxO1xuICB9IHdoaWxlIChkZXB0aCA+IDAgJiYgaW5kZXggPCB0b2tlbnMudG9rZW5zLmxlbmd0aCk7XG4gIHJldHVybiBmYWxzZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isAsyncOperation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isExportFrom.js":
/*!************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/isExportFrom.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isExportFrom; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n/**\n * Starting at `export {`, look ahead and return `true` if this is an\n * `export {...} from` statement and `false` if this is a plain multi-export.\n */\nfunction isExportFrom(tokens) {\n  let closeBraceIndex = tokens.currentIndex();\n  while (!tokens.matches1AtIndex(closeBraceIndex, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceR)) {\n    closeBraceIndex++;\n  }\n  return (\n    tokens.matchesContextualAtIndex(closeBraceIndex + 1, _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._from) &&\n    tokens.matches1AtIndex(closeBraceIndex + 2, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.string)\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvaXNFeHBvcnRGcm9tLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErRDtBQUNMOzs7QUFHMUQ7QUFDQSx3QkFBd0I7QUFDeEIsWUFBWSxLQUFLO0FBQ2pCO0FBQ2U7QUFDZjtBQUNBLGtEQUFrRCw4REFBRTtBQUNwRDtBQUNBO0FBQ0E7QUFDQSx5REFBeUQseUVBQWlCO0FBQzFFLGdEQUFnRCw4REFBRTtBQUNsRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvaXNFeHBvcnRGcm9tLmpzPzFhZWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb250ZXh0dWFsS2V5d29yZH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIva2V5d29yZHNcIjtcbmltcG9ydCB7VG9rZW5UeXBlIGFzIHR0fSBmcm9tIFwiLi4vcGFyc2VyL3Rva2VuaXplci90eXBlc1wiO1xuXG5cbi8qKlxuICogU3RhcnRpbmcgYXQgYGV4cG9ydCB7YCwgbG9vayBhaGVhZCBhbmQgcmV0dXJuIGB0cnVlYCBpZiB0aGlzIGlzIGFuXG4gKiBgZXhwb3J0IHsuLi59IGZyb21gIHN0YXRlbWVudCBhbmQgYGZhbHNlYCBpZiB0aGlzIGlzIGEgcGxhaW4gbXVsdGktZXhwb3J0LlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0V4cG9ydEZyb20odG9rZW5zKSB7XG4gIGxldCBjbG9zZUJyYWNlSW5kZXggPSB0b2tlbnMuY3VycmVudEluZGV4KCk7XG4gIHdoaWxlICghdG9rZW5zLm1hdGNoZXMxQXRJbmRleChjbG9zZUJyYWNlSW5kZXgsIHR0LmJyYWNlUikpIHtcbiAgICBjbG9zZUJyYWNlSW5kZXgrKztcbiAgfVxuICByZXR1cm4gKFxuICAgIHRva2Vucy5tYXRjaGVzQ29udGV4dHVhbEF0SW5kZXgoY2xvc2VCcmFjZUluZGV4ICsgMSwgQ29udGV4dHVhbEtleXdvcmQuX2Zyb20pICYmXG4gICAgdG9rZW5zLm1hdGNoZXMxQXRJbmRleChjbG9zZUJyYWNlSW5kZXggKyAyLCB0dC5zdHJpbmcpXG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isExportFrom.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isIdentifier.js":
/*!************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/isIdentifier.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isIdentifier; }\n/* harmony export */ });\n/* harmony import */ var _parser_util_identifier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/util/identifier */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/util/identifier.js\");\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar\n// Hard-code a list of reserved words rather than trying to use keywords or contextual keywords\n// from the parser, since currently there are various exceptions, like `package` being reserved\n// but unused and various contextual keywords being reserved. Note that we assume that all code\n// compiled by Sucrase is in a module, so strict mode words and await are all considered reserved\n// here.\nconst RESERVED_WORDS = new Set([\n  // Reserved keywords as of ECMAScript 2015\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"else\",\n  \"export\",\n  \"extends\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"import\",\n  \"in\",\n  \"instanceof\",\n  \"new\",\n  \"return\",\n  \"super\",\n  \"switch\",\n  \"this\",\n  \"throw\",\n  \"try\",\n  \"typeof\",\n  \"var\",\n  \"void\",\n  \"while\",\n  \"with\",\n  \"yield\",\n  // Future reserved keywords\n  \"enum\",\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"await\",\n  // Literals that cannot be used as identifiers\n  \"false\",\n  \"null\",\n  \"true\",\n]);\n\n/**\n * Determine if the given name is a legal variable name.\n *\n * This is needed when transforming TypeScript enums; if an enum key is a valid\n * variable name, it might be referenced later in the enum, so we need to\n * declare a variable.\n */\nfunction isIdentifier(name) {\n  if (name.length === 0) {\n    return false;\n  }\n  if (!_parser_util_identifier__WEBPACK_IMPORTED_MODULE_0__.IS_IDENTIFIER_START[name.charCodeAt(0)]) {\n    return false;\n  }\n  for (let i = 1; i < name.length; i++) {\n    if (!_parser_util_identifier__WEBPACK_IMPORTED_MODULE_0__.IS_IDENTIFIER_CHAR[name.charCodeAt(i)]) {\n      return false;\n    }\n  }\n  return !RESERVED_WORDS.has(name);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvaXNJZGVudGlmaWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtGOztBQUVsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3REO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsT0FBTyx3RUFBbUI7QUFDMUI7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkMsU0FBUyx1RUFBa0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS91dGlsL2lzSWRlbnRpZmllci5qcz84ZmRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SVNfSURFTlRJRklFUl9DSEFSLCBJU19JREVOVElGSUVSX1NUQVJUfSBmcm9tIFwiLi4vcGFyc2VyL3V0aWwvaWRlbnRpZmllclwiO1xuXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9MZXhpY2FsX2dyYW1tYXJcbi8vIEhhcmQtY29kZSBhIGxpc3Qgb2YgcmVzZXJ2ZWQgd29yZHMgcmF0aGVyIHRoYW4gdHJ5aW5nIHRvIHVzZSBrZXl3b3JkcyBvciBjb250ZXh0dWFsIGtleXdvcmRzXG4vLyBmcm9tIHRoZSBwYXJzZXIsIHNpbmNlIGN1cnJlbnRseSB0aGVyZSBhcmUgdmFyaW91cyBleGNlcHRpb25zLCBsaWtlIGBwYWNrYWdlYCBiZWluZyByZXNlcnZlZFxuLy8gYnV0IHVudXNlZCBhbmQgdmFyaW91cyBjb250ZXh0dWFsIGtleXdvcmRzIGJlaW5nIHJlc2VydmVkLiBOb3RlIHRoYXQgd2UgYXNzdW1lIHRoYXQgYWxsIGNvZGVcbi8vIGNvbXBpbGVkIGJ5IFN1Y3Jhc2UgaXMgaW4gYSBtb2R1bGUsIHNvIHN0cmljdCBtb2RlIHdvcmRzIGFuZCBhd2FpdCBhcmUgYWxsIGNvbnNpZGVyZWQgcmVzZXJ2ZWRcbi8vIGhlcmUuXG5jb25zdCBSRVNFUlZFRF9XT1JEUyA9IG5ldyBTZXQoW1xuICAvLyBSZXNlcnZlZCBrZXl3b3JkcyBhcyBvZiBFQ01BU2NyaXB0IDIwMTVcbiAgXCJicmVha1wiLFxuICBcImNhc2VcIixcbiAgXCJjYXRjaFwiLFxuICBcImNsYXNzXCIsXG4gIFwiY29uc3RcIixcbiAgXCJjb250aW51ZVwiLFxuICBcImRlYnVnZ2VyXCIsXG4gIFwiZGVmYXVsdFwiLFxuICBcImRlbGV0ZVwiLFxuICBcImRvXCIsXG4gIFwiZWxzZVwiLFxuICBcImV4cG9ydFwiLFxuICBcImV4dGVuZHNcIixcbiAgXCJmaW5hbGx5XCIsXG4gIFwiZm9yXCIsXG4gIFwiZnVuY3Rpb25cIixcbiAgXCJpZlwiLFxuICBcImltcG9ydFwiLFxuICBcImluXCIsXG4gIFwiaW5zdGFuY2VvZlwiLFxuICBcIm5ld1wiLFxuICBcInJldHVyblwiLFxuICBcInN1cGVyXCIsXG4gIFwic3dpdGNoXCIsXG4gIFwidGhpc1wiLFxuICBcInRocm93XCIsXG4gIFwidHJ5XCIsXG4gIFwidHlwZW9mXCIsXG4gIFwidmFyXCIsXG4gIFwidm9pZFwiLFxuICBcIndoaWxlXCIsXG4gIFwid2l0aFwiLFxuICBcInlpZWxkXCIsXG4gIC8vIEZ1dHVyZSByZXNlcnZlZCBrZXl3b3Jkc1xuICBcImVudW1cIixcbiAgXCJpbXBsZW1lbnRzXCIsXG4gIFwiaW50ZXJmYWNlXCIsXG4gIFwibGV0XCIsXG4gIFwicGFja2FnZVwiLFxuICBcInByaXZhdGVcIixcbiAgXCJwcm90ZWN0ZWRcIixcbiAgXCJwdWJsaWNcIixcbiAgXCJzdGF0aWNcIixcbiAgXCJhd2FpdFwiLFxuICAvLyBMaXRlcmFscyB0aGF0IGNhbm5vdCBiZSB1c2VkIGFzIGlkZW50aWZpZXJzXG4gIFwiZmFsc2VcIixcbiAgXCJudWxsXCIsXG4gIFwidHJ1ZVwiLFxuXSk7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHRoZSBnaXZlbiBuYW1lIGlzIGEgbGVnYWwgdmFyaWFibGUgbmFtZS5cbiAqXG4gKiBUaGlzIGlzIG5lZWRlZCB3aGVuIHRyYW5zZm9ybWluZyBUeXBlU2NyaXB0IGVudW1zOyBpZiBhbiBlbnVtIGtleSBpcyBhIHZhbGlkXG4gKiB2YXJpYWJsZSBuYW1lLCBpdCBtaWdodCBiZSByZWZlcmVuY2VkIGxhdGVyIGluIHRoZSBlbnVtLCBzbyB3ZSBuZWVkIHRvXG4gKiBkZWNsYXJlIGEgdmFyaWFibGUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzSWRlbnRpZmllcihuYW1lKSB7XG4gIGlmIChuYW1lLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoIUlTX0lERU5USUZJRVJfU1RBUlRbbmFtZS5jaGFyQ29kZUF0KDApXSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGxldCBpID0gMTsgaSA8IG5hbWUubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIUlTX0lERU5USUZJRVJfQ0hBUltuYW1lLmNoYXJDb2RlQXQoaSldKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiAhUkVTRVJWRURfV09SRFMuaGFzKG5hbWUpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/isIdentifier.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/removeMaybeImportAttributes.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/removeMaybeImportAttributes.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeMaybeImportAttributes: function() { return /* binding */ removeMaybeImportAttributes; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/keywords */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/keywords.js\");\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n/**\n * Starting at a potential `with` or (legacy) `assert` token, remove the import\n * attributes if they exist.\n */\nfunction removeMaybeImportAttributes(tokens) {\n  if (\n    tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType._with, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL) ||\n    (tokens.matches2(_parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.name, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_1__.TokenType.braceL) && tokens.matchesContextual(_parser_tokenizer_keywords__WEBPACK_IMPORTED_MODULE_0__.ContextualKeyword._assert))\n  ) {\n    // assert\n    tokens.removeToken();\n    // {\n    tokens.removeToken();\n    tokens.removeBalancedCode();\n    // }\n    tokens.removeToken();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvcmVtb3ZlTWF5YmVJbXBvcnRBdHRyaWJ1dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErRDtBQUNMOzs7QUFHMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0JBQW9CLDhEQUFFLFFBQVEsOERBQUU7QUFDaEMscUJBQXFCLDhEQUFFLE9BQU8sOERBQUUscUNBQXFDLHlFQUFpQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VjcmFzZS9kaXN0L2VzbS91dGlsL3JlbW92ZU1heWJlSW1wb3J0QXR0cmlidXRlcy5qcz83MmRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29udGV4dHVhbEtleXdvcmR9IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyL2tleXdvcmRzXCI7XG5pbXBvcnQge1Rva2VuVHlwZSBhcyB0dH0gZnJvbSBcIi4uL3BhcnNlci90b2tlbml6ZXIvdHlwZXNcIjtcblxuXG4vKipcbiAqIFN0YXJ0aW5nIGF0IGEgcG90ZW50aWFsIGB3aXRoYCBvciAobGVnYWN5KSBgYXNzZXJ0YCB0b2tlbiwgcmVtb3ZlIHRoZSBpbXBvcnRcbiAqIGF0dHJpYnV0ZXMgaWYgdGhleSBleGlzdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZU1heWJlSW1wb3J0QXR0cmlidXRlcyh0b2tlbnMpIHtcbiAgaWYgKFxuICAgIHRva2Vucy5tYXRjaGVzMih0dC5fd2l0aCwgdHQuYnJhY2VMKSB8fFxuICAgICh0b2tlbnMubWF0Y2hlczIodHQubmFtZSwgdHQuYnJhY2VMKSAmJiB0b2tlbnMubWF0Y2hlc0NvbnRleHR1YWwoQ29udGV4dHVhbEtleXdvcmQuX2Fzc2VydCkpXG4gICkge1xuICAgIC8vIGFzc2VydFxuICAgIHRva2Vucy5yZW1vdmVUb2tlbigpO1xuICAgIC8vIHtcbiAgICB0b2tlbnMucmVtb3ZlVG9rZW4oKTtcbiAgICB0b2tlbnMucmVtb3ZlQmFsYW5jZWRDb2RlKCk7XG4gICAgLy8gfVxuICAgIHRva2Vucy5yZW1vdmVUb2tlbigpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/removeMaybeImportAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sucrase/dist/esm/util/shouldElideDefaultExport.js":
/*!************************************************************************!*\
  !*** ./node_modules/sucrase/dist/esm/util/shouldElideDefaultExport.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ shouldElideDefaultExport; }\n/* harmony export */ });\n/* harmony import */ var _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/tokenizer/types */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/parser/tokenizer/types.js\");\n\n\n\n\n/**\n * Common method sharing code between CJS and ESM cases, since they're the same here.\n */\nfunction shouldElideDefaultExport(\n  isTypeScriptTransformEnabled,\n  keepUnusedImports,\n  tokens,\n  declarationInfo,\n) {\n  if (!isTypeScriptTransformEnabled || keepUnusedImports) {\n    return false;\n  }\n  const exportToken = tokens.currentToken();\n  if (exportToken.rhsEndIndex == null) {\n    throw new Error(\"Expected non-null rhsEndIndex on export token.\");\n  }\n  // The export must be of the form `export default a` or `export default a;`.\n  const numTokens = exportToken.rhsEndIndex - tokens.currentIndex();\n  if (\n    numTokens !== 3 &&\n    !(numTokens === 4 && tokens.matches1AtIndex(exportToken.rhsEndIndex - 1, _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.semi))\n  ) {\n    return false;\n  }\n  const identifierToken = tokens.tokenAtRelativeIndex(2);\n  if (identifierToken.type !== _parser_tokenizer_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.name) {\n    return false;\n  }\n  const exportedName = tokens.identifierNameForToken(identifierToken);\n  return (\n    declarationInfo.typeDeclarations.has(exportedName) &&\n    !declarationInfo.valueDeclarations.has(exportedName)\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvc2hvdWxkRWxpZGVEZWZhdWx0RXhwb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBEOzs7O0FBSTFEO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSw4REFBRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw4REFBRTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdWNyYXNlL2Rpc3QvZXNtL3V0aWwvc2hvdWxkRWxpZGVEZWZhdWx0RXhwb3J0LmpzP2ZkODMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUb2tlblR5cGUgYXMgdHR9IGZyb20gXCIuLi9wYXJzZXIvdG9rZW5pemVyL3R5cGVzXCI7XG5cblxuXG4vKipcbiAqIENvbW1vbiBtZXRob2Qgc2hhcmluZyBjb2RlIGJldHdlZW4gQ0pTIGFuZCBFU00gY2FzZXMsIHNpbmNlIHRoZXkncmUgdGhlIHNhbWUgaGVyZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hvdWxkRWxpZGVEZWZhdWx0RXhwb3J0KFxuICBpc1R5cGVTY3JpcHRUcmFuc2Zvcm1FbmFibGVkLFxuICBrZWVwVW51c2VkSW1wb3J0cyxcbiAgdG9rZW5zLFxuICBkZWNsYXJhdGlvbkluZm8sXG4pIHtcbiAgaWYgKCFpc1R5cGVTY3JpcHRUcmFuc2Zvcm1FbmFibGVkIHx8IGtlZXBVbnVzZWRJbXBvcnRzKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IGV4cG9ydFRva2VuID0gdG9rZW5zLmN1cnJlbnRUb2tlbigpO1xuICBpZiAoZXhwb3J0VG9rZW4ucmhzRW5kSW5kZXggPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIG5vbi1udWxsIHJoc0VuZEluZGV4IG9uIGV4cG9ydCB0b2tlbi5cIik7XG4gIH1cbiAgLy8gVGhlIGV4cG9ydCBtdXN0IGJlIG9mIHRoZSBmb3JtIGBleHBvcnQgZGVmYXVsdCBhYCBvciBgZXhwb3J0IGRlZmF1bHQgYTtgLlxuICBjb25zdCBudW1Ub2tlbnMgPSBleHBvcnRUb2tlbi5yaHNFbmRJbmRleCAtIHRva2Vucy5jdXJyZW50SW5kZXgoKTtcbiAgaWYgKFxuICAgIG51bVRva2VucyAhPT0gMyAmJlxuICAgICEobnVtVG9rZW5zID09PSA0ICYmIHRva2Vucy5tYXRjaGVzMUF0SW5kZXgoZXhwb3J0VG9rZW4ucmhzRW5kSW5kZXggLSAxLCB0dC5zZW1pKSlcbiAgKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IGlkZW50aWZpZXJUb2tlbiA9IHRva2Vucy50b2tlbkF0UmVsYXRpdmVJbmRleCgyKTtcbiAgaWYgKGlkZW50aWZpZXJUb2tlbi50eXBlICE9PSB0dC5uYW1lKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IGV4cG9ydGVkTmFtZSA9IHRva2Vucy5pZGVudGlmaWVyTmFtZUZvclRva2VuKGlkZW50aWZpZXJUb2tlbik7XG4gIHJldHVybiAoXG4gICAgZGVjbGFyYXRpb25JbmZvLnR5cGVEZWNsYXJhdGlvbnMuaGFzKGV4cG9ydGVkTmFtZSkgJiZcbiAgICAhZGVjbGFyYXRpb25JbmZvLnZhbHVlRGVjbGFyYXRpb25zLmhhcyhleHBvcnRlZE5hbWUpXG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sucrase/dist/esm/util/shouldElideDefaultExport.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ts-interface-checker/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/ts-interface-checker/dist/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Checker = exports.createCheckers = void 0;\nvar types_1 = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/ts-interface-checker/dist/types.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/ts-interface-checker/dist/util.js\");\n/**\n * Export functions used to define interfaces.\n */\nvar types_2 = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/ts-interface-checker/dist/types.js\");\nObject.defineProperty(exports, \"TArray\", ({ enumerable: true, get: function () { return types_2.TArray; } }));\nObject.defineProperty(exports, \"TEnumType\", ({ enumerable: true, get: function () { return types_2.TEnumType; } }));\nObject.defineProperty(exports, \"TEnumLiteral\", ({ enumerable: true, get: function () { return types_2.TEnumLiteral; } }));\nObject.defineProperty(exports, \"TFunc\", ({ enumerable: true, get: function () { return types_2.TFunc; } }));\nObject.defineProperty(exports, \"TIface\", ({ enumerable: true, get: function () { return types_2.TIface; } }));\nObject.defineProperty(exports, \"TLiteral\", ({ enumerable: true, get: function () { return types_2.TLiteral; } }));\nObject.defineProperty(exports, \"TName\", ({ enumerable: true, get: function () { return types_2.TName; } }));\nObject.defineProperty(exports, \"TOptional\", ({ enumerable: true, get: function () { return types_2.TOptional; } }));\nObject.defineProperty(exports, \"TParam\", ({ enumerable: true, get: function () { return types_2.TParam; } }));\nObject.defineProperty(exports, \"TParamList\", ({ enumerable: true, get: function () { return types_2.TParamList; } }));\nObject.defineProperty(exports, \"TProp\", ({ enumerable: true, get: function () { return types_2.TProp; } }));\nObject.defineProperty(exports, \"TTuple\", ({ enumerable: true, get: function () { return types_2.TTuple; } }));\nObject.defineProperty(exports, \"TType\", ({ enumerable: true, get: function () { return types_2.TType; } }));\nObject.defineProperty(exports, \"TUnion\", ({ enumerable: true, get: function () { return types_2.TUnion; } }));\nObject.defineProperty(exports, \"TIntersection\", ({ enumerable: true, get: function () { return types_2.TIntersection; } }));\nObject.defineProperty(exports, \"array\", ({ enumerable: true, get: function () { return types_2.array; } }));\nObject.defineProperty(exports, \"enumlit\", ({ enumerable: true, get: function () { return types_2.enumlit; } }));\nObject.defineProperty(exports, \"enumtype\", ({ enumerable: true, get: function () { return types_2.enumtype; } }));\nObject.defineProperty(exports, \"func\", ({ enumerable: true, get: function () { return types_2.func; } }));\nObject.defineProperty(exports, \"iface\", ({ enumerable: true, get: function () { return types_2.iface; } }));\nObject.defineProperty(exports, \"lit\", ({ enumerable: true, get: function () { return types_2.lit; } }));\nObject.defineProperty(exports, \"name\", ({ enumerable: true, get: function () { return types_2.name; } }));\nObject.defineProperty(exports, \"opt\", ({ enumerable: true, get: function () { return types_2.opt; } }));\nObject.defineProperty(exports, \"param\", ({ enumerable: true, get: function () { return types_2.param; } }));\nObject.defineProperty(exports, \"tuple\", ({ enumerable: true, get: function () { return types_2.tuple; } }));\nObject.defineProperty(exports, \"union\", ({ enumerable: true, get: function () { return types_2.union; } }));\nObject.defineProperty(exports, \"intersection\", ({ enumerable: true, get: function () { return types_2.intersection; } }));\nObject.defineProperty(exports, \"BasicType\", ({ enumerable: true, get: function () { return types_2.BasicType; } }));\nvar util_2 = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/ts-interface-checker/dist/util.js\");\nObject.defineProperty(exports, \"VError\", ({ enumerable: true, get: function () { return util_2.VError; } }));\n/**\n * Takes one of more type suites (e.g. a module generated by `ts-interface-builder`), and combines\n * them into a suite of interface checkers. If a type is used by name, that name should be present\n * among the passed-in type suites.\n *\n * The returned object maps type names to Checker objects.\n */\nfunction createCheckers() {\n    var typeSuite = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSuite[_i] = arguments[_i];\n    }\n    var fullSuite = Object.assign.apply(Object, __spreadArrays([{}, types_1.basicTypes], typeSuite));\n    var checkers = {};\n    for (var _a = 0, typeSuite_1 = typeSuite; _a < typeSuite_1.length; _a++) {\n        var suite_1 = typeSuite_1[_a];\n        for (var _b = 0, _c = Object.keys(suite_1); _b < _c.length; _b++) {\n            var name = _c[_b];\n            checkers[name] = new Checker(fullSuite, suite_1[name]);\n        }\n    }\n    return checkers;\n}\nexports.createCheckers = createCheckers;\n/**\n * Checker implements validation of objects, and also includes accessors to validate method calls.\n * Checkers should be created using `createCheckers()`.\n */\nvar Checker = /** @class */ (function () {\n    // Create checkers by using `createCheckers()` function.\n    function Checker(suite, ttype, _path) {\n        if (_path === void 0) { _path = 'value'; }\n        this.suite = suite;\n        this.ttype = ttype;\n        this._path = _path;\n        this.props = new Map();\n        if (ttype instanceof types_1.TIface) {\n            for (var _i = 0, _a = ttype.props; _i < _a.length; _i++) {\n                var p = _a[_i];\n                this.props.set(p.name, p.ttype);\n            }\n        }\n        this.checkerPlain = this.ttype.getChecker(suite, false);\n        this.checkerStrict = this.ttype.getChecker(suite, true);\n    }\n    /**\n     * Set the path to report in errors, instead of the default \"value\". (E.g. if the Checker is for\n     * a \"person\" interface, set path to \"person\" to report e.g. \"person.name is not a string\".)\n     */\n    Checker.prototype.setReportedPath = function (path) {\n        this._path = path;\n    };\n    /**\n     * Check that the given value satisfies this checker's type, or throw Error.\n     */\n    Checker.prototype.check = function (value) { return this._doCheck(this.checkerPlain, value); };\n    /**\n     * A fast check for whether or not the given value satisfies this Checker's type. This returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.test = function (value) {\n        return this.checkerPlain(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns an error object describing the errors if the given value does not satisfy this\n     * Checker's type, or null if it does.\n     */\n    Checker.prototype.validate = function (value) {\n        return this._doValidate(this.checkerPlain, value);\n    };\n    /**\n     * Check that the given value satisfies this checker's type strictly. This checks that objects\n     * and tuples have no extra members. Note that this prevents backward compatibility, so usually\n     * a plain check() is more appropriate.\n     */\n    Checker.prototype.strictCheck = function (value) { return this._doCheck(this.checkerStrict, value); };\n    /**\n     * A fast strict check for whether or not the given value satisfies this Checker's type. Returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.strictTest = function (value) {\n        return this.checkerStrict(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns an error object describing the errors if the given value does not satisfy this\n     * Checker's type strictly, or null if it does.\n     */\n    Checker.prototype.strictValidate = function (value) {\n        return this._doValidate(this.checkerStrict, value);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the type required for the given\n     * property of this interface.\n     */\n    Checker.prototype.getProp = function (prop) {\n        var ttype = this.props.get(prop);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + prop);\n        }\n        return new Checker(this.suite, ttype, this._path + \".\" + prop);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the argument-list required to call\n     * the given method of this interface. E.g. if this Checker is for the interface:\n     *    interface Foo {\n     *      find(s: string, pos?: number): number;\n     *    }\n     * Then methodArgs(\"find\").check(...) will succeed for [\"foo\"] and [\"foo\", 3], but not for [17].\n     */\n    Checker.prototype.methodArgs = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.paramList);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the return value of the given\n     * method of this interface.\n     */\n    Checker.prototype.methodResult = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.result);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its argument-list.\n     */\n    Checker.prototype.getArgs = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getArgs() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.paramList);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its result.\n     */\n    Checker.prototype.getResult = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getResult() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.result);\n    };\n    /**\n     * Return the type for which this is a checker.\n     */\n    Checker.prototype.getType = function () {\n        return this.ttype;\n    };\n    /**\n     * Actual implementation of check() and strictCheck().\n     */\n    Checker.prototype._doCheck = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (!checkerFunc(value, noopCtx)) {\n            var detailCtx = new util_1.DetailContext();\n            checkerFunc(value, detailCtx);\n            throw detailCtx.getError(this._path);\n        }\n    };\n    Checker.prototype._doValidate = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (checkerFunc(value, noopCtx)) {\n            return null;\n        }\n        var detailCtx = new util_1.DetailContext();\n        checkerFunc(value, detailCtx);\n        return detailCtx.getErrorDetail(this._path);\n    };\n    Checker.prototype._getMethod = function (methodName) {\n        var ttype = this.props.get(methodName);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + methodName);\n        }\n        if (!(ttype instanceof types_1.TFunc)) {\n            throw new Error(\"Property \" + methodName + \" is not a method\");\n        }\n        return ttype;\n    };\n    return Checker;\n}());\nexports.Checker = Checker;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ts-interface-checker/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ts-interface-checker/dist/types.js":
/*!*********************************************************!*\
  !*** ./node_modules/ts-interface-checker/dist/types.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n/**\n * This module defines nodes used to define types and validations for objects and interfaces.\n */\n// tslint:disable:no-shadowed-variable prefer-for-of\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.basicTypes = exports.BasicType = exports.TParamList = exports.TParam = exports.param = exports.TFunc = exports.func = exports.TProp = exports.TOptional = exports.opt = exports.TIface = exports.iface = exports.TEnumLiteral = exports.enumlit = exports.TEnumType = exports.enumtype = exports.TIntersection = exports.intersection = exports.TUnion = exports.union = exports.TTuple = exports.tuple = exports.TArray = exports.array = exports.TLiteral = exports.lit = exports.TName = exports.name = exports.TType = void 0;\nvar util_1 = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/ts-interface-checker/dist/util.js\");\n/** Node that represents a type. */\nvar TType = /** @class */ (function () {\n    function TType() {\n    }\n    return TType;\n}());\nexports.TType = TType;\n/** Parses a type spec into a TType node. */\nfunction parseSpec(typeSpec) {\n    return typeof typeSpec === \"string\" ? name(typeSpec) : typeSpec;\n}\nfunction getNamedType(suite, name) {\n    var ttype = suite[name];\n    if (!ttype) {\n        throw new Error(\"Unknown type \" + name);\n    }\n    return ttype;\n}\n/**\n * Defines a type name, either built-in, or defined in this suite. It can typically be included in\n * the specs as just a plain string.\n */\nfunction name(value) { return new TName(value); }\nexports.name = name;\nvar TName = /** @class */ (function (_super) {\n    __extends(TName, _super);\n    function TName(name) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this._failMsg = \"is not a \" + name;\n        return _this;\n    }\n    TName.prototype.getChecker = function (suite, strict, allowedProps) {\n        var _this = this;\n        var ttype = getNamedType(suite, this.name);\n        var checker = ttype.getChecker(suite, strict, allowedProps);\n        if (ttype instanceof BasicType || ttype instanceof TName) {\n            return checker;\n        }\n        // For complex types, add an additional \"is not a <Type>\" message on failure.\n        return function (value, ctx) { return checker(value, ctx) ? true : ctx.fail(null, _this._failMsg, 0); };\n    };\n    return TName;\n}(TType));\nexports.TName = TName;\n/**\n * Defines a literal value, e.g. lit('hello') or lit(123).\n */\nfunction lit(value) { return new TLiteral(value); }\nexports.lit = lit;\nvar TLiteral = /** @class */ (function (_super) {\n    __extends(TLiteral, _super);\n    function TLiteral(value) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.name = JSON.stringify(value);\n        _this._failMsg = \"is not \" + _this.name;\n        return _this;\n    }\n    TLiteral.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        return function (value, ctx) { return (value === _this.value) ? true : ctx.fail(null, _this._failMsg, -1); };\n    };\n    return TLiteral;\n}(TType));\nexports.TLiteral = TLiteral;\n/**\n * Defines an array type, e.g. array('number').\n */\nfunction array(typeSpec) { return new TArray(parseSpec(typeSpec)); }\nexports.array = array;\nvar TArray = /** @class */ (function (_super) {\n    __extends(TArray, _super);\n    function TArray(ttype) {\n        var _this = _super.call(this) || this;\n        _this.ttype = ttype;\n        return _this;\n    }\n    TArray.prototype.getChecker = function (suite, strict) {\n        var itemChecker = this.ttype.getChecker(suite, strict);\n        return function (value, ctx) {\n            if (!Array.isArray(value)) {\n                return ctx.fail(null, \"is not an array\", 0);\n            }\n            for (var i = 0; i < value.length; i++) {\n                var ok = itemChecker(value[i], ctx);\n                if (!ok) {\n                    return ctx.fail(i, null, 1);\n                }\n            }\n            return true;\n        };\n    };\n    return TArray;\n}(TType));\nexports.TArray = TArray;\n/**\n * Defines a tuple type, e.g. tuple('string', 'number').\n */\nfunction tuple() {\n    var typeSpec = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSpec[_i] = arguments[_i];\n    }\n    return new TTuple(typeSpec.map(function (t) { return parseSpec(t); }));\n}\nexports.tuple = tuple;\nvar TTuple = /** @class */ (function (_super) {\n    __extends(TTuple, _super);\n    function TTuple(ttypes) {\n        var _this = _super.call(this) || this;\n        _this.ttypes = ttypes;\n        return _this;\n    }\n    TTuple.prototype.getChecker = function (suite, strict) {\n        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict); });\n        var checker = function (value, ctx) {\n            if (!Array.isArray(value)) {\n                return ctx.fail(null, \"is not an array\", 0);\n            }\n            for (var i = 0; i < itemCheckers.length; i++) {\n                var ok = itemCheckers[i](value[i], ctx);\n                if (!ok) {\n                    return ctx.fail(i, null, 1);\n                }\n            }\n            return true;\n        };\n        if (!strict) {\n            return checker;\n        }\n        return function (value, ctx) {\n            if (!checker(value, ctx)) {\n                return false;\n            }\n            return value.length <= itemCheckers.length ? true :\n                ctx.fail(itemCheckers.length, \"is extraneous\", 2);\n        };\n    };\n    return TTuple;\n}(TType));\nexports.TTuple = TTuple;\n/**\n * Defines a union type, e.g. union('number', 'null').\n */\nfunction union() {\n    var typeSpec = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSpec[_i] = arguments[_i];\n    }\n    return new TUnion(typeSpec.map(function (t) { return parseSpec(t); }));\n}\nexports.union = union;\nvar TUnion = /** @class */ (function (_super) {\n    __extends(TUnion, _super);\n    function TUnion(ttypes) {\n        var _this = _super.call(this) || this;\n        _this.ttypes = ttypes;\n        var names = ttypes.map(function (t) { return t instanceof TName || t instanceof TLiteral ? t.name : null; })\n            .filter(function (n) { return n; });\n        var otherTypes = ttypes.length - names.length;\n        if (names.length) {\n            if (otherTypes > 0) {\n                names.push(otherTypes + \" more\");\n            }\n            _this._failMsg = \"is none of \" + names.join(\", \");\n        }\n        else {\n            _this._failMsg = \"is none of \" + otherTypes + \" types\";\n        }\n        return _this;\n    }\n    TUnion.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict); });\n        return function (value, ctx) {\n            var ur = ctx.unionResolver();\n            for (var i = 0; i < itemCheckers.length; i++) {\n                var ok = itemCheckers[i](value, ur.createContext());\n                if (ok) {\n                    return true;\n                }\n            }\n            ctx.resolveUnion(ur);\n            return ctx.fail(null, _this._failMsg, 0);\n        };\n    };\n    return TUnion;\n}(TType));\nexports.TUnion = TUnion;\n/**\n * Defines an intersection type, e.g. intersection('number', 'null').\n */\nfunction intersection() {\n    var typeSpec = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSpec[_i] = arguments[_i];\n    }\n    return new TIntersection(typeSpec.map(function (t) { return parseSpec(t); }));\n}\nexports.intersection = intersection;\nvar TIntersection = /** @class */ (function (_super) {\n    __extends(TIntersection, _super);\n    function TIntersection(ttypes) {\n        var _this = _super.call(this) || this;\n        _this.ttypes = ttypes;\n        return _this;\n    }\n    TIntersection.prototype.getChecker = function (suite, strict) {\n        var allowedProps = new Set();\n        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict, allowedProps); });\n        return function (value, ctx) {\n            var ok = itemCheckers.every(function (checker) { return checker(value, ctx); });\n            if (ok) {\n                return true;\n            }\n            return ctx.fail(null, null, 0);\n        };\n    };\n    return TIntersection;\n}(TType));\nexports.TIntersection = TIntersection;\n/**\n * Defines an enum type, e.g. enum({'A': 1, 'B': 2}).\n */\nfunction enumtype(values) {\n    return new TEnumType(values);\n}\nexports.enumtype = enumtype;\nvar TEnumType = /** @class */ (function (_super) {\n    __extends(TEnumType, _super);\n    function TEnumType(members) {\n        var _this = _super.call(this) || this;\n        _this.members = members;\n        _this.validValues = new Set();\n        _this._failMsg = \"is not a valid enum value\";\n        _this.validValues = new Set(Object.keys(members).map(function (name) { return members[name]; }));\n        return _this;\n    }\n    TEnumType.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        return function (value, ctx) {\n            return (_this.validValues.has(value) ? true : ctx.fail(null, _this._failMsg, 0));\n        };\n    };\n    return TEnumType;\n}(TType));\nexports.TEnumType = TEnumType;\n/**\n * Defines a literal enum value, such as Direction.Up, specified as enumlit(\"Direction\", \"Up\").\n */\nfunction enumlit(name, prop) {\n    return new TEnumLiteral(name, prop);\n}\nexports.enumlit = enumlit;\nvar TEnumLiteral = /** @class */ (function (_super) {\n    __extends(TEnumLiteral, _super);\n    function TEnumLiteral(enumName, prop) {\n        var _this = _super.call(this) || this;\n        _this.enumName = enumName;\n        _this.prop = prop;\n        _this._failMsg = \"is not \" + enumName + \".\" + prop;\n        return _this;\n    }\n    TEnumLiteral.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        var ttype = getNamedType(suite, this.enumName);\n        if (!(ttype instanceof TEnumType)) {\n            throw new Error(\"Type \" + this.enumName + \" used in enumlit is not an enum type\");\n        }\n        var val = ttype.members[this.prop];\n        if (!ttype.members.hasOwnProperty(this.prop)) {\n            throw new Error(\"Unknown value \" + this.enumName + \".\" + this.prop + \" used in enumlit\");\n        }\n        return function (value, ctx) { return (value === val) ? true : ctx.fail(null, _this._failMsg, -1); };\n    };\n    return TEnumLiteral;\n}(TType));\nexports.TEnumLiteral = TEnumLiteral;\nfunction makeIfaceProps(props) {\n    return Object.keys(props).map(function (name) { return makeIfaceProp(name, props[name]); });\n}\nfunction makeIfaceProp(name, prop) {\n    return prop instanceof TOptional ?\n        new TProp(name, prop.ttype, true) :\n        new TProp(name, parseSpec(prop), false);\n}\n/**\n * Defines an interface. The first argument is an array of interfaces that it extends, and the\n * second is an array of properties.\n */\nfunction iface(bases, props) {\n    return new TIface(bases, makeIfaceProps(props));\n}\nexports.iface = iface;\nvar TIface = /** @class */ (function (_super) {\n    __extends(TIface, _super);\n    function TIface(bases, props) {\n        var _this = _super.call(this) || this;\n        _this.bases = bases;\n        _this.props = props;\n        _this.propSet = new Set(props.map(function (p) { return p.name; }));\n        return _this;\n    }\n    TIface.prototype.getChecker = function (suite, strict, allowedProps) {\n        var _this = this;\n        var baseCheckers = this.bases.map(function (b) { return getNamedType(suite, b).getChecker(suite, strict); });\n        var propCheckers = this.props.map(function (prop) { return prop.ttype.getChecker(suite, strict); });\n        var testCtx = new util_1.NoopContext();\n        // Consider a prop required if it's not optional AND does not allow for undefined as a value.\n        var isPropRequired = this.props.map(function (prop, i) {\n            return !prop.isOpt && !propCheckers[i](undefined, testCtx);\n        });\n        var checker = function (value, ctx) {\n            if (typeof value !== \"object\" || value === null) {\n                return ctx.fail(null, \"is not an object\", 0);\n            }\n            for (var i = 0; i < baseCheckers.length; i++) {\n                if (!baseCheckers[i](value, ctx)) {\n                    return false;\n                }\n            }\n            for (var i = 0; i < propCheckers.length; i++) {\n                var name_1 = _this.props[i].name;\n                var v = value[name_1];\n                if (v === undefined) {\n                    if (isPropRequired[i]) {\n                        return ctx.fail(name_1, \"is missing\", 1);\n                    }\n                }\n                else {\n                    var ok = propCheckers[i](v, ctx);\n                    if (!ok) {\n                        return ctx.fail(name_1, null, 1);\n                    }\n                }\n            }\n            return true;\n        };\n        if (!strict) {\n            return checker;\n        }\n        var propSet = this.propSet;\n        if (allowedProps) {\n            this.propSet.forEach(function (prop) { return allowedProps.add(prop); });\n            propSet = allowedProps;\n        }\n        // In strict mode, check also for unknown enumerable properties.\n        return function (value, ctx) {\n            if (!checker(value, ctx)) {\n                return false;\n            }\n            for (var prop in value) {\n                if (!propSet.has(prop)) {\n                    return ctx.fail(prop, \"is extraneous\", 2);\n                }\n            }\n            return true;\n        };\n    };\n    return TIface;\n}(TType));\nexports.TIface = TIface;\n/**\n * Defines an optional property on an interface.\n */\nfunction opt(typeSpec) { return new TOptional(parseSpec(typeSpec)); }\nexports.opt = opt;\nvar TOptional = /** @class */ (function (_super) {\n    __extends(TOptional, _super);\n    function TOptional(ttype) {\n        var _this = _super.call(this) || this;\n        _this.ttype = ttype;\n        return _this;\n    }\n    TOptional.prototype.getChecker = function (suite, strict) {\n        var itemChecker = this.ttype.getChecker(suite, strict);\n        return function (value, ctx) {\n            return value === undefined || itemChecker(value, ctx);\n        };\n    };\n    return TOptional;\n}(TType));\nexports.TOptional = TOptional;\n/**\n * Defines a property in an interface.\n */\nvar TProp = /** @class */ (function () {\n    function TProp(name, ttype, isOpt) {\n        this.name = name;\n        this.ttype = ttype;\n        this.isOpt = isOpt;\n    }\n    return TProp;\n}());\nexports.TProp = TProp;\n/**\n * Defines a function. The first argument declares the function's return type, the rest declare\n * its parameters.\n */\nfunction func(resultSpec) {\n    var params = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        params[_i - 1] = arguments[_i];\n    }\n    return new TFunc(new TParamList(params), parseSpec(resultSpec));\n}\nexports.func = func;\nvar TFunc = /** @class */ (function (_super) {\n    __extends(TFunc, _super);\n    function TFunc(paramList, result) {\n        var _this = _super.call(this) || this;\n        _this.paramList = paramList;\n        _this.result = result;\n        return _this;\n    }\n    TFunc.prototype.getChecker = function (suite, strict) {\n        return function (value, ctx) {\n            return typeof value === \"function\" ? true : ctx.fail(null, \"is not a function\", 0);\n        };\n    };\n    return TFunc;\n}(TType));\nexports.TFunc = TFunc;\n/**\n * Defines a function parameter.\n */\nfunction param(name, typeSpec, isOpt) {\n    return new TParam(name, parseSpec(typeSpec), Boolean(isOpt));\n}\nexports.param = param;\nvar TParam = /** @class */ (function () {\n    function TParam(name, ttype, isOpt) {\n        this.name = name;\n        this.ttype = ttype;\n        this.isOpt = isOpt;\n    }\n    return TParam;\n}());\nexports.TParam = TParam;\n/**\n * Defines a function parameter list.\n */\nvar TParamList = /** @class */ (function (_super) {\n    __extends(TParamList, _super);\n    function TParamList(params) {\n        var _this = _super.call(this) || this;\n        _this.params = params;\n        return _this;\n    }\n    TParamList.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        var itemCheckers = this.params.map(function (t) { return t.ttype.getChecker(suite, strict); });\n        var testCtx = new util_1.NoopContext();\n        var isParamRequired = this.params.map(function (param, i) {\n            return !param.isOpt && !itemCheckers[i](undefined, testCtx);\n        });\n        var checker = function (value, ctx) {\n            if (!Array.isArray(value)) {\n                return ctx.fail(null, \"is not an array\", 0);\n            }\n            for (var i = 0; i < itemCheckers.length; i++) {\n                var p = _this.params[i];\n                if (value[i] === undefined) {\n                    if (isParamRequired[i]) {\n                        return ctx.fail(p.name, \"is missing\", 1);\n                    }\n                }\n                else {\n                    var ok = itemCheckers[i](value[i], ctx);\n                    if (!ok) {\n                        return ctx.fail(p.name, null, 1);\n                    }\n                }\n            }\n            return true;\n        };\n        if (!strict) {\n            return checker;\n        }\n        return function (value, ctx) {\n            if (!checker(value, ctx)) {\n                return false;\n            }\n            return value.length <= itemCheckers.length ? true :\n                ctx.fail(itemCheckers.length, \"is extraneous\", 2);\n        };\n    };\n    return TParamList;\n}(TType));\nexports.TParamList = TParamList;\n/**\n * Single TType implementation for all basic built-in types.\n */\nvar BasicType = /** @class */ (function (_super) {\n    __extends(BasicType, _super);\n    function BasicType(validator, message) {\n        var _this = _super.call(this) || this;\n        _this.validator = validator;\n        _this.message = message;\n        return _this;\n    }\n    BasicType.prototype.getChecker = function (suite, strict) {\n        var _this = this;\n        return function (value, ctx) { return _this.validator(value) ? true : ctx.fail(null, _this.message, 0); };\n    };\n    return BasicType;\n}(TType));\nexports.BasicType = BasicType;\n/**\n * Defines the suite of basic types.\n */\nexports.basicTypes = {\n    any: new BasicType(function (v) { return true; }, \"is invalid\"),\n    number: new BasicType(function (v) { return (typeof v === \"number\"); }, \"is not a number\"),\n    object: new BasicType(function (v) { return (typeof v === \"object\" && v); }, \"is not an object\"),\n    boolean: new BasicType(function (v) { return (typeof v === \"boolean\"); }, \"is not a boolean\"),\n    string: new BasicType(function (v) { return (typeof v === \"string\"); }, \"is not a string\"),\n    symbol: new BasicType(function (v) { return (typeof v === \"symbol\"); }, \"is not a symbol\"),\n    void: new BasicType(function (v) { return (v == null); }, \"is not void\"),\n    undefined: new BasicType(function (v) { return (v === undefined); }, \"is not undefined\"),\n    null: new BasicType(function (v) { return (v === null); }, \"is not null\"),\n    never: new BasicType(function (v) { return false; }, \"is unexpected\"),\n    Date: new BasicType(getIsNativeChecker(\"[object Date]\"), \"is not a Date\"),\n    RegExp: new BasicType(getIsNativeChecker(\"[object RegExp]\"), \"is not a RegExp\"),\n};\n// This approach for checking native object types mirrors that of lodash. Its advantage over\n// `isinstance` is that it can still return true for native objects created in different JS\n// execution environments.\nvar nativeToString = Object.prototype.toString;\nfunction getIsNativeChecker(tag) {\n    return function (v) { return typeof v === \"object\" && v && nativeToString.call(v) === tag; };\n}\nif (typeof Buffer !== \"undefined\") {\n    exports.basicTypes.Buffer = new BasicType(function (v) { return Buffer.isBuffer(v); }, \"is not a Buffer\");\n}\nvar _loop_1 = function (array_1) {\n    exports.basicTypes[array_1.name] = new BasicType(function (v) { return (v instanceof array_1); }, \"is not a \" + array_1.name);\n};\n// Support typed arrays of various flavors\nfor (var _i = 0, _a = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,\n    Int32Array, Uint32Array, Float32Array, Float64Array, ArrayBuffer]; _i < _a.length; _i++) {\n    var array_1 = _a[_i];\n    _loop_1(array_1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ts-interface-checker/dist/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ts-interface-checker/dist/util.js":
/*!********************************************************!*\
  !*** ./node_modules/ts-interface-checker/dist/util.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DetailContext = exports.NoopContext = exports.VError = void 0;\n/**\n * Error thrown by validation. Besides an informative message, it includes the path to the\n * property which triggered the failure.\n */\nvar VError = /** @class */ (function (_super) {\n    __extends(VError, _super);\n    function VError(path, message) {\n        var _this = _super.call(this, message) || this;\n        _this.path = path;\n        // See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work for info about this workaround.\n        Object.setPrototypeOf(_this, VError.prototype);\n        return _this;\n    }\n    return VError;\n}(Error));\nexports.VError = VError;\n/**\n * Fast implementation of IContext used for first-pass validation. If that fails, we can validate\n * using DetailContext to collect error messages. That's faster for the common case when messages\n * normally pass validation.\n */\nvar NoopContext = /** @class */ (function () {\n    function NoopContext() {\n    }\n    NoopContext.prototype.fail = function (relPath, message, score) {\n        return false;\n    };\n    NoopContext.prototype.unionResolver = function () { return this; };\n    NoopContext.prototype.createContext = function () { return this; };\n    NoopContext.prototype.resolveUnion = function (ur) { };\n    return NoopContext;\n}());\nexports.NoopContext = NoopContext;\n/**\n * Complete implementation of IContext that collects meaningfull errors.\n */\nvar DetailContext = /** @class */ (function () {\n    function DetailContext() {\n        // Stack of property names and associated messages for reporting helpful error messages.\n        this._propNames = [\"\"];\n        this._messages = [null];\n        // Score is used to choose the best union member whose DetailContext to use for reporting.\n        // Higher score means better match (or rather less severe mismatch).\n        this._score = 0;\n    }\n    DetailContext.prototype.fail = function (relPath, message, score) {\n        this._propNames.push(relPath);\n        this._messages.push(message);\n        this._score += score;\n        return false;\n    };\n    DetailContext.prototype.unionResolver = function () {\n        return new DetailUnionResolver();\n    };\n    DetailContext.prototype.resolveUnion = function (unionResolver) {\n        var _a, _b;\n        var u = unionResolver;\n        var best = null;\n        for (var _i = 0, _c = u.contexts; _i < _c.length; _i++) {\n            var ctx = _c[_i];\n            if (!best || ctx._score >= best._score) {\n                best = ctx;\n            }\n        }\n        if (best && best._score > 0) {\n            (_a = this._propNames).push.apply(_a, best._propNames);\n            (_b = this._messages).push.apply(_b, best._messages);\n        }\n    };\n    DetailContext.prototype.getError = function (path) {\n        var msgParts = [];\n        for (var i = this._propNames.length - 1; i >= 0; i--) {\n            var p = this._propNames[i];\n            path += (typeof p === \"number\") ? \"[\" + p + \"]\" : (p ? \".\" + p : \"\");\n            var m = this._messages[i];\n            if (m) {\n                msgParts.push(path + \" \" + m);\n            }\n        }\n        return new VError(path, msgParts.join(\"; \"));\n    };\n    DetailContext.prototype.getErrorDetail = function (path) {\n        var details = [];\n        for (var i = this._propNames.length - 1; i >= 0; i--) {\n            var p = this._propNames[i];\n            path += (typeof p === \"number\") ? \"[\" + p + \"]\" : (p ? \".\" + p : \"\");\n            var message = this._messages[i];\n            if (message) {\n                details.push({ path: path, message: message });\n            }\n        }\n        var detail = null;\n        for (var i = details.length - 1; i >= 0; i--) {\n            if (detail) {\n                details[i].nested = [detail];\n            }\n            detail = details[i];\n        }\n        return detail;\n    };\n    return DetailContext;\n}());\nexports.DetailContext = DetailContext;\nvar DetailUnionResolver = /** @class */ (function () {\n    function DetailUnionResolver() {\n        this.contexts = [];\n    }\n    DetailUnionResolver.prototype.createContext = function () {\n        var ctx = new DetailContext();\n        this.contexts.push(ctx);\n        return ctx;\n    };\n    return DetailUnionResolver;\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ts-interface-checker/dist/util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-editable/dist/use-editable.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/use-editable/dist/use-editable.es.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEditable: function() { return /* binding */ useEditable; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar m = {\n  characterData: !0,\n  characterDataOldValue: !0,\n  childList: !0,\n  subtree: !0\n};\n\nfunction p(c) {\n  var a = window.getSelection();\n  a.empty();\n  a.addRange(c);\n}\n\nfunction q(c) {\n  return (c.metaKey || c.ctrlKey) && !c.altKey && \"KeyZ\" === c.code;\n}\n\nfunction r(c) {\n  c = [ c.firstChild ];\n  for (var b, a = \"\"; b = c.pop(); ) {\n    b.nodeType === Node.TEXT_NODE ? a += b.textContent : b.nodeType === Node.ELEMENT_NODE && \"BR\" === b.nodeName && (a += \"\\n\"), \n    b.nextSibling && c.push(b.nextSibling), b.firstChild && c.push(b.firstChild);\n  }\n  \"\\n\" !== a[a.length - 1] && (a += \"\\n\");\n  return a;\n}\n\nfunction w(c) {\n  var a = window.getSelection().getRangeAt(0), b = a.collapsed ? 0 : a.toString().length, f = document.createRange();\n  f.setStart(c, 0);\n  f.setEnd(a.startContainer, a.startOffset);\n  return {\n    position: c = (f = f.toString()).length,\n    extent: b,\n    content: f = (f = f.split(\"\\n\"))[a = f.length - 1],\n    line: a\n  };\n}\n\nfunction C(c, a, b) {\n  0 >= a && (a = 0);\n  if (!b || 0 > b) {\n    b = a;\n  }\n  var f = document.createRange();\n  c = [ c.firstChild ];\n  for (var d, l = 0, g = a; d = c[c.length - 1]; ) {\n    if (d.nodeType === Node.TEXT_NODE) {\n      if (l + d.textContent.length >= g) {\n        var h = g - l;\n        if (g === a) {\n          if (g = f, h < d.textContent.length ? g.setStart(d, h) : g.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          h < (b = d).textContent.length ? a.setEnd(b, h) : a.setEndAfter(b);\n          break;\n        }\n      }\n      l += d.textContent.length;\n    } else if (d.nodeType === Node.ELEMENT_NODE && \"BR\" === d.nodeName) {\n      if (l + 1 >= g) {\n        if (g === a) {\n          if (h = f, 0 < d.textContent.length ? h.setStart(d, 0) : h.setStartAfter(d), b !== a) {\n            g = b;\n            continue;\n          } else {\n            break;\n          }\n        } else {\n          a = f;\n          0 < (b = d).textContent.length ? a.setEnd(b, 0) : a.setEndAfter(b);\n          break;\n        }\n      }\n      l++;\n    }\n    c.pop();\n    d.nextSibling && c.push(d.nextSibling);\n    d.firstChild && c.push(d.firstChild);\n  }\n  return f;\n}\n\nfunction useEditable(c, a, b) {\n  function f(k) {\n    var b = c.current;\n    if (b) {\n      var a = w(b);\n      b = r(b);\n      a.position += k.length - b.length;\n      e.position = a;\n      e.onChange(k, a);\n    }\n  }\n  function l(k, b) {\n    var e = c.current;\n    if (e) {\n      var a = window.getSelection().getRangeAt(0);\n      a.deleteContents();\n      a.collapse();\n      var d = b || 0;\n      (a = C(e, b = (a = w(e)).position + (0 > d ? d : 0), a.position + (0 < d ? d : 0))).deleteContents();\n      k && a.insertNode(document.createTextNode(k));\n      p(C(e, b + k.length));\n    }\n  }\n  function d(b) {\n    var a = c.current;\n    if (a) {\n      a.focus();\n      var e = 0;\n      if (\"number\" == typeof b) {\n        e = b;\n      } else {\n        var k = r(a).split(\"\\n\").slice(0, b.row);\n        b.row && (e += k.join(\"\\n\").length + 1);\n        e += b.column;\n      }\n      p(C(a, e));\n    }\n  }\n  function g() {\n    var b = c.current;\n    return {\n      text: r(b),\n      position: b = w(b)\n    };\n  }\n  function h() {\n    e.observer.disconnect();\n  }\n  b || (b = {});\n  var D = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([])[1], e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((function() {\n    var e = {\n      observer: null,\n      disconnected: !1,\n      onChange: a,\n      queue: [],\n      history: [],\n      historyAt: -1,\n      position: null\n    };\n    \"undefined\" != typeof MutationObserver && (e.observer = new MutationObserver((function b(b) {\n      var a;\n      (a = e.queue).push.apply(a, b);\n    })));\n    return e;\n  }))[0], n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function() {\n    return {\n      update: f,\n      insert: l,\n      move: d,\n      getState: g\n    };\n  }), []);\n  if (\"object\" != typeof navigator) {\n    return n;\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((function() {\n    e.onChange = a;\n    if (c.current && !b.disabled) {\n      e.disconnected = !1;\n      e.observer.observe(c.current, m);\n      if (e.position) {\n        var k = e.position, d = k.position;\n        p(C(c.current, d, d + k.extent));\n      }\n      return h;\n    }\n  }));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((function() {\n    if (!c.current || b.disabled) {\n      e.history.length = 0, e.historyAt = -1;\n    } else {\n      var a = c.current;\n      if (e.position) {\n        a.focus();\n        var d = e.position, f = d.position;\n        p(C(a, f, f + d.extent));\n      }\n      var g = a.style.whiteSpace, h = a.contentEditable, l = !0;\n      try {\n        a.contentEditable = \"plaintext-only\";\n      } catch (u) {\n        a.contentEditable = \"true\", l = !1;\n      }\n      \"pre\" !== g && (a.style.whiteSpace = \"pre-wrap\");\n      b.indentation && (a.style.tabSize = a.style.MozTabSize = \"\" + b.indentation);\n      d = \"\" + \" \".repeat(b.indentation || 0);\n      var x, E = new RegExp(\"^(?:\" + d + \")\"), F = new RegExp(\"^(?:\" + d + \")*(\" + d + \")$\"), t = function(b) {\n        if (c.current && e.position) {\n          var u = r(a), d = w(a), f = (new Date).valueOf(), g = e.history[e.historyAt];\n          !b && 500 > f - x || g && g[1] === u ? x = f : (b = ++e.historyAt, e.history[b] = [ d, u ], \n          e.history.splice(b + 1), 500 < b && (e.historyAt--, e.history.shift()));\n        }\n      }, v = function() {\n        var b;\n        (b = e.queue).push.apply(b, e.observer.takeRecords());\n        b = w(a);\n        if (e.queue.length) {\n          e.observer.disconnect();\n          e.disconnected = !0;\n          var d = r(a);\n          e.position = b;\n          for (var c, f; c = e.queue.pop(); ) {\n            null !== c.oldValue && (c.target.textContent = c.oldValue);\n            for (f = c.removedNodes.length - 1; 0 <= f; f--) {\n              c.target.insertBefore(c.removedNodes[f], c.nextSibling);\n            }\n            for (f = c.addedNodes.length - 1; 0 <= f; f--) {\n              c.addedNodes[f].parentNode && c.target.removeChild(c.addedNodes[f]);\n            }\n          }\n          e.onChange(d, b);\n        }\n      }, y = function(c) {\n        if (!c.defaultPrevented && c.target === a) {\n          if (e.disconnected) {\n            return c.preventDefault(), D([]);\n          }\n          if (q(c)) {\n            c.preventDefault(), c.shiftKey ? (c = ++e.historyAt, (c = e.history[c]) || (e.historyAt = e.history.length - 1)) : (c = --e.historyAt, \n            (c = e.history[c]) || (e.historyAt = 0)), c && (e.observer.disconnect(), e.disconnected = !0, \n            e.position = c[0], e.onChange(c[1], c[0]));\n          } else {\n            t();\n            if (\"Enter\" === c.key) {\n              c.preventDefault();\n              var d = w(a), f = /\\S/g.exec(d.content);\n              d = \"\\n\" + d.content.slice(0, f ? f.index : d.content.length);\n              n.insert(d);\n            } else if ((!l || b.indentation) && \"Backspace\" === c.key) {\n              c.preventDefault(), window.getSelection().getRangeAt(0).collapsed ? (d = w(a), d = F.exec(d.content), \n              n.insert(\"\", d ? -d[1].length : -1)) : n.insert(\"\", 0);\n            } else if (b.indentation && \"Tab\" === c.key) {\n              c.preventDefault();\n              f = (d = w(a)).position - d.content.length;\n              var g = r(a);\n              d = c.shiftKey ? g.slice(0, f) + d.content.replace(E, \"\") + g.slice(f + d.content.length) : g.slice(0, f) + (b.indentation ? \" \".repeat(b.indentation) : \"\\t\") + g.slice(f);\n              n.update(d);\n            }\n            c.repeat && v();\n          }\n        }\n      }, z = function(b) {\n        b.defaultPrevented || b.isComposing || (q(b) || t(), v(), a.focus());\n      }, A = function(b) {\n        e.position = window.getSelection().rangeCount && b.target === a ? w(a) : null;\n      }, B = function(a) {\n        a.preventDefault();\n        t(!0);\n        n.insert(a.clipboardData.getData(\"text/plain\"));\n        t(!0);\n        v();\n      };\n      document.addEventListener(\"selectstart\", A);\n      window.addEventListener(\"keydown\", y);\n      a.addEventListener(\"paste\", B);\n      a.addEventListener(\"keyup\", z);\n      return function() {\n        document.removeEventListener(\"selectstart\", A);\n        window.removeEventListener(\"keydown\", y);\n        a.removeEventListener(\"paste\", B);\n        a.removeEventListener(\"keyup\", z);\n        a.style.whiteSpace = g;\n        a.contentEditable = h;\n      };\n    }\n  }), [ c.current, b.disabled, b.indentation ]);\n  return n;\n}\n//# sourceMappingURL=use-editable.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-editable/dist/use-editable.es.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/ComponentDemo.tsx":
/*!******************************************!*\
  !*** ./app/components/ComponentDemo.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComponentDemo: function() { return /* binding */ ComponentDemo; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_live__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-live */ \"(app-pages-browser)/./node_modules/react-live/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Code_Copy_Eye_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Code,Copy,Eye!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/eye.js\");\n/* harmony import */ var _barrel_optimize_names_Code_Copy_Eye_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Code,Copy,Eye!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/code.js\");\n/* harmony import */ var _barrel_optimize_names_Code_Copy_Eye_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Code,Copy,Eye!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/copy.js\");\n/* __next_internal_client_entry_do_not_use__ ComponentDemo auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction ComponentDemo(param) {\n    let { code, scope = {}, noInline = false } = param;\n    _s();\n    const [showCode, setShowCode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [copied, setCopied] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const copyToClipboard = ()=>{\n        navigator.clipboard.writeText(code);\n        setCopied(true);\n        setTimeout(()=>setCopied(false), 2000);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"border border-border rounded-lg overflow-hidden my-6 bg-card shadow-sm\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_live__WEBPACK_IMPORTED_MODULE_2__.LiveProvider, {\n            code: code,\n            scope: scope,\n            noInline: noInline,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-6 bg-background border-b border-border\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_live__WEBPACK_IMPORTED_MODULE_2__.LivePreview, {}, void 0, false, {\n                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                        lineNumber: 28,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                    lineNumber: 27,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center justify-between px-4 py-3 bg-muted/30 border-b border-border\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setShowCode(!showCode),\n                                className: \"btn btn-ghost flex items-center space-x-2 text-xs\",\n                                children: [\n                                    showCode ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Code_Copy_Eye_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                        className: \"h-4 w-4\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                                        lineNumber: 38,\n                                        columnNumber: 27\n                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Code_Copy_Eye_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                        className: \"h-4 w-4\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                                        lineNumber: 38,\n                                        columnNumber: 57\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: [\n                                            showCode ? \"Hide\" : \"Show\",\n                                            \" Code\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                                        lineNumber: 39,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                                lineNumber: 34,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: copyToClipboard,\n                                className: \"btn btn-ghost flex items-center space-x-2 text-xs\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Code_Copy_Eye_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                        className: \"h-4 w-4\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                                        lineNumber: 45,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: copied ? \"Copied!\" : \"Copy\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                                        lineNumber: 46,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                                lineNumber: 41,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                    lineNumber: 32,\n                    columnNumber: 9\n                }, this),\n                showCode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_live__WEBPACK_IMPORTED_MODULE_2__.LiveEditor, {\n                        className: \"react-live-editor\",\n                        style: {\n                            fontFamily: 'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\n                            fontSize: 14,\n                            lineHeight: 1.5,\n                            padding: \"1rem\",\n                            backgroundColor: \"hsl(var(--muted))\",\n                            color: \"hsl(var(--foreground))\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                        lineNumber: 54,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                    lineNumber: 53,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_live__WEBPACK_IMPORTED_MODULE_2__.LiveError, {\n                    className: \"react-live-error\"\n                }, void 0, false, {\n                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n                    lineNumber: 70,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n            lineNumber: 25,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/components/ComponentDemo.tsx\",\n        lineNumber: 24,\n        columnNumber: 5\n    }, this);\n}\n_s(ComponentDemo, \"ggZVfi5PIDIl3Sw7oRvenEzhr2c=\");\n_c = ComponentDemo;\nvar _c;\n$RefreshReg$(_c, \"ComponentDemo\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL0NvbXBvbmVudERlbW8udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFFNkU7QUFDN0M7QUFDYztBQVF2QyxTQUFTUSxjQUFjLEtBQTBEO1FBQTFELEVBQUVDLElBQUksRUFBRUMsUUFBUSxDQUFDLENBQUMsRUFBRUMsV0FBVyxLQUFLLEVBQXNCLEdBQTFEOztJQUM1QixNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR1QsK0NBQVFBLENBQUM7SUFDekMsTUFBTSxDQUFDVSxRQUFRQyxVQUFVLEdBQUdYLCtDQUFRQSxDQUFDO0lBRXJDLE1BQU1ZLGtCQUFrQjtRQUN0QkMsVUFBVUMsU0FBUyxDQUFDQyxTQUFTLENBQUNWO1FBQzlCTSxVQUFVO1FBQ1ZLLFdBQVcsSUFBTUwsVUFBVSxRQUFRO0lBQ3JDO0lBRUEscUJBQ0UsOERBQUNNO1FBQUlDLFdBQVU7a0JBQ2IsNEVBQUN0QixvREFBWUE7WUFBQ1MsTUFBTUE7WUFBTUMsT0FBT0E7WUFBT0MsVUFBVUE7OzhCQUVoRCw4REFBQ1U7b0JBQUlDLFdBQVU7OEJBQ2IsNEVBQUNuQixtREFBV0E7Ozs7Ozs7Ozs7OEJBSWQsOERBQUNrQjtvQkFBSUMsV0FBVTs4QkFDYiw0RUFBQ0Q7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDQztnQ0FDQ0MsU0FBUyxJQUFNWCxZQUFZLENBQUNEO2dDQUM1QlUsV0FBVTs7b0NBRVRWLHlCQUFXLDhEQUFDTix5RkFBR0E7d0NBQUNnQixXQUFVOzs7Ozs2REFBZSw4REFBQ2YseUZBQUlBO3dDQUFDZSxXQUFVOzs7Ozs7a0RBQzFELDhEQUFDRzs7NENBQU1iLFdBQVcsU0FBUzs0Q0FBTzs7Ozs7Ozs7Ozs7OzswQ0FFcEMsOERBQUNXO2dDQUNDQyxTQUFTUjtnQ0FDVE0sV0FBVTs7a0RBRVYsOERBQUNqQix5RkFBSUE7d0NBQUNpQixXQUFVOzs7Ozs7a0RBQ2hCLDhEQUFDRztrREFBTVgsU0FBUyxZQUFZOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnQkFNakNGLDBCQUNDLDhEQUFDUztvQkFBSUMsV0FBVTs4QkFDYiw0RUFBQ3JCLGtEQUFVQTt3QkFDVHFCLFdBQVU7d0JBQ1ZJLE9BQU87NEJBQ0xDLFlBQ0U7NEJBQ0ZDLFVBQVU7NEJBQ1ZDLFlBQVk7NEJBQ1pDLFNBQVM7NEJBQ1RDLGlCQUFpQjs0QkFDakJDLE9BQU87d0JBQ1Q7Ozs7Ozs7Ozs7OzhCQU1OLDhEQUFDOUIsaURBQVNBO29CQUFDb0IsV0FBVTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJN0I7R0E3RGdCZDtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9Db21wb25lbnREZW1vLnRzeD80YmQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCB7IExpdmVQcm92aWRlciwgTGl2ZUVkaXRvciwgTGl2ZUVycm9yLCBMaXZlUHJldmlldyB9IGZyb20gXCJyZWFjdC1saXZlXCJcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IENvcHksIEV5ZSwgQ29kZSB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIlxuXG5pbnRlcmZhY2UgQ29tcG9uZW50RGVtb1Byb3BzIHtcbiAgY29kZTogc3RyaW5nXG4gIHNjb3BlPzogUmVjb3JkPHN0cmluZywgYW55PlxuICBub0lubGluZT86IGJvb2xlYW5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENvbXBvbmVudERlbW8oeyBjb2RlLCBzY29wZSA9IHt9LCBub0lubGluZSA9IGZhbHNlIH06IENvbXBvbmVudERlbW9Qcm9wcykge1xuICBjb25zdCBbc2hvd0NvZGUsIHNldFNob3dDb2RlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbY29waWVkLCBzZXRDb3BpZWRdID0gdXNlU3RhdGUoZmFsc2UpXG5cbiAgY29uc3QgY29weVRvQ2xpcGJvYXJkID0gKCkgPT4ge1xuICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGNvZGUpXG4gICAgc2V0Q29waWVkKHRydWUpXG4gICAgc2V0VGltZW91dCgoKSA9PiBzZXRDb3BpZWQoZmFsc2UpLCAyMDAwKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItYm9yZGVyIHJvdW5kZWQtbGcgb3ZlcmZsb3ctaGlkZGVuIG15LTYgYmctY2FyZCBzaGFkb3ctc21cIj5cbiAgICAgIDxMaXZlUHJvdmlkZXIgY29kZT17Y29kZX0gc2NvcGU9e3Njb3BlfSBub0lubGluZT17bm9JbmxpbmV9PlxuICAgICAgICB7LyogUHJldmlldyBTZWN0aW9uICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtNiBiZy1iYWNrZ3JvdW5kIGJvcmRlci1iIGJvcmRlci1ib3JkZXJcIj5cbiAgICAgICAgICA8TGl2ZVByZXZpZXcgLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgey8qIENvbnRyb2xzICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBweC00IHB5LTMgYmctbXV0ZWQvMzAgYm9yZGVyLWIgYm9yZGVyLWJvcmRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yXCI+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNob3dDb2RlKCFzaG93Q29kZSl9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZ2hvc3QgZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQteHNcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7c2hvd0NvZGUgPyA8RXllIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPiA6IDxDb2RlIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPn1cbiAgICAgICAgICAgICAgPHNwYW4+e3Nob3dDb2RlID8gXCJIaWRlXCIgOiBcIlNob3dcIn0gQ29kZTwvc3Bhbj5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXtjb3B5VG9DbGlwYm9hcmR9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZ2hvc3QgZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQteHNcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8Q29weSBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICAgICAgPHNwYW4+e2NvcGllZCA/IFwiQ29waWVkIVwiIDogXCJDb3B5XCJ9PC9zcGFuPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHsvKiBDb2RlIEVkaXRvciAqL31cbiAgICAgICAge3Nob3dDb2RlICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlXCI+XG4gICAgICAgICAgICA8TGl2ZUVkaXRvclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJyZWFjdC1saXZlLWVkaXRvclwiXG4gICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgZm9udEZhbWlseTpcbiAgICAgICAgICAgICAgICAgICd1aS1tb25vc3BhY2UsIFNGTW9uby1SZWd1bGFyLCBcIlNGIE1vbm9cIiwgQ29uc29sYXMsIFwiTGliZXJhdGlvbiBNb25vXCIsIE1lbmxvLCBtb25vc3BhY2UnLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAxLjUsXG4gICAgICAgICAgICAgICAgcGFkZGluZzogXCIxcmVtXCIsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImhzbCh2YXIoLS1tdXRlZCkpXCIsXG4gICAgICAgICAgICAgICAgY29sb3I6IFwiaHNsKHZhcigtLWZvcmVncm91bmQpKVwiLFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cblxuICAgICAgICB7LyogRXJyb3IgRGlzcGxheSAqL31cbiAgICAgICAgPExpdmVFcnJvciBjbGFzc05hbWU9XCJyZWFjdC1saXZlLWVycm9yXCIgLz5cbiAgICAgIDwvTGl2ZVByb3ZpZGVyPlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibmFtZXMiOlsiTGl2ZVByb3ZpZGVyIiwiTGl2ZUVkaXRvciIsIkxpdmVFcnJvciIsIkxpdmVQcmV2aWV3IiwidXNlU3RhdGUiLCJDb3B5IiwiRXllIiwiQ29kZSIsIkNvbXBvbmVudERlbW8iLCJjb2RlIiwic2NvcGUiLCJub0lubGluZSIsInNob3dDb2RlIiwic2V0U2hvd0NvZGUiLCJjb3BpZWQiLCJzZXRDb3BpZWQiLCJjb3B5VG9DbGlwYm9hcmQiLCJuYXZpZ2F0b3IiLCJjbGlwYm9hcmQiLCJ3cml0ZVRleHQiLCJzZXRUaW1lb3V0IiwiZGl2IiwiY2xhc3NOYW1lIiwiYnV0dG9uIiwib25DbGljayIsInNwYW4iLCJzdHlsZSIsImZvbnRGYW1pbHkiLCJmb250U2l6ZSIsImxpbmVIZWlnaHQiLCJwYWRkaW5nIiwiYmFja2dyb3VuZENvbG9yIiwiY29sb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/ComponentDemo.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ HomePage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_ComponentDemo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/ComponentDemo */ \"(app-pages-browser)/./app/components/ComponentDemo.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nfunction HomePage() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-background text-foreground\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container mx-auto px-4 py-12 max-w-5xl\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center mb-12\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-5xl font-bold mb-6 text-foreground bg-gradient-to-r from-primary to-primary/80 bg-clip-text text-transparent\",\n                            children: \"shadcn/ui Extensions\"\n                        }, void 0, false, {\n                            fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                            lineNumber: 12,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-xl text-muted-foreground max-w-2xl mx-auto leading-relaxed\",\n                            children: \"A collection of extension components that build on top of shadcn/ui\"\n                        }, void 0, false, {\n                            fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                            lineNumber: 15,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                    lineNumber: 11,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-card border border-border rounded-xl p-8 shadow-sm\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-2xl font-semibold mb-4 text-foreground\",\n                                    children: \"Installation\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                    lineNumber: 23,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-muted/50 border border-border rounded-lg p-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                                        className: \"text-sm font-mono text-foreground\",\n                                        children: \"npm install @your-username/ui-library\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                        lineNumber: 25,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                    lineNumber: 24,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-card border border-border rounded-xl p-8 shadow-sm\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-2xl font-semibold mb-4 text-foreground\",\n                                    children: \"React Live Demo\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                    lineNumber: 33,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-muted-foreground mb-6 leading-relaxed\",\n                                    children: \"Here's a working React Live demo. You can edit the code and see changes in real-time:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                    lineNumber: 34,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ComponentDemo__WEBPACK_IMPORTED_MODULE_1__.ComponentDemo, {\n                                    code: 'function Example() {\\n  return (\\n    <div className=\"p-6 border border-border rounded-lg bg-card shadow-sm\">\\n      <h3 className=\"text-xl font-semibold mb-3 text-foreground\">Hello World!</h3>\\n      <p className=\"text-muted-foreground mb-4 leading-relaxed\">\\n        This is a React Live demo. You can edit this code and see the changes in real-time.\\n      </p>\\n      <button className=\"btn btn-primary\">\\n        Click me!\\n      </button>\\n    </div>\\n  )\\n}',\n                                    scope: {}\n                                }, void 0, false, {\n                                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                    lineNumber: 38,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                            lineNumber: 32,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-card border border-border rounded-xl p-8 shadow-sm\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-2xl font-semibold mb-4 text-foreground\",\n                                    children: \"Components\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                    lineNumber: 58,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-muted-foreground leading-relaxed\",\n                                    children: \"Documentation for individual components coming soon...\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                                    lineNumber: 59,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                            lineNumber: 57,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n            lineNumber: 9,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/xiaoqi/workspace/ui-library/docs/app/page.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n}\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRTBEO0FBRzNDLFNBQVNDO0lBQ3RCLHFCQUNFLDhEQUFDQztRQUFJQyxXQUFVO2tCQUNiLDRFQUFDRDtZQUFJQyxXQUFVOzs4QkFFYiw4REFBQ0Q7b0JBQUlDLFdBQVU7O3NDQUNiLDhEQUFDQzs0QkFBR0QsV0FBVTtzQ0FBb0g7Ozs7OztzQ0FHbEksOERBQUNFOzRCQUFFRixXQUFVO3NDQUFrRTs7Ozs7Ozs7Ozs7OzhCQUtqRiw4REFBQ0Q7b0JBQUlDLFdBQVU7O3NDQUViLDhEQUFDRDs0QkFBSUMsV0FBVTs7OENBQ2IsOERBQUNHO29DQUFHSCxXQUFVOzhDQUE4Qzs7Ozs7OzhDQUM1RCw4REFBQ0Q7b0NBQUlDLFdBQVU7OENBQ2IsNEVBQUNJO3dDQUFLSixXQUFVO2tEQUFvQzs7Ozs7Ozs7Ozs7Ozs7Ozs7c0NBT3hELDhEQUFDRDs0QkFBSUMsV0FBVTs7OENBQ2IsOERBQUNHO29DQUFHSCxXQUFVOzhDQUE4Qzs7Ozs7OzhDQUM1RCw4REFBQ0U7b0NBQUVGLFdBQVU7OENBQTZDOzs7Ozs7OENBSTFELDhEQUFDSCxvRUFBYUE7b0NBQ1pPLE1BQU87b0NBYVBDLE9BQU8sQ0FBQzs7Ozs7Ozs7Ozs7O3NDQUtaLDhEQUFDTjs0QkFBSUMsV0FBVTs7OENBQ2IsOERBQUNHO29DQUFHSCxXQUFVOzhDQUE4Qzs7Ozs7OzhDQUM1RCw4REFBQ0U7b0NBQUVGLFdBQVU7OENBQXdDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFqRTtLQTdEd0JGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9wYWdlLnRzeD83NjAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCB7IENvbXBvbmVudERlbW8gfSBmcm9tIFwiLi9jb21wb25lbnRzL0NvbXBvbmVudERlbW9cIlxuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWVQYWdlKCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWJhY2tncm91bmQgdGV4dC1mb3JlZ3JvdW5kXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBteC1hdXRvIHB4LTQgcHktMTIgbWF4LXctNXhsXCI+XG4gICAgICAgIHsvKiBIZWFkZXIgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgbWItMTJcIj5cbiAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC01eGwgZm9udC1ib2xkIG1iLTYgdGV4dC1mb3JlZ3JvdW5kIGJnLWdyYWRpZW50LXRvLXIgZnJvbS1wcmltYXJ5IHRvLXByaW1hcnkvODAgYmctY2xpcC10ZXh0IHRleHQtdHJhbnNwYXJlbnRcIj5cbiAgICAgICAgICAgIHNoYWRjbi91aSBFeHRlbnNpb25zXG4gICAgICAgICAgPC9oMT5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXhsIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYXgtdy0yeGwgbXgtYXV0byBsZWFkaW5nLXJlbGF4ZWRcIj5cbiAgICAgICAgICAgIEEgY29sbGVjdGlvbiBvZiBleHRlbnNpb24gY29tcG9uZW50cyB0aGF0IGJ1aWxkIG9uIHRvcCBvZiBzaGFkY24vdWlcbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS04XCI+XG4gICAgICAgICAgey8qIEluc3RhbGxhdGlvbiBTZWN0aW9uICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctY2FyZCBib3JkZXIgYm9yZGVyLWJvcmRlciByb3VuZGVkLXhsIHAtOCBzaGFkb3ctc21cIj5cbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkIG1iLTQgdGV4dC1mb3JlZ3JvdW5kXCI+SW5zdGFsbGF0aW9uPC9oMj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctbXV0ZWQvNTAgYm9yZGVyIGJvcmRlci1ib3JkZXIgcm91bmRlZC1sZyBwLTRcIj5cbiAgICAgICAgICAgICAgPGNvZGUgY2xhc3NOYW1lPVwidGV4dC1zbSBmb250LW1vbm8gdGV4dC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgICAgICAgICAgbnBtIGluc3RhbGwgQHlvdXItdXNlcm5hbWUvdWktbGlicmFyeVxuICAgICAgICAgICAgICA8L2NvZGU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIHsvKiBSZWFjdCBMaXZlIERlbW8gU2VjdGlvbiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWNhcmQgYm9yZGVyIGJvcmRlci1ib3JkZXIgcm91bmRlZC14bCBwLTggc2hhZG93LXNtXCI+XG4gICAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1zZW1pYm9sZCBtYi00IHRleHQtZm9yZWdyb3VuZFwiPlJlYWN0IExpdmUgRGVtbzwvaDI+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbWItNiBsZWFkaW5nLXJlbGF4ZWRcIj5cbiAgICAgICAgICAgICAgSGVyZSdzIGEgd29ya2luZyBSZWFjdCBMaXZlIGRlbW8uIFlvdSBjYW4gZWRpdCB0aGUgY29kZSBhbmQgc2VlIGNoYW5nZXMgaW4gcmVhbC10aW1lOlxuICAgICAgICAgICAgPC9wPlxuXG4gICAgICAgICAgICA8Q29tcG9uZW50RGVtb1xuICAgICAgICAgICAgICBjb2RlPXtgZnVuY3Rpb24gRXhhbXBsZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInAtNiBib3JkZXIgYm9yZGVyLWJvcmRlciByb3VuZGVkLWxnIGJnLWNhcmQgc2hhZG93LXNtXCI+XG4gICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC14bCBmb250LXNlbWlib2xkIG1iLTMgdGV4dC1mb3JlZ3JvdW5kXCI+SGVsbG8gV29ybGQhPC9oMz5cbiAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtYi00IGxlYWRpbmctcmVsYXhlZFwiPlxuICAgICAgICBUaGlzIGlzIGEgUmVhY3QgTGl2ZSBkZW1vLiBZb3UgY2FuIGVkaXQgdGhpcyBjb2RlIGFuZCBzZWUgdGhlIGNoYW5nZXMgaW4gcmVhbC10aW1lLlxuICAgICAgPC9wPlxuICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIj5cbiAgICAgICAgQ2xpY2sgbWUhXG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgKVxufWB9XG4gICAgICAgICAgICAgIHNjb3BlPXt7fX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7LyogQ29tcG9uZW50cyBTZWN0aW9uICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctY2FyZCBib3JkZXIgYm9yZGVyLWJvcmRlciByb3VuZGVkLXhsIHAtOCBzaGFkb3ctc21cIj5cbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkIG1iLTQgdGV4dC1mb3JlZ3JvdW5kXCI+Q29tcG9uZW50czwvaDI+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LW11dGVkLWZvcmVncm91bmQgbGVhZGluZy1yZWxheGVkXCI+XG4gICAgICAgICAgICAgIERvY3VtZW50YXRpb24gZm9yIGluZGl2aWR1YWwgY29tcG9uZW50cyBjb21pbmcgc29vbi4uLlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibmFtZXMiOlsiQ29tcG9uZW50RGVtbyIsIkhvbWVQYWdlIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDEiLCJwIiwiaDIiLCJjb2RlIiwic2NvcGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NWJjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@jridgewell/gen-mapping/dist/gen-mapping.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@jridgewell/gen-mapping/dist/gen-mapping.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GenMapping: function() { return /* binding */ GenMapping; },\n/* harmony export */   addMapping: function() { return /* binding */ addMapping; },\n/* harmony export */   addSegment: function() { return /* binding */ addSegment; },\n/* harmony export */   allMappings: function() { return /* binding */ allMappings; },\n/* harmony export */   fromMap: function() { return /* binding */ fromMap; },\n/* harmony export */   maybeAddMapping: function() { return /* binding */ maybeAddMapping; },\n/* harmony export */   maybeAddSegment: function() { return /* binding */ maybeAddSegment; },\n/* harmony export */   setIgnore: function() { return /* binding */ setIgnore; },\n/* harmony export */   setSourceContent: function() { return /* binding */ setSourceContent; },\n/* harmony export */   toDecodedMap: function() { return /* binding */ toDecodedMap; },\n/* harmony export */   toEncodedMap: function() { return /* binding */ toEncodedMap; }\n/* harmony export */ });\n/* harmony import */ var _jridgewell_sourcemap_codec__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jridgewell/sourcemap-codec */ \"(app-pages-browser)/./node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs\");\n/* harmony import */ var _jridgewell_trace_mapping__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jridgewell/trace-mapping */ \"(app-pages-browser)/./node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs\");\n// src/set-array.ts\nvar SetArray = class {\n  constructor() {\n    this._indexes = { __proto__: null };\n    this.array = [];\n  }\n};\nfunction cast(set) {\n  return set;\n}\nfunction get(setarr, key) {\n  return cast(setarr)._indexes[key];\n}\nfunction put(setarr, key) {\n  const index = get(setarr, key);\n  if (index !== void 0) return index;\n  const { array, _indexes: indexes } = cast(setarr);\n  const length = array.push(key);\n  return indexes[key] = length - 1;\n}\nfunction remove(setarr, key) {\n  const index = get(setarr, key);\n  if (index === void 0) return;\n  const { array, _indexes: indexes } = cast(setarr);\n  for (let i = index + 1; i < array.length; i++) {\n    const k = array[i];\n    array[i - 1] = k;\n    indexes[k]--;\n  }\n  indexes[key] = void 0;\n  array.pop();\n}\n\n// src/gen-mapping.ts\n\n\n\n// src/sourcemap-segment.ts\nvar COLUMN = 0;\nvar SOURCES_INDEX = 1;\nvar SOURCE_LINE = 2;\nvar SOURCE_COLUMN = 3;\nvar NAMES_INDEX = 4;\n\n// src/gen-mapping.ts\nvar NO_NAME = -1;\nvar GenMapping = class {\n  constructor({ file, sourceRoot } = {}) {\n    this._names = new SetArray();\n    this._sources = new SetArray();\n    this._sourcesContent = [];\n    this._mappings = [];\n    this.file = file;\n    this.sourceRoot = sourceRoot;\n    this._ignoreList = new SetArray();\n  }\n};\nfunction cast2(map) {\n  return map;\n}\nfunction addSegment(map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) {\n  return addSegmentInternal(\n    false,\n    map,\n    genLine,\n    genColumn,\n    source,\n    sourceLine,\n    sourceColumn,\n    name,\n    content\n  );\n}\nfunction addMapping(map, mapping) {\n  return addMappingInternal(false, map, mapping);\n}\nvar maybeAddSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {\n  return addSegmentInternal(\n    true,\n    map,\n    genLine,\n    genColumn,\n    source,\n    sourceLine,\n    sourceColumn,\n    name,\n    content\n  );\n};\nvar maybeAddMapping = (map, mapping) => {\n  return addMappingInternal(true, map, mapping);\n};\nfunction setSourceContent(map, source, content) {\n  const {\n    _sources: sources,\n    _sourcesContent: sourcesContent\n    // _originalScopes: originalScopes,\n  } = cast2(map);\n  const index = put(sources, source);\n  sourcesContent[index] = content;\n}\nfunction setIgnore(map, source, ignore = true) {\n  const {\n    _sources: sources,\n    _sourcesContent: sourcesContent,\n    _ignoreList: ignoreList\n    // _originalScopes: originalScopes,\n  } = cast2(map);\n  const index = put(sources, source);\n  if (index === sourcesContent.length) sourcesContent[index] = null;\n  if (ignore) put(ignoreList, index);\n  else remove(ignoreList, index);\n}\nfunction toDecodedMap(map) {\n  const {\n    _mappings: mappings,\n    _sources: sources,\n    _sourcesContent: sourcesContent,\n    _names: names,\n    _ignoreList: ignoreList\n    // _originalScopes: originalScopes,\n    // _generatedRanges: generatedRanges,\n  } = cast2(map);\n  removeEmptyFinalLines(mappings);\n  return {\n    version: 3,\n    file: map.file || void 0,\n    names: names.array,\n    sourceRoot: map.sourceRoot || void 0,\n    sources: sources.array,\n    sourcesContent,\n    mappings,\n    // originalScopes,\n    // generatedRanges,\n    ignoreList: ignoreList.array\n  };\n}\nfunction toEncodedMap(map) {\n  const decoded = toDecodedMap(map);\n  return Object.assign({}, decoded, {\n    // originalScopes: decoded.originalScopes.map((os) => encodeOriginalScopes(os)),\n    // generatedRanges: encodeGeneratedRanges(decoded.generatedRanges as GeneratedRange[]),\n    mappings: (0,_jridgewell_sourcemap_codec__WEBPACK_IMPORTED_MODULE_0__.encode)(decoded.mappings)\n  });\n}\nfunction fromMap(input) {\n  const map = new _jridgewell_trace_mapping__WEBPACK_IMPORTED_MODULE_1__.TraceMap(input);\n  const gen = new GenMapping({ file: map.file, sourceRoot: map.sourceRoot });\n  putAll(cast2(gen)._names, map.names);\n  putAll(cast2(gen)._sources, map.sources);\n  cast2(gen)._sourcesContent = map.sourcesContent || map.sources.map(() => null);\n  cast2(gen)._mappings = (0,_jridgewell_trace_mapping__WEBPACK_IMPORTED_MODULE_1__.decodedMappings)(map);\n  if (map.ignoreList) putAll(cast2(gen)._ignoreList, map.ignoreList);\n  return gen;\n}\nfunction allMappings(map) {\n  const out = [];\n  const { _mappings: mappings, _sources: sources, _names: names } = cast2(map);\n  for (let i = 0; i < mappings.length; i++) {\n    const line = mappings[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const generated = { line: i + 1, column: seg[COLUMN] };\n      let source = void 0;\n      let original = void 0;\n      let name = void 0;\n      if (seg.length !== 1) {\n        source = sources.array[seg[SOURCES_INDEX]];\n        original = { line: seg[SOURCE_LINE] + 1, column: seg[SOURCE_COLUMN] };\n        if (seg.length === 5) name = names.array[seg[NAMES_INDEX]];\n      }\n      out.push({ generated, source, original, name });\n    }\n  }\n  return out;\n}\nfunction addSegmentInternal(skipable, map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) {\n  const {\n    _mappings: mappings,\n    _sources: sources,\n    _sourcesContent: sourcesContent,\n    _names: names\n    // _originalScopes: originalScopes,\n  } = cast2(map);\n  const line = getIndex(mappings, genLine);\n  const index = getColumnIndex(line, genColumn);\n  if (!source) {\n    if (skipable && skipSourceless(line, index)) return;\n    return insert(line, index, [genColumn]);\n  }\n  assert(sourceLine);\n  assert(sourceColumn);\n  const sourcesIndex = put(sources, source);\n  const namesIndex = name ? put(names, name) : NO_NAME;\n  if (sourcesIndex === sourcesContent.length) sourcesContent[sourcesIndex] = content != null ? content : null;\n  if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {\n    return;\n  }\n  return insert(\n    line,\n    index,\n    name ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex] : [genColumn, sourcesIndex, sourceLine, sourceColumn]\n  );\n}\nfunction assert(_val) {\n}\nfunction getIndex(arr, index) {\n  for (let i = arr.length; i <= index; i++) {\n    arr[i] = [];\n  }\n  return arr[index];\n}\nfunction getColumnIndex(line, genColumn) {\n  let index = line.length;\n  for (let i = index - 1; i >= 0; index = i--) {\n    const current = line[i];\n    if (genColumn >= current[COLUMN]) break;\n  }\n  return index;\n}\nfunction insert(array, index, value) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\nfunction removeEmptyFinalLines(mappings) {\n  const { length } = mappings;\n  let len = length;\n  for (let i = len - 1; i >= 0; len = i, i--) {\n    if (mappings[i].length > 0) break;\n  }\n  if (len < length) mappings.length = len;\n}\nfunction putAll(setarr, array) {\n  for (let i = 0; i < array.length; i++) put(setarr, array[i]);\n}\nfunction skipSourceless(line, index) {\n  if (index === 0) return true;\n  const prev = line[index - 1];\n  return prev.length === 1;\n}\nfunction skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex) {\n  if (index === 0) return false;\n  const prev = line[index - 1];\n  if (prev.length === 1) return false;\n  return sourcesIndex === prev[SOURCES_INDEX] && sourceLine === prev[SOURCE_LINE] && sourceColumn === prev[SOURCE_COLUMN] && namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME);\n}\nfunction addMappingInternal(skipable, map, mapping) {\n  const { generated, source, original, name, content } = mapping;\n  if (!source) {\n    return addSegmentInternal(\n      skipable,\n      map,\n      generated.line - 1,\n      generated.column,\n      null,\n      null,\n      null,\n      null,\n      null\n    );\n  }\n  assert(original);\n  return addSegmentInternal(\n    skipable,\n    map,\n    generated.line - 1,\n    generated.column,\n    source,\n    original.line - 1,\n    original.column,\n    name,\n    content\n  );\n}\n\n//# sourceMappingURL=gen-mapping.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@jridgewell/gen-mapping/dist/gen-mapping.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: function() { return /* binding */ decode; },\n/* harmony export */   decodeGeneratedRanges: function() { return /* binding */ decodeGeneratedRanges; },\n/* harmony export */   decodeOriginalScopes: function() { return /* binding */ decodeOriginalScopes; },\n/* harmony export */   encode: function() { return /* binding */ encode; },\n/* harmony export */   encodeGeneratedRanges: function() { return /* binding */ encodeGeneratedRanges; },\n/* harmony export */   encodeOriginalScopes: function() { return /* binding */ encodeOriginalScopes; }\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n// src/vlq.ts\nvar comma = \",\".charCodeAt(0);\nvar semicolon = \";\".charCodeAt(0);\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar intToChar = new Uint8Array(64);\nvar charToInt = new Uint8Array(128);\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\nfunction decodeInteger(reader, relative) {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n  const shouldNegate = value & 1;\n  value >>>= 1;\n  if (shouldNegate) {\n    value = -2147483648 | -value;\n  }\n  return relative + value;\n}\nfunction encodeInteger(builder, num, relative) {\n  let delta = num - relative;\n  delta = delta < 0 ? -delta << 1 | 1 : delta << 1;\n  do {\n    let clamped = delta & 31;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 32;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n  return num;\n}\nfunction hasMoreVlq(reader, max) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n\n// src/strings.ts\nvar bufLength = 1024 * 16;\nvar td = typeof TextDecoder !== \"undefined\" ? /* @__PURE__ */ new TextDecoder() : typeof Buffer !== \"undefined\" ? {\n  decode(buf) {\n    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n    return out.toString();\n  }\n} : {\n  decode(buf) {\n    let out = \"\";\n    for (let i = 0; i < buf.length; i++) {\n      out += String.fromCharCode(buf[i]);\n    }\n    return out;\n  }\n};\nvar StringWriter = class {\n  constructor() {\n    this.pos = 0;\n    this.out = \"\";\n    this.buffer = new Uint8Array(bufLength);\n  }\n  write(v) {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n  flush() {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n};\nvar StringReader = class {\n  constructor(buffer) {\n    this.pos = 0;\n    this.buffer = buffer;\n  }\n  next() {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.pos);\n  }\n  indexOf(char) {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n};\n\n// src/scopes.ts\nvar EMPTY = [];\nfunction decodeOriginalScopes(input) {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes = [];\n  const stack = [];\n  let line = 0;\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop();\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 1;\n    const scope = hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind];\n    let vars = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n    scopes.push(scope);\n    stack.push(scope);\n  }\n  return scopes;\n}\nfunction encodeOriginalScopes(scopes) {\n  const writer = new StringWriter();\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n  return writer.flush();\n}\nfunction _encodeOriginalScopes(scopes, index, writer, state) {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n  if (index > 0) writer.write(comma);\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n  const fields = scope.length === 6 ? 1 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || l === endLine && c >= endColumn) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n  return index;\n}\nfunction decodeGeneratedRanges(input) {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges = [];\n  const stack = [];\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n  do {\n    const semi = reader.indexOf(\";\");\n    let genColumn = 0;\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop();\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 1;\n      const hasCallsite = fields & 2;\n      const hasScope = fields & 4;\n      let callsite = null;\n      let bindings = EMPTY;\n      let range;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0\n        );\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex];\n      } else {\n        range = [genLine, genColumn, 0, 0];\n      }\n      range.isScope = !!hasScope;\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0\n        );\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges;\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n      ranges.push(range);\n      stack.push(range);\n    }\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n  return ranges;\n}\nfunction encodeGeneratedRanges(ranges) {\n  if (ranges.length === 0) return \"\";\n  const writer = new StringWriter();\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n  return writer.flush();\n}\nfunction _encodeGeneratedRanges(ranges, index, writer, state) {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings\n  } = range;\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, range[1], state[1]);\n  const fields = (range.length === 6 ? 1 : 0) | (callsite ? 2 : 0) | (isScope ? 4 : 0);\n  encodeInteger(writer, fields, 0);\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1], bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2], bindingStartColumn);\n        encodeInteger(writer, expRange[0], 0);\n      }\n    }\n  }\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || l === endLine && c >= endColumn) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n  return index;\n}\nfunction catchupLine(writer, lastLine, line) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n\n// src/sourcemap-codec.ts\nfunction decode(mappings) {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n  do {\n    const semi = reader.indexOf(\";\");\n    const line = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n    while (reader.pos < semi) {\n      let seg;\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n      line.push(seg);\n      reader.pos++;\n    }\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n  return decoded;\n}\nfunction sort(line) {\n  line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n  return a[0] - b[0];\n}\nfunction encode(decoded) {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n    let genColumn = 0;\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n  return writer.flush();\n}\n\n//# sourceMappingURL=sourcemap-codec.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AanJpZGdld2VsbC9zb3VyY2VtYXAtY29kZWMvZGlzdC9zb3VyY2VtYXAtY29kZWMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrQkFBa0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseUZBQXlGLE1BQU07QUFDL0Y7QUFDQSxnQkFBZ0IsTUFBTTtBQUN0QjtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksY0FBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLFNBQVM7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHFCQUFxQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHdFQUF3RTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1QkFBdUI7QUFDdkM7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsU0FBUztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzQkFBc0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw4Q0FBOEM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG9CQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1QkFBdUI7QUFDdkM7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBLFVBQVUsU0FBUztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AanJpZGdld2VsbC9zb3VyY2VtYXAtY29kZWMvZGlzdC9zb3VyY2VtYXAtY29kZWMubWpzPzFhMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3ZscS50c1xudmFyIGNvbW1hID0gXCIsXCIuY2hhckNvZGVBdCgwKTtcbnZhciBzZW1pY29sb24gPSBcIjtcIi5jaGFyQ29kZUF0KDApO1xudmFyIGNoYXJzID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCI7XG52YXIgaW50VG9DaGFyID0gbmV3IFVpbnQ4QXJyYXkoNjQpO1xudmFyIGNoYXJUb0ludCA9IG5ldyBVaW50OEFycmF5KDEyOCk7XG5mb3IgKGxldCBpID0gMDsgaSA8IGNoYXJzLmxlbmd0aDsgaSsrKSB7XG4gIGNvbnN0IGMgPSBjaGFycy5jaGFyQ29kZUF0KGkpO1xuICBpbnRUb0NoYXJbaV0gPSBjO1xuICBjaGFyVG9JbnRbY10gPSBpO1xufVxuZnVuY3Rpb24gZGVjb2RlSW50ZWdlcihyZWFkZXIsIHJlbGF0aXZlKSB7XG4gIGxldCB2YWx1ZSA9IDA7XG4gIGxldCBzaGlmdCA9IDA7XG4gIGxldCBpbnRlZ2VyID0gMDtcbiAgZG8ge1xuICAgIGNvbnN0IGMgPSByZWFkZXIubmV4dCgpO1xuICAgIGludGVnZXIgPSBjaGFyVG9JbnRbY107XG4gICAgdmFsdWUgfD0gKGludGVnZXIgJiAzMSkgPDwgc2hpZnQ7XG4gICAgc2hpZnQgKz0gNTtcbiAgfSB3aGlsZSAoaW50ZWdlciAmIDMyKTtcbiAgY29uc3Qgc2hvdWxkTmVnYXRlID0gdmFsdWUgJiAxO1xuICB2YWx1ZSA+Pj49IDE7XG4gIGlmIChzaG91bGROZWdhdGUpIHtcbiAgICB2YWx1ZSA9IC0yMTQ3NDgzNjQ4IHwgLXZhbHVlO1xuICB9XG4gIHJldHVybiByZWxhdGl2ZSArIHZhbHVlO1xufVxuZnVuY3Rpb24gZW5jb2RlSW50ZWdlcihidWlsZGVyLCBudW0sIHJlbGF0aXZlKSB7XG4gIGxldCBkZWx0YSA9IG51bSAtIHJlbGF0aXZlO1xuICBkZWx0YSA9IGRlbHRhIDwgMCA/IC1kZWx0YSA8PCAxIHwgMSA6IGRlbHRhIDw8IDE7XG4gIGRvIHtcbiAgICBsZXQgY2xhbXBlZCA9IGRlbHRhICYgMzE7XG4gICAgZGVsdGEgPj4+PSA1O1xuICAgIGlmIChkZWx0YSA+IDApIGNsYW1wZWQgfD0gMzI7XG4gICAgYnVpbGRlci53cml0ZShpbnRUb0NoYXJbY2xhbXBlZF0pO1xuICB9IHdoaWxlIChkZWx0YSA+IDApO1xuICByZXR1cm4gbnVtO1xufVxuZnVuY3Rpb24gaGFzTW9yZVZscShyZWFkZXIsIG1heCkge1xuICBpZiAocmVhZGVyLnBvcyA+PSBtYXgpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHJlYWRlci5wZWVrKCkgIT09IGNvbW1hO1xufVxuXG4vLyBzcmMvc3RyaW5ncy50c1xudmFyIGJ1Zkxlbmd0aCA9IDEwMjQgKiAxNjtcbnZhciB0ZCA9IHR5cGVvZiBUZXh0RGVjb2RlciAhPT0gXCJ1bmRlZmluZWRcIiA/IC8qIEBfX1BVUkVfXyAqLyBuZXcgVGV4dERlY29kZXIoKSA6IHR5cGVvZiBCdWZmZXIgIT09IFwidW5kZWZpbmVkXCIgPyB7XG4gIGRlY29kZShidWYpIHtcbiAgICBjb25zdCBvdXQgPSBCdWZmZXIuZnJvbShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVMZW5ndGgpO1xuICAgIHJldHVybiBvdXQudG9TdHJpbmcoKTtcbiAgfVxufSA6IHtcbiAgZGVjb2RlKGJ1Zikge1xuICAgIGxldCBvdXQgPSBcIlwiO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmLmxlbmd0aDsgaSsrKSB7XG4gICAgICBvdXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShidWZbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xuICB9XG59O1xudmFyIFN0cmluZ1dyaXRlciA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5wb3MgPSAwO1xuICAgIHRoaXMub3V0ID0gXCJcIjtcbiAgICB0aGlzLmJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KGJ1Zkxlbmd0aCk7XG4gIH1cbiAgd3JpdGUodikge1xuICAgIGNvbnN0IHsgYnVmZmVyIH0gPSB0aGlzO1xuICAgIGJ1ZmZlclt0aGlzLnBvcysrXSA9IHY7XG4gICAgaWYgKHRoaXMucG9zID09PSBidWZMZW5ndGgpIHtcbiAgICAgIHRoaXMub3V0ICs9IHRkLmRlY29kZShidWZmZXIpO1xuICAgICAgdGhpcy5wb3MgPSAwO1xuICAgIH1cbiAgfVxuICBmbHVzaCgpIHtcbiAgICBjb25zdCB7IGJ1ZmZlciwgb3V0LCBwb3MgfSA9IHRoaXM7XG4gICAgcmV0dXJuIHBvcyA+IDAgPyBvdXQgKyB0ZC5kZWNvZGUoYnVmZmVyLnN1YmFycmF5KDAsIHBvcykpIDogb3V0O1xuICB9XG59O1xudmFyIFN0cmluZ1JlYWRlciA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoYnVmZmVyKSB7XG4gICAgdGhpcy5wb3MgPSAwO1xuICAgIHRoaXMuYnVmZmVyID0gYnVmZmVyO1xuICB9XG4gIG5leHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuYnVmZmVyLmNoYXJDb2RlQXQodGhpcy5wb3MrKyk7XG4gIH1cbiAgcGVlaygpIHtcbiAgICByZXR1cm4gdGhpcy5idWZmZXIuY2hhckNvZGVBdCh0aGlzLnBvcyk7XG4gIH1cbiAgaW5kZXhPZihjaGFyKSB7XG4gICAgY29uc3QgeyBidWZmZXIsIHBvcyB9ID0gdGhpcztcbiAgICBjb25zdCBpZHggPSBidWZmZXIuaW5kZXhPZihjaGFyLCBwb3MpO1xuICAgIHJldHVybiBpZHggPT09IC0xID8gYnVmZmVyLmxlbmd0aCA6IGlkeDtcbiAgfVxufTtcblxuLy8gc3JjL3Njb3Blcy50c1xudmFyIEVNUFRZID0gW107XG5mdW5jdGlvbiBkZWNvZGVPcmlnaW5hbFNjb3BlcyhpbnB1dCkge1xuICBjb25zdCB7IGxlbmd0aCB9ID0gaW5wdXQ7XG4gIGNvbnN0IHJlYWRlciA9IG5ldyBTdHJpbmdSZWFkZXIoaW5wdXQpO1xuICBjb25zdCBzY29wZXMgPSBbXTtcbiAgY29uc3Qgc3RhY2sgPSBbXTtcbiAgbGV0IGxpbmUgPSAwO1xuICBmb3IgKDsgcmVhZGVyLnBvcyA8IGxlbmd0aDsgcmVhZGVyLnBvcysrKSB7XG4gICAgbGluZSA9IGRlY29kZUludGVnZXIocmVhZGVyLCBsaW5lKTtcbiAgICBjb25zdCBjb2x1bW4gPSBkZWNvZGVJbnRlZ2VyKHJlYWRlciwgMCk7XG4gICAgaWYgKCFoYXNNb3JlVmxxKHJlYWRlciwgbGVuZ3RoKSkge1xuICAgICAgY29uc3QgbGFzdCA9IHN0YWNrLnBvcCgpO1xuICAgICAgbGFzdFsyXSA9IGxpbmU7XG4gICAgICBsYXN0WzNdID0gY29sdW1uO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IGtpbmQgPSBkZWNvZGVJbnRlZ2VyKHJlYWRlciwgMCk7XG4gICAgY29uc3QgZmllbGRzID0gZGVjb2RlSW50ZWdlcihyZWFkZXIsIDApO1xuICAgIGNvbnN0IGhhc05hbWUgPSBmaWVsZHMgJiAxO1xuICAgIGNvbnN0IHNjb3BlID0gaGFzTmFtZSA/IFtsaW5lLCBjb2x1bW4sIDAsIDAsIGtpbmQsIGRlY29kZUludGVnZXIocmVhZGVyLCAwKV0gOiBbbGluZSwgY29sdW1uLCAwLCAwLCBraW5kXTtcbiAgICBsZXQgdmFycyA9IEVNUFRZO1xuICAgIGlmIChoYXNNb3JlVmxxKHJlYWRlciwgbGVuZ3RoKSkge1xuICAgICAgdmFycyA9IFtdO1xuICAgICAgZG8ge1xuICAgICAgICBjb25zdCB2YXJzSW5kZXggPSBkZWNvZGVJbnRlZ2VyKHJlYWRlciwgMCk7XG4gICAgICAgIHZhcnMucHVzaCh2YXJzSW5kZXgpO1xuICAgICAgfSB3aGlsZSAoaGFzTW9yZVZscShyZWFkZXIsIGxlbmd0aCkpO1xuICAgIH1cbiAgICBzY29wZS52YXJzID0gdmFycztcbiAgICBzY29wZXMucHVzaChzY29wZSk7XG4gICAgc3RhY2sucHVzaChzY29wZSk7XG4gIH1cbiAgcmV0dXJuIHNjb3Blcztcbn1cbmZ1bmN0aW9uIGVuY29kZU9yaWdpbmFsU2NvcGVzKHNjb3Blcykge1xuICBjb25zdCB3cml0ZXIgPSBuZXcgU3RyaW5nV3JpdGVyKCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2NvcGVzLmxlbmd0aDsgKSB7XG4gICAgaSA9IF9lbmNvZGVPcmlnaW5hbFNjb3BlcyhzY29wZXMsIGksIHdyaXRlciwgWzBdKTtcbiAgfVxuICByZXR1cm4gd3JpdGVyLmZsdXNoKCk7XG59XG5mdW5jdGlvbiBfZW5jb2RlT3JpZ2luYWxTY29wZXMoc2NvcGVzLCBpbmRleCwgd3JpdGVyLCBzdGF0ZSkge1xuICBjb25zdCBzY29wZSA9IHNjb3Blc1tpbmRleF07XG4gIGNvbnN0IHsgMDogc3RhcnRMaW5lLCAxOiBzdGFydENvbHVtbiwgMjogZW5kTGluZSwgMzogZW5kQ29sdW1uLCA0OiBraW5kLCB2YXJzIH0gPSBzY29wZTtcbiAgaWYgKGluZGV4ID4gMCkgd3JpdGVyLndyaXRlKGNvbW1hKTtcbiAgc3RhdGVbMF0gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgc3RhcnRMaW5lLCBzdGF0ZVswXSk7XG4gIGVuY29kZUludGVnZXIod3JpdGVyLCBzdGFydENvbHVtbiwgMCk7XG4gIGVuY29kZUludGVnZXIod3JpdGVyLCBraW5kLCAwKTtcbiAgY29uc3QgZmllbGRzID0gc2NvcGUubGVuZ3RoID09PSA2ID8gMSA6IDA7XG4gIGVuY29kZUludGVnZXIod3JpdGVyLCBmaWVsZHMsIDApO1xuICBpZiAoc2NvcGUubGVuZ3RoID09PSA2KSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgc2NvcGVbNV0sIDApO1xuICBmb3IgKGNvbnN0IHYgb2YgdmFycykge1xuICAgIGVuY29kZUludGVnZXIod3JpdGVyLCB2LCAwKTtcbiAgfVxuICBmb3IgKGluZGV4Kys7IGluZGV4IDwgc2NvcGVzLmxlbmd0aDsgKSB7XG4gICAgY29uc3QgbmV4dCA9IHNjb3Blc1tpbmRleF07XG4gICAgY29uc3QgeyAwOiBsLCAxOiBjIH0gPSBuZXh0O1xuICAgIGlmIChsID4gZW5kTGluZSB8fCBsID09PSBlbmRMaW5lICYmIGMgPj0gZW5kQ29sdW1uKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgaW5kZXggPSBfZW5jb2RlT3JpZ2luYWxTY29wZXMoc2NvcGVzLCBpbmRleCwgd3JpdGVyLCBzdGF0ZSk7XG4gIH1cbiAgd3JpdGVyLndyaXRlKGNvbW1hKTtcbiAgc3RhdGVbMF0gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgZW5kTGluZSwgc3RhdGVbMF0pO1xuICBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgZW5kQ29sdW1uLCAwKTtcbiAgcmV0dXJuIGluZGV4O1xufVxuZnVuY3Rpb24gZGVjb2RlR2VuZXJhdGVkUmFuZ2VzKGlucHV0KSB7XG4gIGNvbnN0IHsgbGVuZ3RoIH0gPSBpbnB1dDtcbiAgY29uc3QgcmVhZGVyID0gbmV3IFN0cmluZ1JlYWRlcihpbnB1dCk7XG4gIGNvbnN0IHJhbmdlcyA9IFtdO1xuICBjb25zdCBzdGFjayA9IFtdO1xuICBsZXQgZ2VuTGluZSA9IDA7XG4gIGxldCBkZWZpbml0aW9uU291cmNlc0luZGV4ID0gMDtcbiAgbGV0IGRlZmluaXRpb25TY29wZUluZGV4ID0gMDtcbiAgbGV0IGNhbGxzaXRlU291cmNlc0luZGV4ID0gMDtcbiAgbGV0IGNhbGxzaXRlTGluZSA9IDA7XG4gIGxldCBjYWxsc2l0ZUNvbHVtbiA9IDA7XG4gIGxldCBiaW5kaW5nTGluZSA9IDA7XG4gIGxldCBiaW5kaW5nQ29sdW1uID0gMDtcbiAgZG8ge1xuICAgIGNvbnN0IHNlbWkgPSByZWFkZXIuaW5kZXhPZihcIjtcIik7XG4gICAgbGV0IGdlbkNvbHVtbiA9IDA7XG4gICAgZm9yICg7IHJlYWRlci5wb3MgPCBzZW1pOyByZWFkZXIucG9zKyspIHtcbiAgICAgIGdlbkNvbHVtbiA9IGRlY29kZUludGVnZXIocmVhZGVyLCBnZW5Db2x1bW4pO1xuICAgICAgaWYgKCFoYXNNb3JlVmxxKHJlYWRlciwgc2VtaSkpIHtcbiAgICAgICAgY29uc3QgbGFzdCA9IHN0YWNrLnBvcCgpO1xuICAgICAgICBsYXN0WzJdID0gZ2VuTGluZTtcbiAgICAgICAgbGFzdFszXSA9IGdlbkNvbHVtbjtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBjb25zdCBmaWVsZHMgPSBkZWNvZGVJbnRlZ2VyKHJlYWRlciwgMCk7XG4gICAgICBjb25zdCBoYXNEZWZpbml0aW9uID0gZmllbGRzICYgMTtcbiAgICAgIGNvbnN0IGhhc0NhbGxzaXRlID0gZmllbGRzICYgMjtcbiAgICAgIGNvbnN0IGhhc1Njb3BlID0gZmllbGRzICYgNDtcbiAgICAgIGxldCBjYWxsc2l0ZSA9IG51bGw7XG4gICAgICBsZXQgYmluZGluZ3MgPSBFTVBUWTtcbiAgICAgIGxldCByYW5nZTtcbiAgICAgIGlmIChoYXNEZWZpbml0aW9uKSB7XG4gICAgICAgIGNvbnN0IGRlZlNvdXJjZXNJbmRleCA9IGRlY29kZUludGVnZXIocmVhZGVyLCBkZWZpbml0aW9uU291cmNlc0luZGV4KTtcbiAgICAgICAgZGVmaW5pdGlvblNjb3BlSW5kZXggPSBkZWNvZGVJbnRlZ2VyKFxuICAgICAgICAgIHJlYWRlcixcbiAgICAgICAgICBkZWZpbml0aW9uU291cmNlc0luZGV4ID09PSBkZWZTb3VyY2VzSW5kZXggPyBkZWZpbml0aW9uU2NvcGVJbmRleCA6IDBcbiAgICAgICAgKTtcbiAgICAgICAgZGVmaW5pdGlvblNvdXJjZXNJbmRleCA9IGRlZlNvdXJjZXNJbmRleDtcbiAgICAgICAgcmFuZ2UgPSBbZ2VuTGluZSwgZ2VuQ29sdW1uLCAwLCAwLCBkZWZTb3VyY2VzSW5kZXgsIGRlZmluaXRpb25TY29wZUluZGV4XTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJhbmdlID0gW2dlbkxpbmUsIGdlbkNvbHVtbiwgMCwgMF07XG4gICAgICB9XG4gICAgICByYW5nZS5pc1Njb3BlID0gISFoYXNTY29wZTtcbiAgICAgIGlmIChoYXNDYWxsc2l0ZSkge1xuICAgICAgICBjb25zdCBwcmV2Q3NpID0gY2FsbHNpdGVTb3VyY2VzSW5kZXg7XG4gICAgICAgIGNvbnN0IHByZXZMaW5lID0gY2FsbHNpdGVMaW5lO1xuICAgICAgICBjYWxsc2l0ZVNvdXJjZXNJbmRleCA9IGRlY29kZUludGVnZXIocmVhZGVyLCBjYWxsc2l0ZVNvdXJjZXNJbmRleCk7XG4gICAgICAgIGNvbnN0IHNhbWVTb3VyY2UgPSBwcmV2Q3NpID09PSBjYWxsc2l0ZVNvdXJjZXNJbmRleDtcbiAgICAgICAgY2FsbHNpdGVMaW5lID0gZGVjb2RlSW50ZWdlcihyZWFkZXIsIHNhbWVTb3VyY2UgPyBjYWxsc2l0ZUxpbmUgOiAwKTtcbiAgICAgICAgY2FsbHNpdGVDb2x1bW4gPSBkZWNvZGVJbnRlZ2VyKFxuICAgICAgICAgIHJlYWRlcixcbiAgICAgICAgICBzYW1lU291cmNlICYmIHByZXZMaW5lID09PSBjYWxsc2l0ZUxpbmUgPyBjYWxsc2l0ZUNvbHVtbiA6IDBcbiAgICAgICAgKTtcbiAgICAgICAgY2FsbHNpdGUgPSBbY2FsbHNpdGVTb3VyY2VzSW5kZXgsIGNhbGxzaXRlTGluZSwgY2FsbHNpdGVDb2x1bW5dO1xuICAgICAgfVxuICAgICAgcmFuZ2UuY2FsbHNpdGUgPSBjYWxsc2l0ZTtcbiAgICAgIGlmIChoYXNNb3JlVmxxKHJlYWRlciwgc2VtaSkpIHtcbiAgICAgICAgYmluZGluZ3MgPSBbXTtcbiAgICAgICAgZG8ge1xuICAgICAgICAgIGJpbmRpbmdMaW5lID0gZ2VuTGluZTtcbiAgICAgICAgICBiaW5kaW5nQ29sdW1uID0gZ2VuQ29sdW1uO1xuICAgICAgICAgIGNvbnN0IGV4cHJlc3Npb25zQ291bnQgPSBkZWNvZGVJbnRlZ2VyKHJlYWRlciwgMCk7XG4gICAgICAgICAgbGV0IGV4cHJlc3Npb25SYW5nZXM7XG4gICAgICAgICAgaWYgKGV4cHJlc3Npb25zQ291bnQgPCAtMSkge1xuICAgICAgICAgICAgZXhwcmVzc2lvblJhbmdlcyA9IFtbZGVjb2RlSW50ZWdlcihyZWFkZXIsIDApXV07XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gLTE7IGkgPiBleHByZXNzaW9uc0NvdW50OyBpLS0pIHtcbiAgICAgICAgICAgICAgY29uc3QgcHJldkJsID0gYmluZGluZ0xpbmU7XG4gICAgICAgICAgICAgIGJpbmRpbmdMaW5lID0gZGVjb2RlSW50ZWdlcihyZWFkZXIsIGJpbmRpbmdMaW5lKTtcbiAgICAgICAgICAgICAgYmluZGluZ0NvbHVtbiA9IGRlY29kZUludGVnZXIocmVhZGVyLCBiaW5kaW5nTGluZSA9PT0gcHJldkJsID8gYmluZGluZ0NvbHVtbiA6IDApO1xuICAgICAgICAgICAgICBjb25zdCBleHByZXNzaW9uID0gZGVjb2RlSW50ZWdlcihyZWFkZXIsIDApO1xuICAgICAgICAgICAgICBleHByZXNzaW9uUmFuZ2VzLnB1c2goW2V4cHJlc3Npb24sIGJpbmRpbmdMaW5lLCBiaW5kaW5nQ29sdW1uXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGV4cHJlc3Npb25SYW5nZXMgPSBbW2V4cHJlc3Npb25zQ291bnRdXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYmluZGluZ3MucHVzaChleHByZXNzaW9uUmFuZ2VzKTtcbiAgICAgICAgfSB3aGlsZSAoaGFzTW9yZVZscShyZWFkZXIsIHNlbWkpKTtcbiAgICAgIH1cbiAgICAgIHJhbmdlLmJpbmRpbmdzID0gYmluZGluZ3M7XG4gICAgICByYW5nZXMucHVzaChyYW5nZSk7XG4gICAgICBzdGFjay5wdXNoKHJhbmdlKTtcbiAgICB9XG4gICAgZ2VuTGluZSsrO1xuICAgIHJlYWRlci5wb3MgPSBzZW1pICsgMTtcbiAgfSB3aGlsZSAocmVhZGVyLnBvcyA8IGxlbmd0aCk7XG4gIHJldHVybiByYW5nZXM7XG59XG5mdW5jdGlvbiBlbmNvZGVHZW5lcmF0ZWRSYW5nZXMocmFuZ2VzKSB7XG4gIGlmIChyYW5nZXMubGVuZ3RoID09PSAwKSByZXR1cm4gXCJcIjtcbiAgY29uc3Qgd3JpdGVyID0gbmV3IFN0cmluZ1dyaXRlcigpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHJhbmdlcy5sZW5ndGg7ICkge1xuICAgIGkgPSBfZW5jb2RlR2VuZXJhdGVkUmFuZ2VzKHJhbmdlcywgaSwgd3JpdGVyLCBbMCwgMCwgMCwgMCwgMCwgMCwgMF0pO1xuICB9XG4gIHJldHVybiB3cml0ZXIuZmx1c2goKTtcbn1cbmZ1bmN0aW9uIF9lbmNvZGVHZW5lcmF0ZWRSYW5nZXMocmFuZ2VzLCBpbmRleCwgd3JpdGVyLCBzdGF0ZSkge1xuICBjb25zdCByYW5nZSA9IHJhbmdlc1tpbmRleF07XG4gIGNvbnN0IHtcbiAgICAwOiBzdGFydExpbmUsXG4gICAgMTogc3RhcnRDb2x1bW4sXG4gICAgMjogZW5kTGluZSxcbiAgICAzOiBlbmRDb2x1bW4sXG4gICAgaXNTY29wZSxcbiAgICBjYWxsc2l0ZSxcbiAgICBiaW5kaW5nc1xuICB9ID0gcmFuZ2U7XG4gIGlmIChzdGF0ZVswXSA8IHN0YXJ0TGluZSkge1xuICAgIGNhdGNodXBMaW5lKHdyaXRlciwgc3RhdGVbMF0sIHN0YXJ0TGluZSk7XG4gICAgc3RhdGVbMF0gPSBzdGFydExpbmU7XG4gICAgc3RhdGVbMV0gPSAwO1xuICB9IGVsc2UgaWYgKGluZGV4ID4gMCkge1xuICAgIHdyaXRlci53cml0ZShjb21tYSk7XG4gIH1cbiAgc3RhdGVbMV0gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgcmFuZ2VbMV0sIHN0YXRlWzFdKTtcbiAgY29uc3QgZmllbGRzID0gKHJhbmdlLmxlbmd0aCA9PT0gNiA/IDEgOiAwKSB8IChjYWxsc2l0ZSA/IDIgOiAwKSB8IChpc1Njb3BlID8gNCA6IDApO1xuICBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgZmllbGRzLCAwKTtcbiAgaWYgKHJhbmdlLmxlbmd0aCA9PT0gNikge1xuICAgIGNvbnN0IHsgNDogc291cmNlc0luZGV4LCA1OiBzY29wZXNJbmRleCB9ID0gcmFuZ2U7XG4gICAgaWYgKHNvdXJjZXNJbmRleCAhPT0gc3RhdGVbMl0pIHtcbiAgICAgIHN0YXRlWzNdID0gMDtcbiAgICB9XG4gICAgc3RhdGVbMl0gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgc291cmNlc0luZGV4LCBzdGF0ZVsyXSk7XG4gICAgc3RhdGVbM10gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgc2NvcGVzSW5kZXgsIHN0YXRlWzNdKTtcbiAgfVxuICBpZiAoY2FsbHNpdGUpIHtcbiAgICBjb25zdCB7IDA6IHNvdXJjZXNJbmRleCwgMTogY2FsbExpbmUsIDI6IGNhbGxDb2x1bW4gfSA9IHJhbmdlLmNhbGxzaXRlO1xuICAgIGlmIChzb3VyY2VzSW5kZXggIT09IHN0YXRlWzRdKSB7XG4gICAgICBzdGF0ZVs1XSA9IDA7XG4gICAgICBzdGF0ZVs2XSA9IDA7XG4gICAgfSBlbHNlIGlmIChjYWxsTGluZSAhPT0gc3RhdGVbNV0pIHtcbiAgICAgIHN0YXRlWzZdID0gMDtcbiAgICB9XG4gICAgc3RhdGVbNF0gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgc291cmNlc0luZGV4LCBzdGF0ZVs0XSk7XG4gICAgc3RhdGVbNV0gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgY2FsbExpbmUsIHN0YXRlWzVdKTtcbiAgICBzdGF0ZVs2XSA9IGVuY29kZUludGVnZXIod3JpdGVyLCBjYWxsQ29sdW1uLCBzdGF0ZVs2XSk7XG4gIH1cbiAgaWYgKGJpbmRpbmdzKSB7XG4gICAgZm9yIChjb25zdCBiaW5kaW5nIG9mIGJpbmRpbmdzKSB7XG4gICAgICBpZiAoYmluZGluZy5sZW5ndGggPiAxKSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgLWJpbmRpbmcubGVuZ3RoLCAwKTtcbiAgICAgIGNvbnN0IGV4cHJlc3Npb24gPSBiaW5kaW5nWzBdWzBdO1xuICAgICAgZW5jb2RlSW50ZWdlcih3cml0ZXIsIGV4cHJlc3Npb24sIDApO1xuICAgICAgbGV0IGJpbmRpbmdTdGFydExpbmUgPSBzdGFydExpbmU7XG4gICAgICBsZXQgYmluZGluZ1N0YXJ0Q29sdW1uID0gc3RhcnRDb2x1bW47XG4gICAgICBmb3IgKGxldCBpID0gMTsgaSA8IGJpbmRpbmcubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgZXhwUmFuZ2UgPSBiaW5kaW5nW2ldO1xuICAgICAgICBiaW5kaW5nU3RhcnRMaW5lID0gZW5jb2RlSW50ZWdlcih3cml0ZXIsIGV4cFJhbmdlWzFdLCBiaW5kaW5nU3RhcnRMaW5lKTtcbiAgICAgICAgYmluZGluZ1N0YXJ0Q29sdW1uID0gZW5jb2RlSW50ZWdlcih3cml0ZXIsIGV4cFJhbmdlWzJdLCBiaW5kaW5nU3RhcnRDb2x1bW4pO1xuICAgICAgICBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgZXhwUmFuZ2VbMF0sIDApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmb3IgKGluZGV4Kys7IGluZGV4IDwgcmFuZ2VzLmxlbmd0aDsgKSB7XG4gICAgY29uc3QgbmV4dCA9IHJhbmdlc1tpbmRleF07XG4gICAgY29uc3QgeyAwOiBsLCAxOiBjIH0gPSBuZXh0O1xuICAgIGlmIChsID4gZW5kTGluZSB8fCBsID09PSBlbmRMaW5lICYmIGMgPj0gZW5kQ29sdW1uKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgaW5kZXggPSBfZW5jb2RlR2VuZXJhdGVkUmFuZ2VzKHJhbmdlcywgaW5kZXgsIHdyaXRlciwgc3RhdGUpO1xuICB9XG4gIGlmIChzdGF0ZVswXSA8IGVuZExpbmUpIHtcbiAgICBjYXRjaHVwTGluZSh3cml0ZXIsIHN0YXRlWzBdLCBlbmRMaW5lKTtcbiAgICBzdGF0ZVswXSA9IGVuZExpbmU7XG4gICAgc3RhdGVbMV0gPSAwO1xuICB9IGVsc2Uge1xuICAgIHdyaXRlci53cml0ZShjb21tYSk7XG4gIH1cbiAgc3RhdGVbMV0gPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgZW5kQ29sdW1uLCBzdGF0ZVsxXSk7XG4gIHJldHVybiBpbmRleDtcbn1cbmZ1bmN0aW9uIGNhdGNodXBMaW5lKHdyaXRlciwgbGFzdExpbmUsIGxpbmUpIHtcbiAgZG8ge1xuICAgIHdyaXRlci53cml0ZShzZW1pY29sb24pO1xuICB9IHdoaWxlICgrK2xhc3RMaW5lIDwgbGluZSk7XG59XG5cbi8vIHNyYy9zb3VyY2VtYXAtY29kZWMudHNcbmZ1bmN0aW9uIGRlY29kZShtYXBwaW5ncykge1xuICBjb25zdCB7IGxlbmd0aCB9ID0gbWFwcGluZ3M7XG4gIGNvbnN0IHJlYWRlciA9IG5ldyBTdHJpbmdSZWFkZXIobWFwcGluZ3MpO1xuICBjb25zdCBkZWNvZGVkID0gW107XG4gIGxldCBnZW5Db2x1bW4gPSAwO1xuICBsZXQgc291cmNlc0luZGV4ID0gMDtcbiAgbGV0IHNvdXJjZUxpbmUgPSAwO1xuICBsZXQgc291cmNlQ29sdW1uID0gMDtcbiAgbGV0IG5hbWVzSW5kZXggPSAwO1xuICBkbyB7XG4gICAgY29uc3Qgc2VtaSA9IHJlYWRlci5pbmRleE9mKFwiO1wiKTtcbiAgICBjb25zdCBsaW5lID0gW107XG4gICAgbGV0IHNvcnRlZCA9IHRydWU7XG4gICAgbGV0IGxhc3RDb2wgPSAwO1xuICAgIGdlbkNvbHVtbiA9IDA7XG4gICAgd2hpbGUgKHJlYWRlci5wb3MgPCBzZW1pKSB7XG4gICAgICBsZXQgc2VnO1xuICAgICAgZ2VuQ29sdW1uID0gZGVjb2RlSW50ZWdlcihyZWFkZXIsIGdlbkNvbHVtbik7XG4gICAgICBpZiAoZ2VuQ29sdW1uIDwgbGFzdENvbCkgc29ydGVkID0gZmFsc2U7XG4gICAgICBsYXN0Q29sID0gZ2VuQ29sdW1uO1xuICAgICAgaWYgKGhhc01vcmVWbHEocmVhZGVyLCBzZW1pKSkge1xuICAgICAgICBzb3VyY2VzSW5kZXggPSBkZWNvZGVJbnRlZ2VyKHJlYWRlciwgc291cmNlc0luZGV4KTtcbiAgICAgICAgc291cmNlTGluZSA9IGRlY29kZUludGVnZXIocmVhZGVyLCBzb3VyY2VMaW5lKTtcbiAgICAgICAgc291cmNlQ29sdW1uID0gZGVjb2RlSW50ZWdlcihyZWFkZXIsIHNvdXJjZUNvbHVtbik7XG4gICAgICAgIGlmIChoYXNNb3JlVmxxKHJlYWRlciwgc2VtaSkpIHtcbiAgICAgICAgICBuYW1lc0luZGV4ID0gZGVjb2RlSW50ZWdlcihyZWFkZXIsIG5hbWVzSW5kZXgpO1xuICAgICAgICAgIHNlZyA9IFtnZW5Db2x1bW4sIHNvdXJjZXNJbmRleCwgc291cmNlTGluZSwgc291cmNlQ29sdW1uLCBuYW1lc0luZGV4XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZWcgPSBbZ2VuQ29sdW1uLCBzb3VyY2VzSW5kZXgsIHNvdXJjZUxpbmUsIHNvdXJjZUNvbHVtbl07XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlZyA9IFtnZW5Db2x1bW5dO1xuICAgICAgfVxuICAgICAgbGluZS5wdXNoKHNlZyk7XG4gICAgICByZWFkZXIucG9zKys7XG4gICAgfVxuICAgIGlmICghc29ydGVkKSBzb3J0KGxpbmUpO1xuICAgIGRlY29kZWQucHVzaChsaW5lKTtcbiAgICByZWFkZXIucG9zID0gc2VtaSArIDE7XG4gIH0gd2hpbGUgKHJlYWRlci5wb3MgPD0gbGVuZ3RoKTtcbiAgcmV0dXJuIGRlY29kZWQ7XG59XG5mdW5jdGlvbiBzb3J0KGxpbmUpIHtcbiAgbGluZS5zb3J0KHNvcnRDb21wYXJhdG9yKTtcbn1cbmZ1bmN0aW9uIHNvcnRDb21wYXJhdG9yKGEsIGIpIHtcbiAgcmV0dXJuIGFbMF0gLSBiWzBdO1xufVxuZnVuY3Rpb24gZW5jb2RlKGRlY29kZWQpIHtcbiAgY29uc3Qgd3JpdGVyID0gbmV3IFN0cmluZ1dyaXRlcigpO1xuICBsZXQgc291cmNlc0luZGV4ID0gMDtcbiAgbGV0IHNvdXJjZUxpbmUgPSAwO1xuICBsZXQgc291cmNlQ29sdW1uID0gMDtcbiAgbGV0IG5hbWVzSW5kZXggPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGRlY29kZWQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBsaW5lID0gZGVjb2RlZFtpXTtcbiAgICBpZiAoaSA+IDApIHdyaXRlci53cml0ZShzZW1pY29sb24pO1xuICAgIGlmIChsaW5lLmxlbmd0aCA9PT0gMCkgY29udGludWU7XG4gICAgbGV0IGdlbkNvbHVtbiA9IDA7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBsaW5lLmxlbmd0aDsgaisrKSB7XG4gICAgICBjb25zdCBzZWdtZW50ID0gbGluZVtqXTtcbiAgICAgIGlmIChqID4gMCkgd3JpdGVyLndyaXRlKGNvbW1hKTtcbiAgICAgIGdlbkNvbHVtbiA9IGVuY29kZUludGVnZXIod3JpdGVyLCBzZWdtZW50WzBdLCBnZW5Db2x1bW4pO1xuICAgICAgaWYgKHNlZ21lbnQubGVuZ3RoID09PSAxKSBjb250aW51ZTtcbiAgICAgIHNvdXJjZXNJbmRleCA9IGVuY29kZUludGVnZXIod3JpdGVyLCBzZWdtZW50WzFdLCBzb3VyY2VzSW5kZXgpO1xuICAgICAgc291cmNlTGluZSA9IGVuY29kZUludGVnZXIod3JpdGVyLCBzZWdtZW50WzJdLCBzb3VyY2VMaW5lKTtcbiAgICAgIHNvdXJjZUNvbHVtbiA9IGVuY29kZUludGVnZXIod3JpdGVyLCBzZWdtZW50WzNdLCBzb3VyY2VDb2x1bW4pO1xuICAgICAgaWYgKHNlZ21lbnQubGVuZ3RoID09PSA0KSBjb250aW51ZTtcbiAgICAgIG5hbWVzSW5kZXggPSBlbmNvZGVJbnRlZ2VyKHdyaXRlciwgc2VnbWVudFs0XSwgbmFtZXNJbmRleCk7XG4gICAgfVxuICB9XG4gIHJldHVybiB3cml0ZXIuZmx1c2goKTtcbn1cbmV4cG9ydCB7XG4gIGRlY29kZSxcbiAgZGVjb2RlR2VuZXJhdGVkUmFuZ2VzLFxuICBkZWNvZGVPcmlnaW5hbFNjb3BlcyxcbiAgZW5jb2RlLFxuICBlbmNvZGVHZW5lcmF0ZWRSYW5nZXMsXG4gIGVuY29kZU9yaWdpbmFsU2NvcGVzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c291cmNlbWFwLWNvZGVjLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnyMap: function() { return /* binding */ FlattenMap; },\n/* harmony export */   FlattenMap: function() { return /* binding */ FlattenMap; },\n/* harmony export */   GREATEST_LOWER_BOUND: function() { return /* binding */ GREATEST_LOWER_BOUND; },\n/* harmony export */   LEAST_UPPER_BOUND: function() { return /* binding */ LEAST_UPPER_BOUND; },\n/* harmony export */   TraceMap: function() { return /* binding */ TraceMap; },\n/* harmony export */   allGeneratedPositionsFor: function() { return /* binding */ allGeneratedPositionsFor; },\n/* harmony export */   decodedMap: function() { return /* binding */ decodedMap; },\n/* harmony export */   decodedMappings: function() { return /* binding */ decodedMappings; },\n/* harmony export */   eachMapping: function() { return /* binding */ eachMapping; },\n/* harmony export */   encodedMap: function() { return /* binding */ encodedMap; },\n/* harmony export */   encodedMappings: function() { return /* binding */ encodedMappings; },\n/* harmony export */   generatedPositionFor: function() { return /* binding */ generatedPositionFor; },\n/* harmony export */   isIgnored: function() { return /* binding */ isIgnored; },\n/* harmony export */   originalPositionFor: function() { return /* binding */ originalPositionFor; },\n/* harmony export */   presortedDecodedMap: function() { return /* binding */ presortedDecodedMap; },\n/* harmony export */   sourceContentFor: function() { return /* binding */ sourceContentFor; },\n/* harmony export */   traceSegment: function() { return /* binding */ traceSegment; }\n/* harmony export */ });\n/* harmony import */ var _jridgewell_sourcemap_codec__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jridgewell/sourcemap-codec */ \"(app-pages-browser)/./node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs\");\n/* harmony import */ var _jridgewell_resolve_uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jridgewell/resolve-uri */ \"(app-pages-browser)/./node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js\");\n// src/trace-mapping.ts\n\n\n// src/resolve.ts\n\n\n// src/strip-filename.ts\nfunction stripFilename(path) {\n  if (!path) return \"\";\n  const index = path.lastIndexOf(\"/\");\n  return path.slice(0, index + 1);\n}\n\n// src/resolve.ts\nfunction resolver(mapUrl, sourceRoot) {\n  const from = stripFilename(mapUrl);\n  const prefix = sourceRoot ? sourceRoot + \"/\" : \"\";\n  return (source) => _jridgewell_resolve_uri__WEBPACK_IMPORTED_MODULE_1__(prefix + (source || \"\"), from);\n}\n\n// src/sourcemap-segment.ts\nvar COLUMN = 0;\nvar SOURCES_INDEX = 1;\nvar SOURCE_LINE = 2;\nvar SOURCE_COLUMN = 3;\nvar NAMES_INDEX = 4;\nvar REV_GENERATED_LINE = 1;\nvar REV_GENERATED_COLUMN = 2;\n\n// src/sort.ts\nfunction maybeSort(mappings, owned) {\n  const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n  if (unsortedIndex === mappings.length) return mappings;\n  if (!owned) mappings = mappings.slice();\n  for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n    mappings[i] = sortSegments(mappings[i], owned);\n  }\n  return mappings;\n}\nfunction nextUnsortedSegmentLine(mappings, start) {\n  for (let i = start; i < mappings.length; i++) {\n    if (!isSorted(mappings[i])) return i;\n  }\n  return mappings.length;\n}\nfunction isSorted(line) {\n  for (let j = 1; j < line.length; j++) {\n    if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction sortSegments(line, owned) {\n  if (!owned) line = line.slice();\n  return line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n  return a[COLUMN] - b[COLUMN];\n}\n\n// src/binary-search.ts\nvar found = false;\nfunction binarySearch(haystack, needle, low, high) {\n  while (low <= high) {\n    const mid = low + (high - low >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n  found = false;\n  return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction lowerBound(haystack, needle, index) {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction memoizedState() {\n  return {\n    lastKey: -1,\n    lastNeedle: -1,\n    lastIndex: -1\n  };\n}\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n  const { lastKey, lastNeedle, lastIndex } = state;\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n    if (needle >= lastNeedle) {\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n  return state.lastIndex = binarySearch(haystack, needle, low, high);\n}\n\n// src/by-source.ts\nfunction buildBySources(decoded, memos) {\n  const sources = memos.map(buildNullArray);\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      if (seg.length === 1) continue;\n      const sourceIndex2 = seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      const originalSource = sources[sourceIndex2];\n      const originalLine = originalSource[sourceLine] || (originalSource[sourceLine] = []);\n      const memo = memos[sourceIndex2];\n      let index = upperBound(\n        originalLine,\n        sourceColumn,\n        memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine)\n      );\n      memo.lastIndex = ++index;\n      insert(originalLine, index, [sourceColumn, i, seg[COLUMN]]);\n    }\n  }\n  return sources;\n}\nfunction insert(array, index, value) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\nfunction buildNullArray() {\n  return { __proto__: null };\n}\n\n// src/types.ts\nfunction parse(map) {\n  return typeof map === \"string\" ? JSON.parse(map) : map;\n}\n\n// src/flatten-map.ts\nvar FlattenMap = function(map, mapUrl) {\n  const parsed = parse(map);\n  if (!(\"sections\" in parsed)) {\n    return new TraceMap(parsed, mapUrl);\n  }\n  const mappings = [];\n  const sources = [];\n  const sourcesContent = [];\n  const names = [];\n  const ignoreList = [];\n  recurse(\n    parsed,\n    mapUrl,\n    mappings,\n    sources,\n    sourcesContent,\n    names,\n    ignoreList,\n    0,\n    0,\n    Infinity,\n    Infinity\n  );\n  const joined = {\n    version: 3,\n    file: parsed.file,\n    names,\n    sources,\n    sourcesContent,\n    mappings,\n    ignoreList\n  };\n  return presortedDecodedMap(joined);\n};\nfunction recurse(input, mapUrl, mappings, sources, sourcesContent, names, ignoreList, lineOffset, columnOffset, stopLine, stopColumn) {\n  const { sections } = input;\n  for (let i = 0; i < sections.length; i++) {\n    const { map, offset } = sections[i];\n    let sl = stopLine;\n    let sc = stopColumn;\n    if (i + 1 < sections.length) {\n      const nextOffset = sections[i + 1].offset;\n      sl = Math.min(stopLine, lineOffset + nextOffset.line);\n      if (sl === stopLine) {\n        sc = Math.min(stopColumn, columnOffset + nextOffset.column);\n      } else if (sl < stopLine) {\n        sc = columnOffset + nextOffset.column;\n      }\n    }\n    addSection(\n      map,\n      mapUrl,\n      mappings,\n      sources,\n      sourcesContent,\n      names,\n      ignoreList,\n      lineOffset + offset.line,\n      columnOffset + offset.column,\n      sl,\n      sc\n    );\n  }\n}\nfunction addSection(input, mapUrl, mappings, sources, sourcesContent, names, ignoreList, lineOffset, columnOffset, stopLine, stopColumn) {\n  const parsed = parse(input);\n  if (\"sections\" in parsed) return recurse(...arguments);\n  const map = new TraceMap(parsed, mapUrl);\n  const sourcesOffset = sources.length;\n  const namesOffset = names.length;\n  const decoded = decodedMappings(map);\n  const { resolvedSources, sourcesContent: contents, ignoreList: ignores } = map;\n  append(sources, resolvedSources);\n  append(names, map.names);\n  if (contents) append(sourcesContent, contents);\n  else for (let i = 0; i < resolvedSources.length; i++) sourcesContent.push(null);\n  if (ignores) for (let i = 0; i < ignores.length; i++) ignoreList.push(ignores[i] + sourcesOffset);\n  for (let i = 0; i < decoded.length; i++) {\n    const lineI = lineOffset + i;\n    if (lineI > stopLine) return;\n    const out = getLine(mappings, lineI);\n    const cOffset = i === 0 ? columnOffset : 0;\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const column = cOffset + seg[COLUMN];\n      if (lineI === stopLine && column >= stopColumn) return;\n      if (seg.length === 1) {\n        out.push([column]);\n        continue;\n      }\n      const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      out.push(\n        seg.length === 4 ? [column, sourcesIndex, sourceLine, sourceColumn] : [column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]]\n      );\n    }\n  }\n}\nfunction append(arr, other) {\n  for (let i = 0; i < other.length; i++) arr.push(other[i]);\n}\nfunction getLine(arr, index) {\n  for (let i = arr.length; i <= index; i++) arr[i] = [];\n  return arr[index];\n}\n\n// src/trace-mapping.ts\nvar LINE_GTR_ZERO = \"`line` must be greater than 0 (lines start at line 1)\";\nvar COL_GTR_EQ_ZERO = \"`column` must be greater than or equal to 0 (columns start at column 0)\";\nvar LEAST_UPPER_BOUND = -1;\nvar GREATEST_LOWER_BOUND = 1;\nvar TraceMap = class {\n  constructor(map, mapUrl) {\n    const isString = typeof map === \"string\";\n    if (!isString && map._decodedMemo) return map;\n    const parsed = parse(map);\n    const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n    this.version = version;\n    this.file = file;\n    this.names = names || [];\n    this.sourceRoot = sourceRoot;\n    this.sources = sources;\n    this.sourcesContent = sourcesContent;\n    this.ignoreList = parsed.ignoreList || parsed.x_google_ignoreList || void 0;\n    const resolve = resolver(mapUrl, sourceRoot);\n    this.resolvedSources = sources.map(resolve);\n    const { mappings } = parsed;\n    if (typeof mappings === \"string\") {\n      this._encoded = mappings;\n      this._decoded = void 0;\n    } else if (Array.isArray(mappings)) {\n      this._encoded = void 0;\n      this._decoded = maybeSort(mappings, isString);\n    } else if (parsed.sections) {\n      throw new Error(`TraceMap passed sectioned source map, please use FlattenMap export instead`);\n    } else {\n      throw new Error(`invalid source map: ${JSON.stringify(parsed)}`);\n    }\n    this._decodedMemo = memoizedState();\n    this._bySources = void 0;\n    this._bySourceMemos = void 0;\n  }\n};\nfunction cast(map) {\n  return map;\n}\nfunction encodedMappings(map) {\n  var _a, _b;\n  return (_b = (_a = cast(map))._encoded) != null ? _b : _a._encoded = (0,_jridgewell_sourcemap_codec__WEBPACK_IMPORTED_MODULE_0__.encode)(cast(map)._decoded);\n}\nfunction decodedMappings(map) {\n  var _a;\n  return (_a = cast(map))._decoded || (_a._decoded = (0,_jridgewell_sourcemap_codec__WEBPACK_IMPORTED_MODULE_0__.decode)(cast(map)._encoded));\n}\nfunction traceSegment(map, line, column) {\n  const decoded = decodedMappings(map);\n  if (line >= decoded.length) return null;\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    GREATEST_LOWER_BOUND\n  );\n  return index === -1 ? null : segments[index];\n}\nfunction originalPositionFor(map, needle) {\n  let { line, column, bias } = needle;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n  const decoded = decodedMappings(map);\n  if (line >= decoded.length) return OMapping(null, null, null, null);\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    bias || GREATEST_LOWER_BOUND\n  );\n  if (index === -1) return OMapping(null, null, null, null);\n  const segment = segments[index];\n  if (segment.length === 1) return OMapping(null, null, null, null);\n  const { names, resolvedSources } = map;\n  return OMapping(\n    resolvedSources[segment[SOURCES_INDEX]],\n    segment[SOURCE_LINE] + 1,\n    segment[SOURCE_COLUMN],\n    segment.length === 5 ? names[segment[NAMES_INDEX]] : null\n  );\n}\nfunction generatedPositionFor(map, needle) {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n}\nfunction allGeneratedPositionsFor(map, needle) {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || LEAST_UPPER_BOUND, true);\n}\nfunction eachMapping(map, cb) {\n  const decoded = decodedMappings(map);\n  const { names, resolvedSources } = map;\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const generatedLine = i + 1;\n      const generatedColumn = seg[0];\n      let source = null;\n      let originalLine = null;\n      let originalColumn = null;\n      let name = null;\n      if (seg.length !== 1) {\n        source = resolvedSources[seg[1]];\n        originalLine = seg[2] + 1;\n        originalColumn = seg[3];\n      }\n      if (seg.length === 5) name = names[seg[4]];\n      cb({\n        generatedLine,\n        generatedColumn,\n        source,\n        originalLine,\n        originalColumn,\n        name\n      });\n    }\n  }\n}\nfunction sourceIndex(map, source) {\n  const { sources, resolvedSources } = map;\n  let index = sources.indexOf(source);\n  if (index === -1) index = resolvedSources.indexOf(source);\n  return index;\n}\nfunction sourceContentFor(map, source) {\n  const { sourcesContent } = map;\n  if (sourcesContent == null) return null;\n  const index = sourceIndex(map, source);\n  return index === -1 ? null : sourcesContent[index];\n}\nfunction isIgnored(map, source) {\n  const { ignoreList } = map;\n  if (ignoreList == null) return false;\n  const index = sourceIndex(map, source);\n  return index === -1 ? false : ignoreList.includes(index);\n}\nfunction presortedDecodedMap(map, mapUrl) {\n  const tracer = new TraceMap(clone(map, []), mapUrl);\n  cast(tracer)._decoded = map.mappings;\n  return tracer;\n}\nfunction decodedMap(map) {\n  return clone(map, decodedMappings(map));\n}\nfunction encodedMap(map) {\n  return clone(map, encodedMappings(map));\n}\nfunction clone(map, mappings) {\n  return {\n    version: map.version,\n    file: map.file,\n    names: map.names,\n    sourceRoot: map.sourceRoot,\n    sources: map.sources,\n    sourcesContent: map.sourcesContent,\n    mappings,\n    ignoreList: map.ignoreList || map.x_google_ignoreList\n  };\n}\nfunction OMapping(source, line, column, name) {\n  return { source, line, column, name };\n}\nfunction GMapping(line, column) {\n  return { line, column };\n}\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (found) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\nfunction sliceGeneratedPositions(segments, memo, line, column, bias) {\n  let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\n  if (!found && bias === LEAST_UPPER_BOUND) min++;\n  if (min === -1 || min === segments.length) return [];\n  const matchedColumn = found ? column : segments[min][COLUMN];\n  if (!found) min = lowerBound(segments, matchedColumn, min);\n  const max = upperBound(segments, matchedColumn, min);\n  const result = [];\n  for (; min <= max; min++) {\n    const segment = segments[min];\n    result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\n  }\n  return result;\n}\nfunction generatedPosition(map, source, line, column, bias, all) {\n  var _a;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n  const { sources, resolvedSources } = map;\n  let sourceIndex2 = sources.indexOf(source);\n  if (sourceIndex2 === -1) sourceIndex2 = resolvedSources.indexOf(source);\n  if (sourceIndex2 === -1) return all ? [] : GMapping(null, null);\n  const generated = (_a = cast(map))._bySources || (_a._bySources = buildBySources(\n    decodedMappings(map),\n    cast(map)._bySourceMemos = sources.map(memoizedState)\n  ));\n  const segments = generated[sourceIndex2][line];\n  if (segments == null) return all ? [] : GMapping(null, null);\n  const memo = cast(map)._bySourceMemos[sourceIndex2];\n  if (all) return sliceGeneratedPositions(segments, memo, line, column, bias);\n  const index = traceSegmentInternal(segments, memo, line, column, bias);\n  if (index === -1) return GMapping(null, null);\n  const segment = segments[index];\n  return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n}\n\n//# sourceMappingURL=trace-mapping.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: function() { return /* binding */ clsx; }\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ __webpack_exports__[\"default\"] = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWMsYUFBYSwrQ0FBK0MsZ0RBQWdELGVBQWUsUUFBUSxJQUFJLDBDQUEwQyx5Q0FBeUMsU0FBZ0IsZ0JBQWdCLHdDQUF3QyxJQUFJLG1EQUFtRCxTQUFTLCtEQUFlLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcz9iMTNkIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHIoZSl7dmFyIHQsZixuPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlKW4rPWU7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgZSlpZihBcnJheS5pc0FycmF5KGUpKXt2YXIgbz1lLmxlbmd0aDtmb3IodD0wO3Q8bzt0KyspZVt0XSYmKGY9cihlW3RdKSkmJihuJiYobis9XCIgXCIpLG4rPWYpfWVsc2UgZm9yKGYgaW4gZSllW2ZdJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtyZXR1cm4gbn1leHBvcnQgZnVuY3Rpb24gY2xzeCgpe2Zvcih2YXIgZSx0LGY9MCxuPVwiXCIsbz1hcmd1bWVudHMubGVuZ3RoO2Y8bztmKyspKGU9YXJndW1lbnRzW2ZdKSYmKHQ9cihlKSkmJihuJiYobis9XCIgXCIpLG4rPXQpO3JldHVybiBufWV4cG9ydCBkZWZhdWx0IGNsc3g7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prism-react-renderer/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/prism-react-renderer/dist/index.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Highlight: function() { return /* binding */ Highlight2; },\n/* harmony export */   Prism: function() { return /* binding */ Prism; },\n/* harmony export */   normalizeTokens: function() { return /* binding */ normalizeTokens_default; },\n/* harmony export */   themes: function() { return /* binding */ themes_exports; },\n/* harmony export */   useTokenize: function() { return /* binding */ useTokenize; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// ../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js\nvar require_prism = __commonJS({\n  \"../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js\"(exports, module) {\n    var Prism2 = function() {\n      var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n      var uniqueId = 0;\n      var plainTextGrammar = {};\n      var _ = {\n        /**\n         * A namespace for utility methods.\n         *\n         * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n         * change or disappear at any time.\n         *\n         * @namespace\n         * @memberof Prism\n         */\n        util: {\n          encode: function encode(tokens) {\n            if (tokens instanceof Token) {\n              return new Token(tokens.type, encode(tokens.content), tokens.alias);\n            } else if (Array.isArray(tokens)) {\n              return tokens.map(encode);\n            } else {\n              return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n            }\n          },\n          /**\n           * Returns the name of the type of the given value.\n           *\n           * @param {any} o\n           * @returns {string}\n           * @example\n           * type(null)      === 'Null'\n           * type(undefined) === 'Undefined'\n           * type(123)       === 'Number'\n           * type('foo')     === 'String'\n           * type(true)      === 'Boolean'\n           * type([1, 2])    === 'Array'\n           * type({})        === 'Object'\n           * type(String)    === 'Function'\n           * type(/abc+/)    === 'RegExp'\n           */\n          type: function(o) {\n            return Object.prototype.toString.call(o).slice(8, -1);\n          },\n          /**\n           * Returns a unique number for the given object. Later calls will still return the same number.\n           *\n           * @param {Object} obj\n           * @returns {number}\n           */\n          objId: function(obj) {\n            if (!obj[\"__id\"]) {\n              Object.defineProperty(obj, \"__id\", { value: ++uniqueId });\n            }\n            return obj[\"__id\"];\n          },\n          /**\n           * Creates a deep clone of the given object.\n           *\n           * The main intended use of this function is to clone language definitions.\n           *\n           * @param {T} o\n           * @param {Record<number, any>} [visited]\n           * @returns {T}\n           * @template T\n           */\n          clone: function deepClone(o, visited) {\n            visited = visited || {};\n            var clone;\n            var id;\n            switch (_.util.type(o)) {\n              case \"Object\":\n                id = _.util.objId(o);\n                if (visited[id]) {\n                  return visited[id];\n                }\n                clone = /** @type {Record<string, any>} */\n                {};\n                visited[id] = clone;\n                for (var key in o) {\n                  if (o.hasOwnProperty(key)) {\n                    clone[key] = deepClone(o[key], visited);\n                  }\n                }\n                return (\n                  /** @type {any} */\n                  clone\n                );\n              case \"Array\":\n                id = _.util.objId(o);\n                if (visited[id]) {\n                  return visited[id];\n                }\n                clone = [];\n                visited[id] = clone;\n                /** @type {Array} */\n                /** @type {any} */\n                o.forEach(function(v, i) {\n                  clone[i] = deepClone(v, visited);\n                });\n                return (\n                  /** @type {any} */\n                  clone\n                );\n              default:\n                return o;\n            }\n          },\n          /**\n           * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n           *\n           * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n           *\n           * @param {Element} element\n           * @returns {string}\n           */\n          getLanguage: function(element) {\n            while (element) {\n              var m = lang.exec(element.className);\n              if (m) {\n                return m[1].toLowerCase();\n              }\n              element = element.parentElement;\n            }\n            return \"none\";\n          },\n          /**\n           * Sets the Prism `language-xxxx` class of the given element.\n           *\n           * @param {Element} element\n           * @param {string} language\n           * @returns {void}\n           */\n          setLanguage: function(element, language) {\n            element.className = element.className.replace(RegExp(lang, \"gi\"), \"\");\n            element.classList.add(\"language-\" + language);\n          },\n          /**\n           * Returns whether a given class is active for `element`.\n           *\n           * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n           * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n           * given class is just the given class with a `no-` prefix.\n           *\n           * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n           * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n           * ancestors have the given class or the negated version of it, then the default activation will be returned.\n           *\n           * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n           * version of it, the class is considered active.\n           *\n           * @param {Element} element\n           * @param {string} className\n           * @param {boolean} [defaultActivation=false]\n           * @returns {boolean}\n           */\n          isActive: function(element, className, defaultActivation) {\n            var no = \"no-\" + className;\n            while (element) {\n              var classList = element.classList;\n              if (classList.contains(className)) {\n                return true;\n              }\n              if (classList.contains(no)) {\n                return false;\n              }\n              element = element.parentElement;\n            }\n            return !!defaultActivation;\n          }\n        },\n        /**\n         * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n         *\n         * @namespace\n         * @memberof Prism\n         * @public\n         */\n        languages: {\n          /**\n           * The grammar for plain, unformatted text.\n           */\n          plain: plainTextGrammar,\n          plaintext: plainTextGrammar,\n          text: plainTextGrammar,\n          txt: plainTextGrammar,\n          /**\n           * Creates a deep copy of the language with the given id and appends the given tokens.\n           *\n           * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n           * will be overwritten at its original position.\n           *\n           * ## Best practices\n           *\n           * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n           * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n           * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n           *\n           * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n           * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n           *\n           * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n           * @param {Grammar} redef The new tokens to append.\n           * @returns {Grammar} The new language created.\n           * @public\n           * @example\n           * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n           *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n           *     // at its original position\n           *     'comment': { ... },\n           *     // CSS doesn't have a 'color' token, so this token will be appended\n           *     'color': /\\b(?:red|green|blue)\\b/\n           * });\n           */\n          extend: function(id, redef) {\n            var lang2 = _.util.clone(_.languages[id]);\n            for (var key in redef) {\n              lang2[key] = redef[key];\n            }\n            return lang2;\n          },\n          /**\n           * Inserts tokens _before_ another token in a language definition or any other grammar.\n           *\n           * ## Usage\n           *\n           * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n           * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n           * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n           * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n           * this:\n           *\n           * ```js\n           * Prism.languages.markup.style = {\n           *     // token\n           * };\n           * ```\n           *\n           * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n           * before existing tokens. For the CSS example above, you would use it like this:\n           *\n           * ```js\n           * Prism.languages.insertBefore('markup', 'cdata', {\n           *     'style': {\n           *         // token\n           *     }\n           * });\n           * ```\n           *\n           * ## Special cases\n           *\n           * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n           * will be ignored.\n           *\n           * This behavior can be used to insert tokens after `before`:\n           *\n           * ```js\n           * Prism.languages.insertBefore('markup', 'comment', {\n           *     'comment': Prism.languages.markup.comment,\n           *     // tokens after 'comment'\n           * });\n           * ```\n           *\n           * ## Limitations\n           *\n           * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n           * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n           * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n           * deleting properties which is necessary to insert at arbitrary positions.\n           *\n           * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n           * Instead, it will create a new object and replace all references to the target object with the new one. This\n           * can be done without temporarily deleting properties, so the iteration order is well-defined.\n           *\n           * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n           * you hold the target object in a variable, then the value of the variable will not change.\n           *\n           * ```js\n           * var oldMarkup = Prism.languages.markup;\n           * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n           *\n           * assert(oldMarkup !== Prism.languages.markup);\n           * assert(newMarkup === Prism.languages.markup);\n           * ```\n           *\n           * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n           * object to be modified.\n           * @param {string} before The key to insert before.\n           * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n           * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n           * object to be modified.\n           *\n           * Defaults to `Prism.languages`.\n           * @returns {Grammar} The new grammar object.\n           * @public\n           */\n          insertBefore: function(inside, before, insert, root) {\n            root = root || /** @type {any} */\n            _.languages;\n            var grammar = root[inside];\n            var ret = {};\n            for (var token in grammar) {\n              if (grammar.hasOwnProperty(token)) {\n                if (token == before) {\n                  for (var newToken in insert) {\n                    if (insert.hasOwnProperty(newToken)) {\n                      ret[newToken] = insert[newToken];\n                    }\n                  }\n                }\n                if (!insert.hasOwnProperty(token)) {\n                  ret[token] = grammar[token];\n                }\n              }\n            }\n            var old = root[inside];\n            root[inside] = ret;\n            _.languages.DFS(_.languages, function(key, value) {\n              if (value === old && key != inside) {\n                this[key] = ret;\n              }\n            });\n            return ret;\n          },\n          // Traverse a language definition with Depth First Search\n          DFS: function DFS(o, callback, type, visited) {\n            visited = visited || {};\n            var objId = _.util.objId;\n            for (var i in o) {\n              if (o.hasOwnProperty(i)) {\n                callback.call(o, i, o[i], type || i);\n                var property = o[i];\n                var propertyType = _.util.type(property);\n                if (propertyType === \"Object\" && !visited[objId(property)]) {\n                  visited[objId(property)] = true;\n                  DFS(property, callback, null, visited);\n                } else if (propertyType === \"Array\" && !visited[objId(property)]) {\n                  visited[objId(property)] = true;\n                  DFS(property, callback, i, visited);\n                }\n              }\n            }\n          }\n        },\n        plugins: {},\n        /**\n         * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n         * and the language definitions to use, and returns a string with the HTML produced.\n         *\n         * The following hooks will be run:\n         * 1. `before-tokenize`\n         * 2. `after-tokenize`\n         * 3. `wrap`: On each {@link Token}.\n         *\n         * @param {string} text A string with the code to be highlighted.\n         * @param {Grammar} grammar An object containing the tokens to use.\n         *\n         * Usually a language definition like `Prism.languages.markup`.\n         * @param {string} language The name of the language definition passed to `grammar`.\n         * @returns {string} The highlighted HTML.\n         * @memberof Prism\n         * @public\n         * @example\n         * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n         */\n        highlight: function(text, grammar, language) {\n          var env = {\n            code: text,\n            grammar,\n            language\n          };\n          _.hooks.run(\"before-tokenize\", env);\n          if (!env.grammar) {\n            throw new Error('The language \"' + env.language + '\" has no grammar.');\n          }\n          env.tokens = _.tokenize(env.code, env.grammar);\n          _.hooks.run(\"after-tokenize\", env);\n          return Token.stringify(_.util.encode(env.tokens), env.language);\n        },\n        /**\n         * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n         * and the language definitions to use, and returns an array with the tokenized code.\n         *\n         * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n         *\n         * This method could be useful in other contexts as well, as a very crude parser.\n         *\n         * @param {string} text A string with the code to be highlighted.\n         * @param {Grammar} grammar An object containing the tokens to use.\n         *\n         * Usually a language definition like `Prism.languages.markup`.\n         * @returns {TokenStream} An array of strings and tokens, a token stream.\n         * @memberof Prism\n         * @public\n         * @example\n         * let code = `var foo = 0;`;\n         * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n         * tokens.forEach(token => {\n         *     if (token instanceof Prism.Token && token.type === 'number') {\n         *         console.log(`Found numeric literal: ${token.content}`);\n         *     }\n         * });\n         */\n        tokenize: function(text, grammar) {\n          var rest = grammar.rest;\n          if (rest) {\n            for (var token in rest) {\n              grammar[token] = rest[token];\n            }\n            delete grammar.rest;\n          }\n          var tokenList = new LinkedList();\n          addAfter(tokenList, tokenList.head, text);\n          matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n          return toArray(tokenList);\n        },\n        /**\n         * @namespace\n         * @memberof Prism\n         * @public\n         */\n        hooks: {\n          all: {},\n          /**\n           * Adds the given callback to the list of callbacks for the given hook.\n           *\n           * The callback will be invoked when the hook it is registered for is run.\n           * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n           *\n           * One callback function can be registered to multiple hooks and the same hook multiple times.\n           *\n           * @param {string} name The name of the hook.\n           * @param {HookCallback} callback The callback function which is given environment variables.\n           * @public\n           */\n          add: function(name, callback) {\n            var hooks2 = _.hooks.all;\n            hooks2[name] = hooks2[name] || [];\n            hooks2[name].push(callback);\n          },\n          /**\n           * Runs a hook invoking all registered callbacks with the given environment variables.\n           *\n           * Callbacks will be invoked synchronously and in the order in which they were registered.\n           *\n           * @param {string} name The name of the hook.\n           * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n           * @public\n           */\n          run: function(name, env) {\n            var callbacks = _.hooks.all[name];\n            if (!callbacks || !callbacks.length) {\n              return;\n            }\n            for (var i = 0, callback; callback = callbacks[i++]; ) {\n              callback(env);\n            }\n          }\n        },\n        Token\n      };\n      function Token(type, content, alias, matchedStr) {\n        this.type = type;\n        this.content = content;\n        this.alias = alias;\n        this.length = (matchedStr || \"\").length | 0;\n      }\n      Token.stringify = function stringify(o, language) {\n        if (typeof o == \"string\") {\n          return o;\n        }\n        if (Array.isArray(o)) {\n          var s = \"\";\n          o.forEach(function(e) {\n            s += stringify(e, language);\n          });\n          return s;\n        }\n        var env = {\n          type: o.type,\n          content: stringify(o.content, language),\n          tag: \"span\",\n          classes: [\"token\", o.type],\n          attributes: {},\n          language\n        };\n        var aliases = o.alias;\n        if (aliases) {\n          if (Array.isArray(aliases)) {\n            Array.prototype.push.apply(env.classes, aliases);\n          } else {\n            env.classes.push(aliases);\n          }\n        }\n        _.hooks.run(\"wrap\", env);\n        var attributes = \"\";\n        for (var name in env.attributes) {\n          attributes += \" \" + name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n        }\n        return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + attributes + \">\" + env.content + \"</\" + env.tag + \">\";\n      };\n      function matchPattern(pattern, pos, text, lookbehind) {\n        pattern.lastIndex = pos;\n        var match = pattern.exec(text);\n        if (match && lookbehind && match[1]) {\n          var lookbehindLength = match[1].length;\n          match.index += lookbehindLength;\n          match[0] = match[0].slice(lookbehindLength);\n        }\n        return match;\n      }\n      function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n        for (var token in grammar) {\n          if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n            continue;\n          }\n          var patterns = grammar[token];\n          patterns = Array.isArray(patterns) ? patterns : [patterns];\n          for (var j = 0; j < patterns.length; ++j) {\n            if (rematch && rematch.cause == token + \",\" + j) {\n              return;\n            }\n            var patternObj = patterns[j];\n            var inside = patternObj.inside;\n            var lookbehind = !!patternObj.lookbehind;\n            var greedy = !!patternObj.greedy;\n            var alias = patternObj.alias;\n            if (greedy && !patternObj.pattern.global) {\n              var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n              patternObj.pattern = RegExp(patternObj.pattern.source, flags + \"g\");\n            }\n            var pattern = patternObj.pattern || patternObj;\n            for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n              if (rematch && pos >= rematch.reach) {\n                break;\n              }\n              var str = currentNode.value;\n              if (tokenList.length > text.length) {\n                return;\n              }\n              if (str instanceof Token) {\n                continue;\n              }\n              var removeCount = 1;\n              var match;\n              if (greedy) {\n                match = matchPattern(pattern, pos, text, lookbehind);\n                if (!match || match.index >= text.length) {\n                  break;\n                }\n                var from = match.index;\n                var to = match.index + match[0].length;\n                var p = pos;\n                p += currentNode.value.length;\n                while (from >= p) {\n                  currentNode = currentNode.next;\n                  p += currentNode.value.length;\n                }\n                p -= currentNode.value.length;\n                pos = p;\n                if (currentNode.value instanceof Token) {\n                  continue;\n                }\n                for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === \"string\"); k = k.next) {\n                  removeCount++;\n                  p += k.value.length;\n                }\n                removeCount--;\n                str = text.slice(pos, p);\n                match.index -= pos;\n              } else {\n                match = matchPattern(pattern, 0, str, lookbehind);\n                if (!match) {\n                  continue;\n                }\n              }\n              var from = match.index;\n              var matchStr = match[0];\n              var before = str.slice(0, from);\n              var after = str.slice(from + matchStr.length);\n              var reach = pos + str.length;\n              if (rematch && reach > rematch.reach) {\n                rematch.reach = reach;\n              }\n              var removeFrom = currentNode.prev;\n              if (before) {\n                removeFrom = addAfter(tokenList, removeFrom, before);\n                pos += before.length;\n              }\n              removeRange(tokenList, removeFrom, removeCount);\n              var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n              currentNode = addAfter(tokenList, removeFrom, wrapped);\n              if (after) {\n                addAfter(tokenList, currentNode, after);\n              }\n              if (removeCount > 1) {\n                var nestedRematch = {\n                  cause: token + \",\" + j,\n                  reach\n                };\n                matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n                if (rematch && nestedRematch.reach > rematch.reach) {\n                  rematch.reach = nestedRematch.reach;\n                }\n              }\n            }\n          }\n        }\n      }\n      function LinkedList() {\n        var head = { value: null, prev: null, next: null };\n        var tail = { value: null, prev: head, next: null };\n        head.next = tail;\n        this.head = head;\n        this.tail = tail;\n        this.length = 0;\n      }\n      function addAfter(list, node, value) {\n        var next = node.next;\n        var newNode = { value, prev: node, next };\n        node.next = newNode;\n        next.prev = newNode;\n        list.length++;\n        return newNode;\n      }\n      function removeRange(list, node, count) {\n        var next = node.next;\n        for (var i = 0; i < count && next !== list.tail; i++) {\n          next = next.next;\n        }\n        node.next = next;\n        next.prev = node;\n        list.length -= i;\n      }\n      function toArray(list) {\n        var array = [];\n        var node = list.head.next;\n        while (node !== list.tail) {\n          array.push(node.value);\n          node = node.next;\n        }\n        return array;\n      }\n      return _;\n    }();\n    module.exports = Prism2;\n    Prism2.default = Prism2;\n  }\n});\n\n// src/prism-langs.ts\nvar Prism = __toESM(require_prism());\nPrism.languages.markup = { comment: { pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/, greedy: true }, prolog: { pattern: /<\\?[\\s\\S]+?\\?>/, greedy: true }, doctype: { pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i, greedy: true, inside: { \"internal-subset\": { pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/, lookbehind: true, greedy: true, inside: null }, string: { pattern: /\"[^\"]*\"|'[^']*'/, greedy: true }, punctuation: /^<!|>$|[[\\]]/, \"doctype-tag\": /^DOCTYPE/i, name: /[^\\s<>'\"]+/ } }, cdata: { pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i, greedy: true }, tag: { pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/, greedy: true, inside: { tag: { pattern: /^<\\/?[^\\s>\\/]+/, inside: { punctuation: /^<\\/?/, namespace: /^[^\\s>\\/:]+:/ } }, \"special-attr\": [], \"attr-value\": { pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/, inside: { punctuation: [{ pattern: /^=/, alias: \"attr-equals\" }, { pattern: /^(\\s*)[\"']|[\"']$/, lookbehind: true }] } }, punctuation: /\\/?>/, \"attr-name\": { pattern: /[^\\s>\\/]+/, inside: { namespace: /^[^\\s>\\/:]+:/ } } } }, entity: [{ pattern: /&[\\da-z]{1,8};/i, alias: \"named-entity\" }, /&#x?[\\da-f]{1,8};/i] }, Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity = Prism.languages.markup.entity, Prism.languages.markup.doctype.inside[\"internal-subset\"].inside = Prism.languages.markup, Prism.hooks.add(\"wrap\", function(e) {\n  \"entity\" === e.type && (e.attributes.title = e.content.replace(/&amp;/, \"&\"));\n}), Object.defineProperty(Prism.languages.markup.tag, \"addInlined\", { value: function(e, n) {\n  var t = {}, t = (t[\"language-\" + n] = { pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i, lookbehind: true, inside: Prism.languages[n] }, t.cdata = /^<!\\[CDATA\\[|\\]\\]>$/i, { \"included-cdata\": { pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i, inside: t } }), n = (t[\"language-\" + n] = { pattern: /[\\s\\S]+/, inside: Prism.languages[n] }, {});\n  n[e] = { pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function() {\n    return e;\n  }), \"i\"), lookbehind: true, greedy: true, inside: t }, Prism.languages.insertBefore(\"markup\", \"cdata\", n);\n} }), Object.defineProperty(Prism.languages.markup.tag, \"addAttribute\", { value: function(e, n) {\n  Prism.languages.markup.tag.inside[\"special-attr\"].push({ pattern: RegExp(/(^|[\"'\\s])/.source + \"(?:\" + e + \")\" + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, \"i\"), lookbehind: true, inside: { \"attr-name\": /^[^\\s=]+/, \"attr-value\": { pattern: /=[\\s\\S]+/, inside: { value: { pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/, lookbehind: true, alias: [n, \"language-\" + n], inside: Prism.languages[n] }, punctuation: [{ pattern: /^=/, alias: \"attr-equals\" }, /\"|'/] } } } });\n} }), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup, Prism.languages.xml = Prism.languages.extend(\"markup\", {}), Prism.languages.ssml = Prism.languages.xml, Prism.languages.atom = Prism.languages.xml, Prism.languages.rss = Prism.languages.xml, function(e) {\n  var n = { pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/, alias: \"escape\" }, t = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/, a = \"(?:[^\\\\\\\\-]|\" + t.source + \")\", a = RegExp(a + \"-\" + a), r = { pattern: /(<|')[^<>']+(?=[>']$)/, lookbehind: true, alias: \"variable\" };\n  e.languages.regex = { \"char-class\": { pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/, lookbehind: true, inside: { \"char-class-negation\": { pattern: /(^\\[)\\^/, lookbehind: true, alias: \"operator\" }, \"char-class-punctuation\": { pattern: /^\\[|\\]$/, alias: \"punctuation\" }, range: { pattern: a, inside: { escape: t, \"range-punctuation\": { pattern: /-/, alias: \"operator\" } } }, \"special-escape\": n, \"char-set\": { pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i, alias: \"class-name\" }, escape: t } }, \"special-escape\": n, \"char-set\": { pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i, alias: \"class-name\" }, backreference: [{ pattern: /\\\\(?![123][0-7]{2})[1-9]/, alias: \"keyword\" }, { pattern: /\\\\k<[^<>']+>/, alias: \"keyword\", inside: { \"group-name\": r } }], anchor: { pattern: /[$^]|\\\\[ABbGZz]/, alias: \"function\" }, escape: t, group: [{ pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/, alias: \"punctuation\", inside: { \"group-name\": r } }, { pattern: /\\)/, alias: \"punctuation\" }], quantifier: { pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/, alias: \"number\" }, alternation: { pattern: /\\|/, alias: \"keyword\" } };\n}(Prism), Prism.languages.clike = { comment: [{ pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, lookbehind: true, greedy: true }, { pattern: /(^|[^\\\\:])\\/\\/.*/, lookbehind: true, greedy: true }], string: { pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, greedy: true }, \"class-name\": { pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i, lookbehind: true, inside: { punctuation: /[.\\\\]/ } }, keyword: /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/, boolean: /\\b(?:false|true)\\b/, function: /\\b\\w+(?=\\()/, number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i, operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/, punctuation: /[{}[\\];(),.:]/ }, Prism.languages.javascript = Prism.languages.extend(\"clike\", { \"class-name\": [Prism.languages.clike[\"class-name\"], { pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/, lookbehind: true }], keyword: [{ pattern: /((?:^|\\})\\s*)catch\\b/, lookbehind: true }, { pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/, lookbehind: true }], function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/, number: { pattern: RegExp(/(^|[^\\w$])/.source + \"(?:\" + /NaN|Infinity/.source + \"|\" + /0[bB][01]+(?:_[01]+)*n?/.source + \"|\" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + \"|\" + /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + \"|\" + /\\d+(?:_\\d+)*n/.source + \"|\" + /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source + \")\" + /(?![\\w$])/.source), lookbehind: true }, operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/ }), Prism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/, Prism.languages.insertBefore(\"javascript\", \"keyword\", { regex: { pattern: RegExp(/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source + /\\//.source + \"(?:\" + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + \"|\" + /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + \")\" + /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source), lookbehind: true, greedy: true, inside: { \"regex-source\": { pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/, lookbehind: true, alias: \"language-regex\", inside: Prism.languages.regex }, \"regex-delimiter\": /^\\/|\\/$/, \"regex-flags\": /^[a-z]+$/ } }, \"function-variable\": { pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/, alias: \"function\" }, parameter: [{ pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/, lookbehind: true, inside: Prism.languages.javascript }, { pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i, lookbehind: true, inside: Prism.languages.javascript }, { pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/, lookbehind: true, inside: Prism.languages.javascript }, { pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/, lookbehind: true, inside: Prism.languages.javascript }], constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/ }), Prism.languages.insertBefore(\"javascript\", \"string\", { hashbang: { pattern: /^#!.*/, greedy: true, alias: \"comment\" }, \"template-string\": { pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/, greedy: true, inside: { \"template-punctuation\": { pattern: /^`|`$/, alias: \"string\" }, interpolation: { pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/, lookbehind: true, inside: { \"interpolation-punctuation\": { pattern: /^\\$\\{|\\}$/, alias: \"punctuation\" }, rest: Prism.languages.javascript } }, string: /[\\s\\S]+/ } }, \"string-property\": { pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m, lookbehind: true, greedy: true, alias: \"property\" } }), Prism.languages.insertBefore(\"javascript\", \"operator\", { \"literal-property\": { pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m, lookbehind: true, alias: \"property\" } }), Prism.languages.markup && (Prism.languages.markup.tag.addInlined(\"script\", \"javascript\"), Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, \"javascript\")), Prism.languages.js = Prism.languages.javascript, Prism.languages.actionscript = Prism.languages.extend(\"javascript\", { keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/, operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/ }), Prism.languages.actionscript[\"class-name\"].alias = \"function\", delete Prism.languages.actionscript.parameter, delete Prism.languages.actionscript[\"literal-property\"], Prism.languages.markup && Prism.languages.insertBefore(\"actionscript\", \"string\", { xml: { pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/, lookbehind: true, inside: Prism.languages.markup } }), function(e) {\n  var n = /#(?!\\{).+/, t = { pattern: /#\\{[^}]+\\}/, alias: \"variable\" };\n  e.languages.coffeescript = e.languages.extend(\"javascript\", { comment: n, string: [{ pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/, greedy: true }, { pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/, greedy: true, inside: { interpolation: t } }], keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/, \"class-member\": { pattern: /@(?!\\d)\\w+/, alias: \"variable\" } }), e.languages.insertBefore(\"coffeescript\", \"comment\", { \"multiline-comment\": { pattern: /###[\\s\\S]+?###/, alias: \"comment\" }, \"block-regex\": { pattern: /\\/{3}[\\s\\S]*?\\/{3}/, alias: \"regex\", inside: { comment: n, interpolation: t } } }), e.languages.insertBefore(\"coffeescript\", \"string\", { \"inline-javascript\": { pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/, inside: { delimiter: { pattern: /^`|`$/, alias: \"punctuation\" }, script: { pattern: /[\\s\\S]+/, alias: \"language-javascript\", inside: e.languages.javascript } } }, \"multiline-string\": [{ pattern: /'''[\\s\\S]*?'''/, greedy: true, alias: \"string\" }, { pattern: /\"\"\"[\\s\\S]*?\"\"\"/, greedy: true, alias: \"string\", inside: { interpolation: t } }] }), e.languages.insertBefore(\"coffeescript\", \"keyword\", { property: /(?!\\d)\\w+(?=\\s*:(?!:))/ }), delete e.languages.coffeescript[\"template-string\"], e.languages.coffee = e.languages.coffeescript;\n}(Prism), function(l) {\n  var e = l.languages.javadoclike = { parameter: { pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m, lookbehind: true }, keyword: { pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m, lookbehind: true }, punctuation: /[{}]/ };\n  Object.defineProperty(e, \"addSupport\", { value: function(e2, o) {\n    (e2 = \"string\" == typeof e2 ? [e2] : e2).forEach(function(e3) {\n      var n = function(e4) {\n        e4.inside || (e4.inside = {}), e4.inside.rest = o;\n      }, t = \"doc-comment\";\n      if (a = l.languages[e3]) {\n        var a, r = a[t];\n        if ((r = r ? r : (a = l.languages.insertBefore(e3, \"comment\", { \"doc-comment\": { pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/, lookbehind: true, alias: \"comment\" } }))[t]) instanceof RegExp && (r = a[t] = { pattern: r }), Array.isArray(r))\n          for (var s = 0, i = r.length; s < i; s++)\n            r[s] instanceof RegExp && (r[s] = { pattern: r[s] }), n(r[s]);\n        else\n          n(r);\n      }\n    });\n  } }), e.addSupport([\"java\", \"javascript\", \"php\"], e);\n}(Prism), function(e) {\n  var n = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/, n = (e.languages.css = { comment: /\\/\\*[\\s\\S]*?\\*\\//, atrule: { pattern: RegExp(\"@[\\\\w-](?:\" + /[^;{\\s\"']|\\s+(?!\\s)/.source + \"|\" + n.source + \")*?\" + /(?:;|(?=\\s*\\{))/.source), inside: { rule: /^@[\\w-]+/, \"selector-function-argument\": { pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/, lookbehind: true, alias: \"selector\" }, keyword: { pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/, lookbehind: true } } }, url: { pattern: RegExp(\"\\\\burl\\\\((?:\" + n.source + \"|\" + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + \")\\\\)\", \"i\"), greedy: true, inside: { function: /^url/i, punctuation: /^\\(|\\)$/, string: { pattern: RegExp(\"^\" + n.source + \"$\"), alias: \"url\" } } }, selector: { pattern: RegExp(`(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"'\\\\s]|\\\\s+(?![\\\\s{])|` + n.source + \")*(?=\\\\s*\\\\{)\"), lookbehind: true }, string: { pattern: n, greedy: true }, property: { pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i, lookbehind: true }, important: /!important\\b/i, function: { pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i, lookbehind: true }, punctuation: /[(){};:,]/ }, e.languages.css.atrule.inside.rest = e.languages.css, e.languages.markup);\n  n && (n.tag.addInlined(\"style\", \"css\"), n.tag.addAttribute(\"style\", \"css\"));\n}(Prism), function(e) {\n  var n = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, n = (e.languages.css.selector = { pattern: e.languages.css.selector.pattern, lookbehind: true, inside: n = { \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/, \"pseudo-class\": /:[-\\w]+/, class: /\\.[-\\w]+/, id: /#[-\\w]+/, attribute: { pattern: RegExp(`\\\\[(?:[^[\\\\]\"']|` + n.source + \")*\\\\]\"), greedy: true, inside: { punctuation: /^\\[|\\]$/, \"case-sensitivity\": { pattern: /(\\s)[si]$/i, lookbehind: true, alias: \"keyword\" }, namespace: { pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/, lookbehind: true, inside: { punctuation: /\\|$/ } }, \"attr-name\": { pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/, lookbehind: true }, \"attr-value\": [n, { pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/, lookbehind: true }], operator: /[|~*^$]?=/ } }, \"n-th\": [{ pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/, lookbehind: true, inside: { number: /[\\dn]+/, operator: /[+-]/ } }, { pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i, lookbehind: true }], combinator: />|\\+|~|\\|\\|/, punctuation: /[(),]/ } }, e.languages.css.atrule.inside[\"selector-function-argument\"].inside = n, e.languages.insertBefore(\"css\", \"property\", { variable: { pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i, lookbehind: true } }), { pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/, lookbehind: true }), t = { pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/, lookbehind: true };\n  e.languages.insertBefore(\"css\", \"function\", { operator: { pattern: /(\\s)[+\\-*\\/](?=\\s)/, lookbehind: true }, hexcode: { pattern: /\\B#[\\da-f]{3,8}\\b/i, alias: \"color\" }, color: [{ pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i, lookbehind: true }, { pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i, inside: { unit: n, number: t, function: /[\\w-]+(?=\\()/, punctuation: /[(),]/ } }], entity: /\\\\[\\da-f]{1,8}/i, unit: n, number: t });\n}(Prism), function(e) {\n  var n = /[*&][^\\s[\\]{},]+/, t = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/, a = \"(?:\" + t.source + \"(?:[ \t]+\" + n.source + \")?|\" + n.source + \"(?:[ \t]+\" + t.source + \")?)\", r = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  }), s = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  function i(e2, n2) {\n    n2 = (n2 || \"\").replace(/m/g, \"\") + \"m\";\n    var t2 = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function() {\n      return a;\n    }).replace(/<<value>>/g, function() {\n      return e2;\n    });\n    return RegExp(t2, n2);\n  }\n  e.languages.yaml = { scalar: { pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function() {\n    return a;\n  })), lookbehind: true, alias: \"string\" }, comment: /#.*/, key: { pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function() {\n    return a;\n  }).replace(/<<key>>/g, function() {\n    return \"(?:\" + r + \"|\" + s + \")\";\n  })), lookbehind: true, greedy: true, alias: \"atrule\" }, directive: { pattern: /(^[ \\t]*)%.+/m, lookbehind: true, alias: \"important\" }, datetime: { pattern: i(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source), lookbehind: true, alias: \"number\" }, boolean: { pattern: i(/false|true/.source, \"i\"), lookbehind: true, alias: \"important\" }, null: { pattern: i(/null|~/.source, \"i\"), lookbehind: true, alias: \"important\" }, string: { pattern: i(s), lookbehind: true, greedy: true }, number: { pattern: i(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, \"i\"), lookbehind: true }, tag: t, important: n, punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./ }, e.languages.yml = e.languages.yaml;\n}(Prism), function(o) {\n  var n = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  function e(e2) {\n    return e2 = e2.replace(/<inner>/g, function() {\n      return n;\n    }), RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + \"(?:\" + e2 + \")\");\n  }\n  var t = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source, a = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function() {\n    return t;\n  }), r = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source, l = (o.languages.markdown = o.languages.extend(\"markup\", {}), o.languages.insertBefore(\"markdown\", \"prolog\", { \"front-matter-block\": { pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/, lookbehind: true, greedy: true, inside: { punctuation: /^---|---$/, \"front-matter\": { pattern: /\\S+(?:\\s+\\S+)*/, alias: [\"yaml\", \"language-yaml\"], inside: o.languages.yaml } } }, blockquote: { pattern: /^>(?:[\\t ]*>)*/m, alias: \"punctuation\" }, table: { pattern: RegExp(\"^\" + a + r + \"(?:\" + a + \")*\", \"m\"), inside: { \"table-data-rows\": { pattern: RegExp(\"^(\" + a + r + \")(?:\" + a + \")*$\"), lookbehind: true, inside: { \"table-data\": { pattern: RegExp(t), inside: o.languages.markdown }, punctuation: /\\|/ } }, \"table-line\": { pattern: RegExp(\"^(\" + a + \")\" + r + \"$\"), lookbehind: true, inside: { punctuation: /\\||:?-{3,}:?/ } }, \"table-header-row\": { pattern: RegExp(\"^\" + a + \"$\"), inside: { \"table-header\": { pattern: RegExp(t), alias: \"important\", inside: o.languages.markdown }, punctuation: /\\|/ } } } }, code: [{ pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/, lookbehind: true, alias: \"keyword\" }, { pattern: /^```[\\s\\S]*?^```$/m, greedy: true, inside: { \"code-block\": { pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m, lookbehind: true }, \"code-language\": { pattern: /^(```).+/, lookbehind: true }, punctuation: /```/ } }], title: [{ pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m, alias: \"important\", inside: { punctuation: /==+$|--+$/ } }, { pattern: /(^\\s*)#.+/m, lookbehind: true, alias: \"important\", inside: { punctuation: /^#+|#+$/ } }], hr: { pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m, lookbehind: true, alias: \"punctuation\" }, list: { pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m, lookbehind: true, alias: \"punctuation\" }, \"url-reference\": { pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/, inside: { variable: { pattern: /^(!?\\[)[^\\]]+/, lookbehind: true }, string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/, punctuation: /^[\\[\\]!:]|[<>]/ }, alias: \"url\" }, bold: { pattern: e(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^..)[\\s\\S]+(?=..$)/, lookbehind: true, inside: {} }, punctuation: /\\*\\*|__/ } }, italic: { pattern: e(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^.)[\\s\\S]+(?=.$)/, lookbehind: true, inside: {} }, punctuation: /[*_]/ } }, strike: { pattern: e(/(~~?)(?:(?!~)<inner>)+\\2/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^~~?)[\\s\\S]+(?=\\1$)/, lookbehind: true, inside: {} }, punctuation: /~~?/ } }, \"code-snippet\": { pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/, lookbehind: true, greedy: true, alias: [\"code\", \"keyword\"] }, url: { pattern: e(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source), lookbehind: true, greedy: true, inside: { operator: /^!/, content: { pattern: /(^\\[)[^\\]]+(?=\\])/, lookbehind: true, inside: {} }, variable: { pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/, lookbehind: true }, url: { pattern: /(^\\]\\()[^\\s)]+/, lookbehind: true }, string: { pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/, lookbehind: true } } } }), [\"url\", \"bold\", \"italic\", \"strike\"].forEach(function(n2) {\n    [\"url\", \"bold\", \"italic\", \"strike\", \"code-snippet\"].forEach(function(e2) {\n      n2 !== e2 && (o.languages.markdown[n2].inside.content.inside[e2] = o.languages.markdown[e2]);\n    });\n  }), o.hooks.add(\"after-tokenize\", function(e2) {\n    \"markdown\" !== e2.language && \"md\" !== e2.language || !function e3(n2) {\n      if (n2 && \"string\" != typeof n2)\n        for (var t2 = 0, a2 = n2.length; t2 < a2; t2++) {\n          var r2, s = n2[t2];\n          \"code\" !== s.type ? e3(s.content) : (r2 = s.content[1], s = s.content[3], r2 && s && \"code-language\" === r2.type && \"code-block\" === s.type && \"string\" == typeof r2.content && (r2 = r2.content.replace(/\\b#/g, \"sharp\").replace(/\\b\\+\\+/g, \"pp\"), r2 = \"language-\" + (r2 = (/[a-z][\\w-]*/i.exec(r2) || [\"\"])[0].toLowerCase()), s.alias ? \"string\" == typeof s.alias ? s.alias = [s.alias, r2] : s.alias.push(r2) : s.alias = [r2]));\n        }\n    }(e2.tokens);\n  }), o.hooks.add(\"wrap\", function(e2) {\n    if (\"code-block\" === e2.type) {\n      for (var n2 = \"\", t2 = 0, a2 = e2.classes.length; t2 < a2; t2++) {\n        var r2 = e2.classes[t2], r2 = /language-(.+)/.exec(r2);\n        if (r2) {\n          n2 = r2[1];\n          break;\n        }\n      }\n      var s, i = o.languages[n2];\n      i ? e2.content = o.highlight(function(e3) {\n        e3 = e3.replace(l, \"\");\n        return e3 = e3.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function(e4, n3) {\n          var t3;\n          return \"#\" === (n3 = n3.toLowerCase())[0] ? (t3 = \"x\" === n3[1] ? parseInt(n3.slice(2), 16) : Number(n3.slice(1)), c(t3)) : u[n3] || e4;\n        });\n      }(e2.content), i, n2) : n2 && \"none\" !== n2 && o.plugins.autoloader && (s = \"md-\" + (/* @__PURE__ */ new Date()).valueOf() + \"-\" + Math.floor(1e16 * Math.random()), e2.attributes.id = s, o.plugins.autoloader.loadLanguages(n2, function() {\n        var e3 = document.getElementById(s);\n        e3 && (e3.innerHTML = o.highlight(e3.textContent, o.languages[n2], n2));\n      }));\n    }\n  }), RegExp(o.languages.markup.tag.pattern.source, \"gi\")), u = { amp: \"&\", lt: \"<\", gt: \">\", quot: '\"' }, c = String.fromCodePoint || String.fromCharCode;\n  o.languages.md = o.languages.markdown;\n}(Prism), Prism.languages.graphql = { comment: /#.*/, description: { pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i, greedy: true, alias: \"string\", inside: { \"language-markdown\": { pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/, lookbehind: true, inside: Prism.languages.markdown } } }, string: { pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/, greedy: true }, number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i, boolean: /\\b(?:false|true)\\b/, variable: /\\$[a-z_]\\w*/i, directive: { pattern: /@[a-z_]\\w*/i, alias: \"function\" }, \"attr-name\": { pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i, greedy: true }, \"atom-input\": { pattern: /\\b[A-Z]\\w*Input\\b/, alias: \"class-name\" }, scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/, constant: /\\b[A-Z][A-Z_\\d]*\\b/, \"class-name\": { pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/, lookbehind: true }, fragment: { pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/, lookbehind: true, alias: \"function\" }, \"definition-mutation\": { pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/, lookbehind: true, alias: \"function\" }, \"definition-query\": { pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/, lookbehind: true, alias: \"function\" }, keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/, operator: /[!=|&]|\\.{3}/, \"property-query\": /\\w+(?=\\s*\\()/, object: /\\w+(?=\\s*\\{)/, punctuation: /[!(){}\\[\\]:=,]/, property: /\\w+/ }, Prism.hooks.add(\"after-tokenize\", function(e) {\n  if (\"graphql\" === e.language)\n    for (var i = e.tokens.filter(function(e2) {\n      return \"string\" != typeof e2 && \"comment\" !== e2.type && \"scalar\" !== e2.type;\n    }), o = 0; o < i.length; ) {\n      var n = i[o++];\n      if (\"keyword\" === n.type && \"mutation\" === n.content) {\n        var t = [];\n        if (p([\"definition-mutation\", \"punctuation\"]) && \"(\" === c(1).content) {\n          o += 2;\n          var a = d(/^\\($/, /^\\)$/);\n          if (-1 === a)\n            continue;\n          for (; o < a; o++) {\n            var r = c(0);\n            \"variable\" === r.type && (g(r, \"variable-input\"), t.push(r.content));\n          }\n          o = a + 1;\n        }\n        if (p([\"punctuation\", \"property-query\"]) && \"{\" === c(0).content && (o++, g(c(0), \"property-mutation\"), 0 < t.length)) {\n          var s = d(/^\\{$/, /^\\}$/);\n          if (-1 !== s)\n            for (var l = o; l < s; l++) {\n              var u = i[l];\n              \"variable\" === u.type && 0 <= t.indexOf(u.content) && g(u, \"variable-input\");\n            }\n        }\n      }\n    }\n  function c(e2) {\n    return i[o + e2];\n  }\n  function p(e2, n2) {\n    n2 = n2 || 0;\n    for (var t2 = 0; t2 < e2.length; t2++) {\n      var a2 = c(t2 + n2);\n      if (!a2 || a2.type !== e2[t2])\n        return;\n    }\n    return 1;\n  }\n  function d(e2, n2) {\n    for (var t2 = 1, a2 = o; a2 < i.length; a2++) {\n      var r2 = i[a2], s2 = r2.content;\n      if (\"punctuation\" === r2.type && \"string\" == typeof s2) {\n        if (e2.test(s2))\n          t2++;\n        else if (n2.test(s2) && 0 === --t2)\n          return a2;\n      }\n    }\n    return -1;\n  }\n  function g(e2, n2) {\n    var t2 = e2.alias;\n    t2 ? Array.isArray(t2) || (e2.alias = t2 = [t2]) : e2.alias = t2 = [], t2.push(n2);\n  }\n}), Prism.languages.sql = { comment: { pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/, lookbehind: true }, variable: [{ pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/, greedy: true }, /@[\\w.$]+/], string: { pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/, greedy: true, lookbehind: true }, identifier: { pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/, greedy: true, lookbehind: true, inside: { punctuation: /^`|`$/ } }, function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i, keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i, boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i, number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i, operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i, punctuation: /[;[\\]()`,.]/ }, function(b) {\n  var e = b.languages.javascript[\"template-string\"], t = e.pattern.source, m = e.inside.interpolation, f = m.inside[\"interpolation-punctuation\"], s = m.pattern.source;\n  function n(e2, n2) {\n    if (b.languages[e2])\n      return { pattern: RegExp(\"((?:\" + n2 + \")\\\\s*)\" + t), lookbehind: true, greedy: true, inside: { \"template-punctuation\": { pattern: /^`|`$/, alias: \"string\" }, \"embedded-code\": { pattern: /[\\s\\S]+/, alias: e2 } } };\n  }\n  function h(e2, n2, t2) {\n    e2 = { code: e2, grammar: n2, language: t2 };\n    return b.hooks.run(\"before-tokenize\", e2), e2.tokens = b.tokenize(e2.code, e2.grammar), b.hooks.run(\"after-tokenize\", e2), e2.tokens;\n  }\n  function l(a2, e2, r) {\n    var n2 = b.tokenize(a2, { interpolation: { pattern: RegExp(s), lookbehind: true } }), p = 0, d = {}, n2 = h(n2.map(function(e3) {\n      if (\"string\" == typeof e3)\n        return e3;\n      for (var n3, t2, e3 = e3.content; -1 !== a2.indexOf((t2 = p++, n3 = \"___\" + r.toUpperCase() + \"_\" + t2 + \"___\")); )\n        ;\n      return d[n3] = e3, n3;\n    }).join(\"\"), e2, r), g = Object.keys(d);\n    return p = 0, function e3(n3) {\n      for (var t2 = 0; t2 < n3.length; t2++) {\n        if (p >= g.length)\n          return;\n        var a3, r2, s2, i, o, l2, u2, c = n3[t2];\n        \"string\" == typeof c || \"string\" == typeof c.content ? (a3 = g[p], -1 !== (u2 = (l2 = \"string\" == typeof c ? c : c.content).indexOf(a3)) && (++p, r2 = l2.substring(0, u2), o = d[a3], s2 = void 0, (i = {})[\"interpolation-punctuation\"] = f, 3 === (i = b.tokenize(o, i)).length && ((s2 = [1, 1]).push.apply(s2, h(i[1], b.languages.javascript, \"javascript\")), i.splice.apply(i, s2)), s2 = new b.Token(\"interpolation\", i, m.alias, o), i = l2.substring(u2 + a3.length), o = [], r2 && o.push(r2), o.push(s2), i && (e3(l2 = [i]), o.push.apply(o, l2)), \"string\" == typeof c ? (n3.splice.apply(n3, [t2, 1].concat(o)), t2 += o.length - 1) : c.content = o)) : (u2 = c.content, Array.isArray(u2) ? e3(u2) : e3([u2]));\n      }\n    }(n2), new b.Token(r, n2, \"language-\" + r, a2);\n  }\n  b.languages.javascript[\"template-string\"] = [n(\"css\", /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), n(\"html\", /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), n(\"svg\", /\\bsvg/.source), n(\"markdown\", /\\b(?:markdown|md)/.source), n(\"graphql\", /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), n(\"sql\", /\\bsql/.source), e].filter(Boolean);\n  var a = { javascript: true, js: true, typescript: true, ts: true, jsx: true, tsx: true };\n  function u(e2) {\n    return \"string\" == typeof e2 ? e2 : Array.isArray(e2) ? e2.map(u).join(\"\") : u(e2.content);\n  }\n  b.hooks.add(\"after-tokenize\", function(e2) {\n    e2.language in a && !function e3(n2) {\n      for (var t2 = 0, a2 = n2.length; t2 < a2; t2++) {\n        var r, s2, i, o = n2[t2];\n        \"string\" != typeof o && (r = o.content, Array.isArray(r) ? \"template-string\" === o.type ? (o = r[1], 3 === r.length && \"string\" != typeof o && \"embedded-code\" === o.type && (s2 = u(o), o = o.alias, o = Array.isArray(o) ? o[0] : o, i = b.languages[o]) && (r[1] = l(s2, i, o))) : e3(r) : \"string\" != typeof r && e3([r]));\n      }\n    }(e2.tokens);\n  });\n}(Prism), function(e) {\n  e.languages.typescript = e.languages.extend(\"javascript\", { \"class-name\": { pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/, lookbehind: true, greedy: true, inside: null }, builtin: /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/ }), e.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, /\\btype\\b(?=\\s*(?:[\\{*]|$))/), delete e.languages.typescript.parameter, delete e.languages.typescript[\"literal-property\"];\n  var n = e.languages.extend(\"typescript\", {});\n  delete n[\"class-name\"], e.languages.typescript[\"class-name\"].inside = n, e.languages.insertBefore(\"typescript\", \"function\", { decorator: { pattern: /@[$\\w\\xA0-\\uFFFF]+/, inside: { at: { pattern: /^@/, alias: \"operator\" }, function: /^[\\s\\S]+/ } }, \"generic-function\": { pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/, greedy: true, inside: { function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/, generic: { pattern: /<[\\s\\S]+/, alias: \"class-name\", inside: n } } } }), e.languages.ts = e.languages.typescript;\n}(Prism), function(e) {\n  var n = e.languages.javascript, t = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source, a = \"(@(?:arg|argument|param|property)\\\\s+(?:\" + t + \"\\\\s+)?)\";\n  e.languages.jsdoc = e.languages.extend(\"javadoclike\", { parameter: { pattern: RegExp(a + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source), lookbehind: true, inside: { punctuation: /\\./ } } }), e.languages.insertBefore(\"jsdoc\", \"keyword\", { \"optional-parameter\": { pattern: RegExp(a + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source), lookbehind: true, inside: { parameter: { pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/, lookbehind: true, inside: { punctuation: /\\./ } }, code: { pattern: /(=)[\\s\\S]*(?=\\]$)/, lookbehind: true, inside: n, alias: \"language-javascript\" }, punctuation: /[=[\\]]/ } }, \"class-name\": [{ pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function() {\n    return t;\n  })), lookbehind: true, inside: { punctuation: /\\./ } }, { pattern: RegExp(\"(@[a-z]+\\\\s+)\" + t), lookbehind: true, inside: { string: n.string, number: n.number, boolean: n.boolean, keyword: e.languages.typescript.keyword, operator: /=>|\\.\\.\\.|[&|?:*]/, punctuation: /[.,;=<>{}()[\\]]/ } }], example: { pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/, lookbehind: true, inside: { code: { pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m, lookbehind: true, inside: n, alias: \"language-javascript\" } } } }), e.languages.javadoclike.addSupport(\"javascript\", e.languages.jsdoc);\n}(Prism), function(e) {\n  e.languages.flow = e.languages.extend(\"javascript\", {}), e.languages.insertBefore(\"flow\", \"keyword\", { type: [{ pattern: /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/, alias: \"class-name\" }] }), e.languages.flow[\"function-variable\"].pattern = /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i, delete e.languages.flow.parameter, e.languages.insertBefore(\"flow\", \"operator\", { \"flow-punctuation\": { pattern: /\\{\\||\\|\\}/, alias: \"punctuation\" } }), Array.isArray(e.languages.flow.keyword) || (e.languages.flow.keyword = [e.languages.flow.keyword]), e.languages.flow.keyword.unshift({ pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/, lookbehind: true }, { pattern: /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/, lookbehind: true });\n}(Prism), Prism.languages.n4js = Prism.languages.extend(\"javascript\", { keyword: /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/ }), Prism.languages.insertBefore(\"n4js\", \"constant\", { annotation: { pattern: /@+\\w+/, alias: \"operator\" } }), Prism.languages.n4jsd = Prism.languages.n4js, function(e) {\n  function n(e2, n2) {\n    return RegExp(e2.replace(/<ID>/g, function() {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), n2);\n  }\n  e.languages.insertBefore(\"javascript\", \"function-variable\", { \"method-variable\": { pattern: RegExp(\"(\\\\.\\\\s*)\" + e.languages.javascript[\"function-variable\"].pattern.source), lookbehind: true, alias: [\"function-variable\", \"method\", \"function\", \"property-access\"] } }), e.languages.insertBefore(\"javascript\", \"function\", { method: { pattern: RegExp(\"(\\\\.\\\\s*)\" + e.languages.javascript.function.source), lookbehind: true, alias: [\"function\", \"property-access\"] } }), e.languages.insertBefore(\"javascript\", \"constant\", { \"known-class-name\": [{ pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/, alias: \"class-name\" }, { pattern: /\\b(?:[A-Z]\\w*)Error\\b/, alias: \"class-name\" }] }), e.languages.insertBefore(\"javascript\", \"keyword\", { imports: { pattern: n(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source), lookbehind: true, inside: e.languages.javascript }, exports: { pattern: n(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source), lookbehind: true, inside: e.languages.javascript } }), e.languages.javascript.keyword.unshift({ pattern: /\\b(?:as|default|export|from|import)\\b/, alias: \"module\" }, { pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/, alias: \"control-flow\" }, { pattern: /\\bnull\\b/, alias: [\"null\", \"nil\"] }, { pattern: /\\bundefined\\b/, alias: \"nil\" }), e.languages.insertBefore(\"javascript\", \"operator\", { spread: { pattern: /\\.{3}/, alias: \"operator\" }, arrow: { pattern: /=>/, alias: \"operator\" } }), e.languages.insertBefore(\"javascript\", \"punctuation\", { \"property-access\": { pattern: n(/(\\.\\s*)#?<ID>/.source), lookbehind: true }, \"maybe-class-name\": { pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/, lookbehind: true }, dom: { pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/, alias: \"variable\" }, console: { pattern: /\\bconsole(?=\\s*\\.)/, alias: \"class-name\" } });\n  for (var t = [\"function\", \"function-variable\", \"method\", \"method-variable\", \"property-access\"], a = 0; a < t.length; a++) {\n    var r = t[a], s = e.languages.javascript[r], r = (s = \"RegExp\" === e.util.type(s) ? e.languages.javascript[r] = { pattern: s } : s).inside || {};\n    (s.inside = r)[\"maybe-class-name\"] = /^[A-Z][\\s\\S]*/;\n  }\n}(Prism), function(s) {\n  var e = s.util.clone(s.languages.javascript), t = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source, a = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source, r = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  function n(e2, n2) {\n    return e2 = e2.replace(/<S>/g, function() {\n      return t;\n    }).replace(/<BRACES>/g, function() {\n      return a;\n    }).replace(/<SPREAD>/g, function() {\n      return r;\n    }), RegExp(e2, n2);\n  }\n  r = n(r).source, s.languages.jsx = s.languages.extend(\"markup\", e), s.languages.jsx.tag.pattern = n(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source), s.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/, s.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/, s.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, s.languages.jsx.tag.inside.comment = e.comment, s.languages.insertBefore(\"inside\", \"attr-name\", { spread: { pattern: n(/<SPREAD>/.source), inside: s.languages.jsx } }, s.languages.jsx.tag), s.languages.insertBefore(\"inside\", \"special-attr\", { script: { pattern: n(/=<BRACES>/.source), alias: \"language-javascript\", inside: { \"script-punctuation\": { pattern: /^=(?=\\{)/, alias: \"punctuation\" }, rest: s.languages.jsx } } }, s.languages.jsx.tag);\n  function i(e2) {\n    for (var n2 = [], t2 = 0; t2 < e2.length; t2++) {\n      var a2 = e2[t2], r2 = false;\n      \"string\" != typeof a2 && (\"tag\" === a2.type && a2.content[0] && \"tag\" === a2.content[0].type ? \"</\" === a2.content[0].content[0].content ? 0 < n2.length && n2[n2.length - 1].tagName === o(a2.content[0].content[1]) && n2.pop() : \"/>\" !== a2.content[a2.content.length - 1].content && n2.push({ tagName: o(a2.content[0].content[1]), openedBraces: 0 }) : 0 < n2.length && \"punctuation\" === a2.type && \"{\" === a2.content ? n2[n2.length - 1].openedBraces++ : 0 < n2.length && 0 < n2[n2.length - 1].openedBraces && \"punctuation\" === a2.type && \"}\" === a2.content ? n2[n2.length - 1].openedBraces-- : r2 = true), (r2 || \"string\" == typeof a2) && 0 < n2.length && 0 === n2[n2.length - 1].openedBraces && (r2 = o(a2), t2 < e2.length - 1 && (\"string\" == typeof e2[t2 + 1] || \"plain-text\" === e2[t2 + 1].type) && (r2 += o(e2[t2 + 1]), e2.splice(t2 + 1, 1)), 0 < t2 && (\"string\" == typeof e2[t2 - 1] || \"plain-text\" === e2[t2 - 1].type) && (r2 = o(e2[t2 - 1]) + r2, e2.splice(t2 - 1, 1), t2--), e2[t2] = new s.Token(\"plain-text\", r2, null, r2)), a2.content && \"string\" != typeof a2.content && i(a2.content);\n    }\n  }\n  var o = function(e2) {\n    return e2 ? \"string\" == typeof e2 ? e2 : \"string\" == typeof e2.content ? e2.content : e2.content.map(o).join(\"\") : \"\";\n  };\n  s.hooks.add(\"after-tokenize\", function(e2) {\n    \"jsx\" !== e2.language && \"tsx\" !== e2.language || i(e2.tokens);\n  });\n}(Prism), function(e) {\n  var n = e.util.clone(e.languages.typescript), n = (e.languages.tsx = e.languages.extend(\"jsx\", n), delete e.languages.tsx.parameter, delete e.languages.tsx[\"literal-property\"], e.languages.tsx.tag);\n  n.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + \"(?:\" + n.pattern.source + \")\", n.pattern.flags), n.lookbehind = true;\n}(Prism), Prism.languages.swift = { comment: { pattern: /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/, lookbehind: true, greedy: true }, \"string-literal\": [{ pattern: RegExp(/(^|[^\"#])/.source + \"(?:\" + /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source + \"|\" + /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source + \")\" + /(?![\"#])/.source), lookbehind: true, greedy: true, inside: { interpolation: { pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/, lookbehind: true, inside: null }, \"interpolation-punctuation\": { pattern: /^\\)|\\\\\\($/, alias: \"punctuation\" }, punctuation: /\\\\(?=[\\r\\n])/, string: /[\\s\\S]+/ } }, { pattern: RegExp(/(^|[^\"#])(#+)/.source + \"(?:\" + /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source + \"|\" + /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source + \")\\\\2\"), lookbehind: true, greedy: true, inside: { interpolation: { pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/, lookbehind: true, inside: null }, \"interpolation-punctuation\": { pattern: /^\\)|\\\\#+\\($/, alias: \"punctuation\" }, string: /[\\s\\S]+/ } }], directive: { pattern: RegExp(/#/.source + \"(?:\" + /(?:elseif|if)\\b/.source + \"(?:[ \t]*\" + /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source + \")+|\" + /(?:else|endif)\\b/.source + \")\"), alias: \"property\", inside: { \"directive-name\": /^#\\w+/, boolean: /\\b(?:false|true)\\b/, number: /\\b\\d+(?:\\.\\d+)*\\b/, operator: /!|&&|\\|\\||[<>]=?/, punctuation: /[(),]/ } }, literal: { pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/, alias: \"constant\" }, \"other-directive\": { pattern: /#\\w+\\b/, alias: \"property\" }, attribute: { pattern: /@\\w+/, alias: \"atrule\" }, \"function-definition\": { pattern: /(\\bfunc\\s+)\\w+/, lookbehind: true, alias: \"function\" }, label: { pattern: /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/, lookbehind: true, alias: \"important\" }, keyword: /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/, boolean: /\\b(?:false|true)\\b/, nil: { pattern: /\\bnil\\b/, alias: \"constant\" }, \"short-argument\": /\\$\\d+\\b/, omit: { pattern: /\\b_\\b/, alias: \"keyword\" }, number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i, \"class-name\": /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/, function: /\\b[a-z_]\\w*(?=\\s*\\()/i, constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/, operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/, punctuation: /[{}[\\]();,.:\\\\]/ }, Prism.languages.swift[\"string-literal\"].forEach(function(e) {\n  e.inside.interpolation.inside = Prism.languages.swift;\n}), function(e) {\n  e.languages.kotlin = e.languages.extend(\"clike\", { keyword: { pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/, lookbehind: true }, function: [{ pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/, greedy: true }, { pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/, lookbehind: true, greedy: true }], number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/, operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/ }), delete e.languages.kotlin[\"class-name\"];\n  var n = { \"interpolation-punctuation\": { pattern: /^\\$\\{?|\\}$/, alias: \"punctuation\" }, expression: { pattern: /[\\s\\S]+/, inside: e.languages.kotlin } };\n  e.languages.insertBefore(\"kotlin\", \"string\", { \"string-literal\": [{ pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/, alias: \"multiline\", inside: { interpolation: { pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i, inside: n }, string: /[\\s\\S]+/ } }, { pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/, alias: \"singleline\", inside: { interpolation: { pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i, lookbehind: true, inside: n }, string: /[\\s\\S]+/ } }], char: { pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/, greedy: true } }), delete e.languages.kotlin.string, e.languages.insertBefore(\"kotlin\", \"keyword\", { annotation: { pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/, alias: \"builtin\" } }), e.languages.insertBefore(\"kotlin\", \"function\", { label: { pattern: /\\b\\w+@|@\\w+\\b/, alias: \"symbol\" } }), e.languages.kt = e.languages.kotlin, e.languages.kts = e.languages.kotlin;\n}(Prism), Prism.languages.c = Prism.languages.extend(\"clike\", { comment: { pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, greedy: true }, string: { pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/, greedy: true }, \"class-name\": { pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/, lookbehind: true }, keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/, function: /\\b[a-z_]\\w*(?=\\s*\\()/i, number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i, operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/ }), Prism.languages.insertBefore(\"c\", \"string\", { char: { pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/, greedy: true } }), Prism.languages.insertBefore(\"c\", \"string\", { macro: { pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im, lookbehind: true, greedy: true, alias: \"property\", inside: { string: [{ pattern: /^(#\\s*include\\s*)<[^>]+>/, lookbehind: true }, Prism.languages.c.string], char: Prism.languages.c.char, comment: Prism.languages.c.comment, \"macro-name\": [{ pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i, lookbehind: true }, { pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i, lookbehind: true, alias: \"function\" }], directive: { pattern: /^(#\\s*)[a-z]+/, lookbehind: true, alias: \"keyword\" }, \"directive-hash\": /^#/, punctuation: /##|\\\\(?=[\\r\\n])/, expression: { pattern: /\\S[\\s\\S]*/, inside: Prism.languages.c } } } }), Prism.languages.insertBefore(\"c\", \"function\", { constant: /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/ }), delete Prism.languages.c.boolean, Prism.languages.objectivec = Prism.languages.extend(\"c\", { string: { pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/, greedy: true }, keyword: /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/, operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/ }), delete Prism.languages.objectivec[\"class-name\"], Prism.languages.objc = Prism.languages.objectivec, Prism.languages.reason = Prism.languages.extend(\"clike\", { string: { pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/, greedy: true }, \"class-name\": /\\b[A-Z]\\w*/, keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/, operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/ }), Prism.languages.insertBefore(\"reason\", \"class-name\", { char: { pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/, greedy: true }, constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/, label: { pattern: /\\b[a-z]\\w*(?=::)/, alias: \"symbol\" } }), delete Prism.languages.reason.function, function(e) {\n  for (var n = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source, t = 0; t < 2; t++)\n    n = n.replace(/<self>/g, function() {\n      return n;\n    });\n  n = n.replace(/<self>/g, function() {\n    return /[^\\s\\S]/.source;\n  }), e.languages.rust = { comment: [{ pattern: RegExp(/(^|[^\\\\])/.source + n), lookbehind: true, greedy: true }, { pattern: /(^|[^\\\\:])\\/\\/.*/, lookbehind: true, greedy: true }], string: { pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/, greedy: true }, char: { pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/, greedy: true }, attribute: { pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/, greedy: true, alias: \"attr-name\", inside: { string: null } }, \"closure-params\": { pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/, lookbehind: true, greedy: true, inside: { \"closure-punctuation\": { pattern: /^\\||\\|$/, alias: \"punctuation\" }, rest: null } }, \"lifetime-annotation\": { pattern: /'\\w+/, alias: \"symbol\" }, \"fragment-specifier\": { pattern: /(\\$\\w+:)[a-z]+/, lookbehind: true, alias: \"punctuation\" }, variable: /\\$\\w+/, \"function-definition\": { pattern: /(\\bfn\\s+)\\w+/, lookbehind: true, alias: \"function\" }, \"type-definition\": { pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/, lookbehind: true, alias: \"class-name\" }, \"module-declaration\": [{ pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/, lookbehind: true, alias: \"namespace\" }, { pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/, lookbehind: true, alias: \"namespace\", inside: { punctuation: /::/ } }], keyword: [/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/], function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/, macro: { pattern: /\\b\\w+!/, alias: \"property\" }, constant: /\\b[A-Z_][A-Z_\\d]+\\b/, \"class-name\": /\\b[A-Z]\\w*\\b/, namespace: { pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/, inside: { punctuation: /::/ } }, number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/, boolean: /\\b(?:false|true)\\b/, punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/, operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/ }, e.languages.rust[\"closure-params\"].inside.rest = e.languages.rust, e.languages.rust.attribute.inside.string = e.languages.rust.string;\n}(Prism), Prism.languages.go = Prism.languages.extend(\"clike\", { string: { pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/, lookbehind: true, greedy: true }, keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/, boolean: /\\b(?:_|false|iota|nil|true)\\b/, number: [/\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i], operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./, builtin: /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/ }), Prism.languages.insertBefore(\"go\", \"string\", { char: { pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/, greedy: true } }), delete Prism.languages.go[\"class-name\"], function(e) {\n  var n = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/, t = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function() {\n    return n.source;\n  });\n  e.languages.cpp = e.languages.extend(\"c\", { \"class-name\": [{ pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function() {\n    return n.source;\n  })), lookbehind: true }, /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/], keyword: n, number: { pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i, greedy: true }, operator: />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/, boolean: /\\b(?:false|true)\\b/ }), e.languages.insertBefore(\"cpp\", \"string\", { module: { pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + \"(?:\" + /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + \"|\" + /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function() {\n    return t;\n  }) + \")\"), lookbehind: true, greedy: true, inside: { string: /^[<\"][\\s\\S]+/, operator: /:/, punctuation: /\\./ } }, \"raw-string\": { pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/, alias: \"string\", greedy: true } }), e.languages.insertBefore(\"cpp\", \"keyword\", { \"generic-function\": { pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i, inside: { function: /^\\w+/, generic: { pattern: /<[\\s\\S]+/, alias: \"class-name\", inside: e.languages.cpp } } } }), e.languages.insertBefore(\"cpp\", \"operator\", { \"double-colon\": { pattern: /::/, alias: \"punctuation\" } }), e.languages.insertBefore(\"cpp\", \"class-name\", { \"base-clause\": { pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/, lookbehind: true, greedy: true, inside: e.languages.extend(\"cpp\", {}) } }), e.languages.insertBefore(\"inside\", \"double-colon\", { \"class-name\": /\\b[a-z_]\\w*\\b(?!\\s*::)/i }, e.languages.cpp[\"base-clause\"]);\n}(Prism), Prism.languages.python = { comment: { pattern: /(^|[^\\\\])#.*/, lookbehind: true, greedy: true }, \"string-interpolation\": { pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i, greedy: true, inside: { interpolation: { pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/, lookbehind: true, inside: { \"format-spec\": { pattern: /(:)[^:(){}]+(?=\\}$)/, lookbehind: true }, \"conversion-option\": { pattern: /![sra](?=[:}]$)/, alias: \"punctuation\" }, rest: null } }, string: /[\\s\\S]+/ } }, \"triple-quoted-string\": { pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i, greedy: true, alias: \"string\" }, string: { pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i, greedy: true }, function: { pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g, lookbehind: true }, \"class-name\": { pattern: /(\\bclass\\s+)\\w+/i, lookbehind: true }, decorator: { pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m, lookbehind: true, alias: [\"annotation\", \"punctuation\"], inside: { punctuation: /\\./ } }, keyword: /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/, builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/, boolean: /\\b(?:False|None|True)\\b/, number: /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i, operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/, punctuation: /[{}[\\];(),.:]/ }, Prism.languages.python[\"string-interpolation\"].inside.interpolation.inside.rest = Prism.languages.python, Prism.languages.py = Prism.languages.python, Prism.languages.json = { property: { pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/, lookbehind: true, greedy: true }, string: { pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/, lookbehind: true, greedy: true }, comment: { pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, greedy: true }, number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i, punctuation: /[{}[\\],]/, operator: /:/, boolean: /\\b(?:false|true)\\b/, null: { pattern: /\\bnull\\b/, alias: \"keyword\" } }, Prism.languages.webmanifest = Prism.languages.json;\n\n// src/themes/index.ts\nvar themes_exports = {};\n__export(themes_exports, {\n  dracula: () => dracula_default,\n  duotoneDark: () => duotoneDark_default,\n  duotoneLight: () => duotoneLight_default,\n  github: () => github_default,\n  gruvboxMaterialDark: () => gruvboxMaterialDark_default,\n  gruvboxMaterialLight: () => gruvboxMaterialLight_default,\n  jettwaveDark: () => jettwaveDark_default,\n  jettwaveLight: () => jettwaveLight_default,\n  nightOwl: () => nightOwl_default,\n  nightOwlLight: () => nightOwlLight_default,\n  oceanicNext: () => oceanicNext_default,\n  okaidia: () => okaidia_default,\n  oneDark: () => oneDark_default,\n  oneLight: () => oneLight_default,\n  palenight: () => palenight_default,\n  shadesOfPurple: () => shadesOfPurple_default,\n  synthwave84: () => synthwave84_default,\n  ultramin: () => ultramin_default,\n  vsDark: () => vsDark_default,\n  vsLight: () => vsLight_default\n});\n\n// src/themes/dracula.ts\nvar theme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"#282A36\"\n  },\n  styles: [\n    {\n      types: [\"prolog\", \"constant\", \"builtin\"],\n      style: {\n        color: \"rgb(189, 147, 249)\"\n      }\n    },\n    {\n      types: [\"inserted\", \"function\"],\n      style: {\n        color: \"rgb(80, 250, 123)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgb(255, 85, 85)\"\n      }\n    },\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(255, 184, 108)\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"symbol\"],\n      style: {\n        color: \"rgb(248, 248, 242)\"\n      }\n    },\n    {\n      types: [\"string\", \"char\", \"tag\", \"selector\"],\n      style: {\n        color: \"rgb(255, 121, 198)\"\n      }\n    },\n    {\n      types: [\"keyword\", \"variable\"],\n      style: {\n        color: \"rgb(189, 147, 249)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(98, 114, 164)\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(241, 250, 140)\"\n      }\n    }\n  ]\n};\nvar dracula_default = theme;\n\n// src/themes/duotoneDark.ts\nvar theme2 = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"#6c6783\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#e09142\"\n      }\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#9a86fd\"\n      }\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#eeebff\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#c4b9fe\"\n      }\n    },\n    {\n      types: [\n        \"boolean\",\n        \"string\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"atrule\",\n        \"placeholder\",\n        \"variable\"\n      ],\n      style: {\n        color: \"#ffcc99\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#c4b9fe\"\n      }\n    }\n  ]\n};\nvar duotoneDark_default = theme2;\n\n// src/themes/duotoneLight.ts\nvar theme3 = {\n  plain: {\n    backgroundColor: \"#faf8f5\",\n    color: \"#728fcb\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"#b6ad9a\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#063289\"\n      }\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#b29762\"\n      }\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#2d2006\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#896724\"\n      }\n    },\n    {\n      types: [\n        \"boolean\",\n        \"string\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"atrule\"\n      ],\n      style: {\n        color: \"#728fcb\"\n      }\n    },\n    {\n      types: [\"placeholder\", \"variable\"],\n      style: {\n        color: \"#93abdc\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#896724\"\n      }\n    }\n  ]\n};\nvar duotoneLight_default = theme3;\n\n// src/themes/github.ts\nvar theme4 = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n      style: {\n        color: \"#999988\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"string\", \"attr-value\"],\n      style: {\n        color: \"#e3116c\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#393A34\"\n      }\n    },\n    {\n      types: [\n        \"entity\",\n        \"url\",\n        \"symbol\",\n        \"number\",\n        \"boolean\",\n        \"variable\",\n        \"constant\",\n        \"property\",\n        \"regex\",\n        \"inserted\"\n      ],\n      style: {\n        color: \"#36acaa\"\n      }\n    },\n    {\n      types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n      style: {\n        color: \"#00a4db\"\n      }\n    },\n    {\n      types: [\"function\", \"deleted\", \"tag\"],\n      style: {\n        color: \"#d73a49\"\n      }\n    },\n    {\n      types: [\"function-variable\"],\n      style: {\n        color: \"#6f42c1\"\n      }\n    },\n    {\n      types: [\"tag\", \"selector\", \"keyword\"],\n      style: {\n        color: \"#00009f\"\n      }\n    }\n  ]\n};\nvar github_default = theme4;\n\n// src/themes/nightOwl.ts\nvar theme5 = {\n  plain: {\n    color: \"#d6deeb\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"inserted\", \"attr-name\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(99, 119, 119)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"rgb(173, 219, 103)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(214, 222, 235)\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(247, 140, 108)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\"],\n      style: {\n        color: \"rgb(130, 170, 255)\"\n      }\n    },\n    {\n      // This was manually added after the auto-generation\n      // so that punctuations are not italicised\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(199, 146, 234)\"\n      }\n    },\n    {\n      types: [\"selector\", \"doctype\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(255, 203, 139)\"\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"keyword\"],\n      style: {\n        color: \"rgb(127, 219, 202)\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(255, 88, 116)\"\n      }\n    },\n    {\n      types: [\"property\"],\n      style: {\n        color: \"rgb(128, 203, 196)\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\"\n      }\n    }\n  ]\n};\nvar nightOwl_default = theme5;\n\n// src/themes/nightOwlLight.ts\nvar theme6 = {\n  plain: {\n    color: \"#403f53\",\n    backgroundColor: \"#FBFBFB\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"inserted\", \"attr-name\"],\n      style: {\n        color: \"rgb(72, 118, 214)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(152, 159, 177)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"builtin\", \"char\", \"constant\", \"url\"],\n      style: {\n        color: \"rgb(72, 118, 214)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(201, 103, 101)\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(170, 9, 130)\"\n      }\n    },\n    {\n      // This was manually added after the auto-generation\n      // so that punctuations are not italicised\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(153, 76, 195)\"\n      }\n    },\n    {\n      types: [\"function\", \"selector\", \"doctype\"],\n      style: {\n        color: \"rgb(153, 76, 195)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(17, 17, 17)\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(153, 76, 195)\"\n      }\n    },\n    {\n      types: [\"operator\", \"property\", \"keyword\", \"namespace\"],\n      style: {\n        color: \"rgb(12, 150, 155)\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(188, 84, 84)\"\n      }\n    }\n  ]\n};\nvar nightOwlLight_default = theme6;\n\n// src/themes/oceanicNext.ts\nvar colors = {\n  char: \"#D8DEE9\",\n  comment: \"#999999\",\n  keyword: \"#c5a5c5\",\n  primitive: \"#5a9bcf\",\n  string: \"#8dc891\",\n  variable: \"#d7deea\",\n  boolean: \"#ff8b50\",\n  punctuation: \"#5FB3B3\",\n  tag: \"#fc929e\",\n  function: \"#79b6f2\",\n  className: \"#FAC863\",\n  method: \"#6699CC\",\n  operator: \"#fc929e\"\n};\nvar theme7 = {\n  plain: {\n    backgroundColor: \"#282c34\",\n    color: \"#ffffff\"\n  },\n  styles: [\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: colors.keyword\n      }\n    },\n    {\n      types: [\"attr-value\"],\n      style: {\n        color: colors.string\n      }\n    },\n    {\n      types: [\n        \"comment\",\n        \"block-comment\",\n        \"prolog\",\n        \"doctype\",\n        \"cdata\",\n        \"shebang\"\n      ],\n      style: {\n        color: colors.comment\n      }\n    },\n    {\n      types: [\n        \"property\",\n        \"number\",\n        \"function-name\",\n        \"constant\",\n        \"symbol\",\n        \"deleted\"\n      ],\n      style: {\n        color: colors.primitive\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: colors.boolean\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: colors.tag\n      }\n    },\n    {\n      types: [\"string\"],\n      style: {\n        color: colors.string\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: colors.string\n      }\n    },\n    {\n      types: [\"selector\", \"char\", \"builtin\", \"inserted\"],\n      style: {\n        color: colors.char\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: colors.function\n      }\n    },\n    {\n      types: [\"operator\", \"entity\", \"url\", \"variable\"],\n      style: {\n        color: colors.variable\n      }\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        color: colors.keyword\n      }\n    },\n    {\n      types: [\"atrule\", \"class-name\"],\n      style: {\n        color: colors.className\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        fontWeight: \"400\"\n      }\n    },\n    {\n      types: [\"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    }\n  ]\n};\nvar oceanicNext_default = theme7;\n\n// src/themes/okaidia.ts\nvar theme8 = {\n  plain: {\n    color: \"#f8f8f2\",\n    backgroundColor: \"#272822\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"#f92672\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#8292a2\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"#a6e22e\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"#f8f8f2\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"#ae81ff\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n      style: {\n        color: \"#e6db74\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"#f8f8f2\"\n      }\n    },\n    {\n      types: [\"selector\", \"doctype\"],\n      style: {\n        color: \"#a6e22e\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"keyword\"],\n      style: {\n        color: \"#66d9ef\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"#ae81ff\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\",\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"tag\", \"property\"],\n      style: {\n        color: \"#f92672\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#a6e22e !important\"\n      }\n    },\n    {\n      types: [\"doctype\"],\n      style: {\n        color: \"#8292a2\"\n      }\n    },\n    {\n      types: [\"rule\"],\n      style: {\n        color: \"#e6db74\"\n      }\n    }\n  ]\n};\nvar okaidia_default = theme8;\n\n// src/themes/palenight.ts\nvar theme9 = {\n  plain: {\n    color: \"#bfc7d5\",\n    backgroundColor: \"#292d3e\"\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(105, 112, 152)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"inserted\"],\n      style: {\n        color: \"rgb(195, 232, 141)\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(247, 140, 108)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\"],\n      style: {\n        color: \"rgb(130, 170, 255)\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"selector\"],\n      style: {\n        color: \"rgb(199, 146, 234)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(191, 199, 213)\"\n      }\n    },\n    {\n      types: [\"class-name\", \"attr-name\"],\n      style: {\n        color: \"rgb(255, 203, 107)\"\n      }\n    },\n    {\n      types: [\"tag\", \"deleted\"],\n      style: {\n        color: \"rgb(255, 85, 114)\"\n      }\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"rgb(137, 221, 255)\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(255, 88, 116)\"\n      }\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"doctype\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\"\n      }\n    },\n    {\n      types: [\"url\"],\n      style: {\n        color: \"rgb(221, 221, 221)\"\n      }\n    }\n  ]\n};\nvar palenight_default = theme9;\n\n// src/themes/shadesOfPurple.ts\nvar theme10 = {\n  plain: {\n    color: \"#9EFEFF\",\n    backgroundColor: \"#2D2A55\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(255, 238, 128)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"rgb(173, 219, 103)\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(179, 98, 255)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(255, 255, 255)\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"rgb(255, 98, 140)\"\n      }\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"rgb(165, 255, 144)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(255, 238, 128)\"\n      }\n    },\n    {\n      types: [\"number\", \"boolean\"],\n      style: {\n        color: \"rgb(255, 98, 140)\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(255, 180, 84)\"\n      }\n    },\n    {\n      types: [\n        \"keyword\",\n        \"operator\",\n        \"property\",\n        \"namespace\",\n        \"tag\",\n        \"selector\",\n        \"doctype\"\n      ],\n      style: {\n        color: \"rgb(255, 157, 0)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n      style: {\n        color: \"rgb(250, 208, 0)\"\n      }\n    }\n  ]\n};\nvar shadesOfPurple_default = theme10;\n\n// src/themes/synthwave84.ts\nvar theme11 = {\n  plain: {\n    backgroundColor: \"linear-gradient(to bottom, #2a2139 75%, #34294f)\",\n    backgroundImage: \"#34294f\",\n    color: \"#f92aad\",\n    textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\"],\n      style: {\n        color: \"#495495\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"#ccc\"\n      }\n    },\n    {\n      types: [\n        \"tag\",\n        \"attr-name\",\n        \"namespace\",\n        \"number\",\n        \"unit\",\n        \"hexcode\",\n        \"deleted\"\n      ],\n      style: {\n        color: \"#e2777a\"\n      }\n    },\n    {\n      types: [\"property\", \"selector\"],\n      style: {\n        color: \"#72f1b8\",\n        textShadow: \"0 0 2px #100c0f, 0 0 10px #257c5575, 0 0 35px #21272475\"\n      }\n    },\n    {\n      types: [\"function-name\"],\n      style: {\n        color: \"#6196cc\"\n      }\n    },\n    {\n      types: [\"boolean\", \"selector-id\", \"function\"],\n      style: {\n        color: \"#fdfdfd\",\n        textShadow: \"0 0 2px #001716, 0 0 3px #03edf975, 0 0 5px #03edf975, 0 0 8px #03edf975\"\n      }\n    },\n    {\n      types: [\"class-name\", \"maybe-class-name\", \"builtin\"],\n      style: {\n        color: \"#fff5f6\",\n        textShadow: \"0 0 2px #000, 0 0 10px #fc1f2c75, 0 0 5px #fc1f2c75, 0 0 25px #fc1f2c75\"\n      }\n    },\n    {\n      types: [\"constant\", \"symbol\"],\n      style: {\n        color: \"#f92aad\",\n        textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\"\n      }\n    },\n    {\n      types: [\"important\", \"atrule\", \"keyword\", \"selector-class\"],\n      style: {\n        color: \"#f4eee4\",\n        textShadow: \"0 0 2px #393a33, 0 0 8px #f39f0575, 0 0 2px #f39f0575\"\n      }\n    },\n    {\n      types: [\"string\", \"char\", \"attr-value\", \"regex\", \"variable\"],\n      style: {\n        color: \"#f87c32\"\n      }\n    },\n    {\n      types: [\"parameter\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"entity\", \"url\"],\n      style: {\n        color: \"#67cdcc\"\n      }\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"ffffffee\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"entity\"],\n      style: {\n        cursor: \"help\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"green\"\n      }\n    }\n  ]\n};\nvar synthwave84_default = theme11;\n\n// src/themes/ultramin.ts\nvar theme12 = {\n  plain: {\n    color: \"#282a2e\",\n    backgroundColor: \"#ffffff\"\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(197, 200, 198)\"\n      }\n    },\n    {\n      types: [\"string\", \"number\", \"builtin\", \"variable\"],\n      style: {\n        color: \"rgb(150, 152, 150)\"\n      }\n    },\n    {\n      types: [\"class-name\", \"function\", \"tag\", \"attr-name\"],\n      style: {\n        color: \"rgb(40, 42, 46)\"\n      }\n    }\n  ]\n};\nvar ultramin_default = theme12;\n\n// src/themes/vsDark.ts\nvar theme13 = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"rgb(0, 0, 128)\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(106, 153, 85)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"rgb(86, 156, 214)\"\n      }\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"rgb(181, 206, 168)\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"rgb(100, 102, 149)\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"rgb(156, 220, 254)\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"rgb(206, 145, 120)\"\n      }\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"rgb(215, 186, 125)\"\n      }\n    },\n    {\n      // Fix tag color\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(78, 201, 176)\"\n      }\n    },\n    {\n      // Fix tag color for HTML\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"rgb(86, 156, 214)\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"rgb(212, 212, 212)\"\n      }\n    },\n    {\n      // Fix punctuation color for HTML\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\"\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"rgb(220, 220, 170)\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(78, 201, 176)\"\n      }\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"rgb(209, 105, 105)\"\n      }\n    }\n  ]\n};\nvar vsDark_default = theme13;\n\n// src/themes/vsLight.ts\nvar theme14 = {\n  plain: {\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\"\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(0, 128, 0)\"\n      }\n    },\n    {\n      types: [\"builtin\"],\n      style: {\n        color: \"rgb(0, 112, 193)\"\n      }\n    },\n    {\n      types: [\"number\", \"variable\", \"inserted\"],\n      style: {\n        color: \"rgb(9, 134, 88)\"\n      }\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"rgb(0, 0, 0)\"\n      }\n    },\n    {\n      types: [\"constant\", \"char\"],\n      style: {\n        color: \"rgb(129, 31, 63)\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(128, 0, 0)\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(255, 0, 0)\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\"],\n      style: {\n        color: \"rgb(163, 21, 21)\"\n      }\n    },\n    {\n      types: [\"changed\", \"punctuation\"],\n      style: {\n        color: \"rgb(4, 81, 165)\"\n      }\n    },\n    {\n      types: [\"function\", \"keyword\"],\n      style: {\n        color: \"rgb(0, 0, 255)\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(38, 127, 153)\"\n      }\n    }\n  ]\n};\nvar vsLight_default = theme14;\n\n// src/themes/jettwaveDark.ts\nvar theme15 = {\n  plain: {\n    color: \"#f8fafc\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"#000080\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#6A9955\"\n      }\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"#569CD6\"\n      }\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"#B5CEA8\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"#f8fafc\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"#9CDCFE\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"#cbd5e1\"\n      }\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"#D7BA7D\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#D4D4D4\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\"\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"#7dd3fc\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"#D16969\"\n      }\n    }\n  ]\n};\nvar jettwaveDark_default = theme15;\n\n// src/themes/jettwaveLight.ts\nvar theme16 = {\n  plain: {\n    color: \"#0f172a\",\n    backgroundColor: \"#f1f5f9\"\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"#000080\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#6A9955\"\n      }\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"#0c4a6e\"\n      }\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"#B5CEA8\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"#0f172a\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"#0c4a6e\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"#64748b\"\n      }\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"#D7BA7D\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#475569\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\"\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"#0e7490\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"#D16969\"\n      }\n    }\n  ]\n};\nvar jettwaveLight_default = theme16;\n\n// src/themes/oneDark.ts\nvar theme17 = {\n  plain: {\n    backgroundColor: \"hsl(220, 13%, 18%)\",\n    color: \"hsl(220, 14%, 71%)\",\n    textShadow: \"0 1px rgba(0, 0, 0, 0.3)\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"cdata\"],\n      style: {\n        color: \"hsl(220, 10%, 40%)\"\n      }\n    },\n    {\n      types: [\"doctype\", \"punctuation\", \"entity\"],\n      style: {\n        color: \"hsl(220, 14%, 71%)\"\n      }\n    },\n    {\n      types: [\n        \"attr-name\",\n        \"class-name\",\n        \"maybe-class-name\",\n        \"boolean\",\n        \"constant\",\n        \"number\",\n        \"atrule\"\n      ],\n      style: { color: \"hsl(29, 54%, 61%)\" }\n    },\n    {\n      types: [\"keyword\"],\n      style: { color: \"hsl(286, 60%, 67%)\" }\n    },\n    {\n      types: [\"property\", \"tag\", \"symbol\", \"deleted\", \"important\"],\n      style: {\n        color: \"hsl(355, 65%, 65%)\"\n      }\n    },\n    {\n      types: [\n        \"selector\",\n        \"string\",\n        \"char\",\n        \"builtin\",\n        \"inserted\",\n        \"regex\",\n        \"attr-value\"\n      ],\n      style: {\n        color: \"hsl(95, 38%, 62%)\"\n      }\n    },\n    {\n      types: [\"variable\", \"operator\", \"function\"],\n      style: {\n        color: \"hsl(207, 82%, 66%)\"\n      }\n    },\n    {\n      types: [\"url\"],\n      style: {\n        color: \"hsl(187, 47%, 55%)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"hsl(220, 14%, 71%)\"\n      }\n    }\n  ]\n};\nvar oneDark_default = theme17;\n\n// src/themes/oneLight.ts\nvar theme18 = {\n  plain: {\n    backgroundColor: \"hsl(230, 1%, 98%)\",\n    color: \"hsl(230, 8%, 24%)\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"cdata\"],\n      style: {\n        color: \"hsl(230, 4%, 64%)\"\n      }\n    },\n    {\n      types: [\"doctype\", \"punctuation\", \"entity\"],\n      style: {\n        color: \"hsl(230, 8%, 24%)\"\n      }\n    },\n    {\n      types: [\n        \"attr-name\",\n        \"class-name\",\n        \"boolean\",\n        \"constant\",\n        \"number\",\n        \"atrule\"\n      ],\n      style: {\n        color: \"hsl(35, 99%, 36%)\"\n      }\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        color: \"hsl(301, 63%, 40%)\"\n      }\n    },\n    {\n      types: [\"property\", \"tag\", \"symbol\", \"deleted\", \"important\"],\n      style: {\n        color: \"hsl(5, 74%, 59%)\"\n      }\n    },\n    {\n      types: [\n        \"selector\",\n        \"string\",\n        \"char\",\n        \"builtin\",\n        \"inserted\",\n        \"regex\",\n        \"attr-value\",\n        \"punctuation\"\n      ],\n      style: {\n        color: \"hsl(119, 34%, 47%)\"\n      }\n    },\n    {\n      types: [\"variable\", \"operator\", \"function\"],\n      style: {\n        color: \"hsl(221, 87%, 60%)\"\n      }\n    },\n    {\n      types: [\"url\"],\n      style: {\n        color: \"hsl(198, 99%, 37%)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"hsl(230, 8%, 24%)\"\n      }\n    }\n  ]\n};\nvar oneLight_default = theme18;\n\n// src/themes/gruvboxMaterialDark.ts\nvar theme19 = {\n  plain: {\n    color: \"#ebdbb2\",\n    backgroundColor: \"#292828\"\n  },\n  styles: [\n    {\n      types: [\n        \"imports\",\n        \"class-name\",\n        \"maybe-class-name\",\n        \"constant\",\n        \"doctype\",\n        \"builtin\",\n        \"function\"\n      ],\n      style: {\n        color: \"#d8a657\"\n      }\n    },\n    {\n      types: [\"property-access\"],\n      style: {\n        color: \"#7daea3\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#e78a4e\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"char\", \"url\", \"regex\"],\n      style: {\n        color: \"#a9b665\"\n      }\n    },\n    {\n      types: [\"attr-value\", \"string\"],\n      style: {\n        color: \"#89b482\"\n      }\n    },\n    {\n      types: [\"comment\", \"prolog\", \"cdata\", \"operator\", \"inserted\"],\n      style: {\n        color: \"#a89984\"\n      }\n    },\n    {\n      types: [\n        \"delimiter\",\n        \"boolean\",\n        \"keyword\",\n        \"selector\",\n        \"important\",\n        \"atrule\",\n        \"property\",\n        \"variable\",\n        \"deleted\"\n      ],\n      style: {\n        color: \"#ea6962\"\n      }\n    },\n    {\n      types: [\"entity\", \"number\", \"symbol\"],\n      style: {\n        color: \"#d3869b\"\n      }\n    }\n  ]\n};\nvar gruvboxMaterialDark_default = theme19;\n\n// src/themes/gruvboxMaterialLight.ts\nvar theme20 = {\n  plain: {\n    color: \"#654735\",\n    backgroundColor: \"#f9f5d7\"\n  },\n  styles: [\n    {\n      types: [\n        \"delimiter\",\n        \"boolean\",\n        \"keyword\",\n        \"selector\",\n        \"important\",\n        \"atrule\",\n        \"property\",\n        \"variable\",\n        \"deleted\"\n      ],\n      style: {\n        color: \"#af2528\"\n      }\n    },\n    {\n      types: [\n        \"imports\",\n        \"class-name\",\n        \"maybe-class-name\",\n        \"constant\",\n        \"doctype\",\n        \"builtin\"\n      ],\n      style: {\n        color: \"#b4730e\"\n      }\n    },\n    {\n      types: [\"string\", \"attr-value\"],\n      style: {\n        color: \"#477a5b\"\n      }\n    },\n    {\n      types: [\"property-access\"],\n      style: {\n        color: \"#266b79\"\n      }\n    },\n    {\n      types: [\"function\", \"attr-name\", \"char\", \"url\"],\n      style: {\n        color: \"#72761e\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#b94c07\"\n      }\n    },\n    {\n      types: [\"comment\", \"prolog\", \"cdata\", \"operator\", \"inserted\"],\n      style: {\n        color: \"#a89984\"\n      }\n    },\n    {\n      types: [\"entity\", \"number\", \"symbol\"],\n      style: {\n        color: \"#924f79\"\n      }\n    }\n  ]\n};\nvar gruvboxMaterialLight_default = theme20;\n\n// src/index.ts\n\n\n// src/components/useGetLineProps.ts\n\n\nvar useGetLineProps = (themeDictionary) => (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n  (_a) => {\n    var _b = _a, { className, style, line } = _b, rest = __objRest(_b, [\"className\", \"style\", \"line\"]);\n    const output = __spreadProps(__spreadValues({}, rest), {\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"token-line\", className)\n    });\n    if (typeof themeDictionary === \"object\" && \"plain\" in themeDictionary)\n      output.style = themeDictionary.plain;\n    if (typeof style === \"object\")\n      output.style = __spreadValues(__spreadValues({}, output.style || {}), style);\n    return output;\n  },\n  [themeDictionary]\n);\n\n// src/components/useGetTokenProps.ts\n\n\nvar useGetTokenProps = (themeDictionary) => {\n  const styleForToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    ({ types, empty }) => {\n      if (themeDictionary == null)\n        return void 0;\n      else if (types.length === 1 && types[0] === \"plain\") {\n        return empty != null ? { display: \"inline-block\" } : void 0;\n      } else if (types.length === 1 && empty != null) {\n        return themeDictionary[types[0]];\n      }\n      return Object.assign(\n        empty != null ? { display: \"inline-block\" } : {},\n        ...types.map((type) => themeDictionary[type])\n      );\n    },\n    [themeDictionary]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (_a) => {\n      var _b = _a, { token, className, style } = _b, rest = __objRest(_b, [\"token\", \"className\", \"style\"]);\n      const output = __spreadProps(__spreadValues({}, rest), {\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"token\", ...token.types, className),\n        children: token.content,\n        style: styleForToken(token)\n      });\n      if (style != null) {\n        output.style = __spreadValues(__spreadValues({}, output.style || {}), style);\n      }\n      return output;\n    },\n    [styleForToken]\n  );\n};\n\n// src/utils/normalizeTokens.ts\nvar newlineRe = /\\r\\n|\\r|\\n/;\nvar normalizeEmptyLines = (line) => {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\nvar appendTypes = (types, add) => {\n  const typesSize = types.length;\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n  return types.concat(add);\n};\nvar normalizeTokens = (tokens) => {\n  const typeArrStack = [[]];\n  const tokenArrStack = [tokens];\n  const tokenArrIndexStack = [0];\n  const tokenArrSizeStack = [tokens.length];\n  let i = 0;\n  let stackIndex = 0;\n  let currentLine = [];\n  const acc = [currentLine];\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      let content;\n      let types = typeArrStack[stackIndex];\n      const tokenArr = tokenArrStack[stackIndex];\n      const token = tokenArr[i];\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n        content = token.content;\n      }\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      }\n      const splitByNewlines = content.split(newlineRe);\n      const newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types,\n        content: splitByNewlines[0]\n      });\n      for (let i2 = 1; i2 < newlineCount; i2++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types,\n          content: splitByNewlines[i2]\n        });\n      }\n    }\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\nvar normalizeTokens_default = normalizeTokens;\n\n// src/components/useTokenize.ts\n\nvar useTokenize = ({ prism, code, grammar, language }) => {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (grammar == null)\n      return normalizeTokens_default([code]);\n    const prismConfig = {\n      code,\n      grammar,\n      language,\n      tokens: []\n    };\n    prism.hooks.run(\"before-tokenize\", prismConfig);\n    prismConfig.tokens = prism.tokenize(code, grammar);\n    prism.hooks.run(\"after-tokenize\", prismConfig);\n    return normalizeTokens_default(prismConfig.tokens);\n  }, [\n    code,\n    grammar,\n    language,\n    // prism is a stable import\n    prism\n  ]);\n};\n\n// src/utils/themeToDict.ts\nvar themeToDict = (theme21, language) => {\n  const { plain } = theme21;\n  const themeDict = theme21.styles.reduce((acc, themeEntry) => {\n    const { languages: languages2, style } = themeEntry;\n    if (languages2 && !languages2.includes(language)) {\n      return acc;\n    }\n    themeEntry.types.forEach((type) => {\n      const accStyle = __spreadValues(__spreadValues({}, acc[type]), style);\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, {});\n  themeDict.root = plain;\n  themeDict.plain = __spreadProps(__spreadValues({}, plain), { backgroundColor: void 0 });\n  return themeDict;\n};\nvar themeToDict_default = themeToDict;\n\n// src/components/highlight.ts\nvar Highlight = ({\n  children,\n  language: _language,\n  code,\n  theme: theme21,\n  prism\n}) => {\n  const language = _language.toLowerCase();\n  const themeDictionary = themeToDict_default(theme21, language);\n  const getLineProps = useGetLineProps(themeDictionary);\n  const getTokenProps = useGetTokenProps(themeDictionary);\n  const grammar = prism.languages[language];\n  const tokens = useTokenize({ prism, language, code, grammar });\n  return children({\n    tokens,\n    className: `prism-code language-${language}`,\n    style: themeDictionary != null ? themeDictionary.root : {},\n    getLineProps,\n    getTokenProps\n  });\n};\n\n// src/index.ts\nvar Highlight2 = (props) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Highlight, __spreadProps(__spreadValues({}, props), {\n  prism: props.prism || Prism,\n  theme: props.theme || vsDark_default,\n  code: props.code,\n  language: props.language\n}));\n\n/*! Bundled license information:\n\nprismjs/prism.js:\n  (**\n   * Prism: Lightweight, robust, elegant syntax highlighting\n   *\n   * @license MIT <https://opensource.org/licenses/MIT>\n   * @author Lea Verou <https://lea.verou.me>\n   * @namespace\n   * @public\n   *)\n*/\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prism-react-renderer/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-live/dist/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/react-live/dist/index.mjs ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Editor: function() { return /* binding */ Editor_default; },\n/* harmony export */   LiveContext: function() { return /* binding */ LiveContext_default; },\n/* harmony export */   LiveEditor: function() { return /* binding */ LiveEditor; },\n/* harmony export */   LiveError: function() { return /* binding */ LiveError; },\n/* harmony export */   LivePreview: function() { return /* binding */ LivePreview_default; },\n/* harmony export */   LiveProvider: function() { return /* binding */ LiveProvider_default; },\n/* harmony export */   generateElement: function() { return /* binding */ generateElement; },\n/* harmony export */   renderElementAsync: function() { return /* binding */ renderElementAsync; },\n/* harmony export */   withLive: function() { return /* binding */ withLive; }\n/* harmony export */ });\n/* harmony import */ var prism_react_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prism-react-renderer */ \"(app-pages-browser)/./node_modules/prism-react-renderer/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var use_editable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-editable */ \"(app-pages-browser)/./node_modules/use-editable/dist/use-editable.es.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var sucrase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sucrase */ \"(app-pages-browser)/./node_modules/sucrase/dist/esm/index.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/components/Editor/index.tsx\n\n\n\n\nvar CodeEditor = (props) => {\n  const { tabMode = \"indentation\" } = props;\n  const editorRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const [code, setCode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(props.code || \"\");\n  const { theme } = props;\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    setCode(props.code);\n  }, [props.code]);\n  (0,use_editable__WEBPACK_IMPORTED_MODULE_3__.useEditable)(\n    editorRef,\n    (text) => {\n      const t = text.slice(0, -1);\n      setCode(t);\n      if (props.onChange) {\n        props.onChange(t);\n      }\n    },\n    {\n      disabled: props.disabled,\n      indentation: tabMode === \"indentation\" ? 2 : void 0\n    }\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: props.className, style: props.style, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    prism_react_renderer__WEBPACK_IMPORTED_MODULE_0__.Highlight,\n    {\n      code,\n      theme: props.theme || prism_react_renderer__WEBPACK_IMPORTED_MODULE_0__.themes.nightOwl,\n      language: props.language,\n      children: ({\n        className: _className,\n        tokens,\n        getLineProps,\n        getTokenProps,\n        style: _style\n      }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"pre\",\n        {\n          className: _className,\n          style: __spreadValues(__spreadValues({\n            margin: 0,\n            outline: \"none\",\n            padding: 10,\n            fontFamily: \"inherit\"\n          }, theme && typeof theme.plain === \"object\" ? theme.plain : {}), _style),\n          ref: editorRef,\n          spellCheck: \"false\",\n          children: tokens.map((line, lineIndex) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", __spreadProps(__spreadValues({}, getLineProps({ line })), { children: [\n            line.filter((token) => !token.empty).map((token, tokenIndex) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              \"span\",\n              __spreadValues({}, getTokenProps({ token })),\n              `token-${tokenIndex}`\n            )),\n            \"\\n\"\n          ] }), `line-${lineIndex}`))\n        }\n      )\n    }\n  ) });\n};\nvar Editor_default = CodeEditor;\n\n// src/components/Live/LiveProvider.tsx\n\n\n// src/components/Live/LiveContext.ts\n\nvar LiveContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});\nvar LiveContext_default = LiveContext;\n\n// src/utils/transpile/index.ts\n\n\n// src/utils/transpile/transform.ts\n\nvar defaultTransforms = [\"jsx\", \"imports\"];\nfunction transform(opts = {}) {\n  const transforms = Array.isArray(opts.transforms) ? opts.transforms.filter(Boolean) : defaultTransforms;\n  return (code) => (0,sucrase__WEBPACK_IMPORTED_MODULE_4__.transform)(code, { transforms }).code;\n}\n\n// src/utils/transpile/errorBoundary.tsx\n\n\nvar errorBoundary = (Element, errorCallback) => {\n  return class ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    componentDidCatch(error) {\n      errorCallback(error);\n    }\n    render() {\n      return typeof Element === \"function\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Element, {}) : react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(Element) ? Element : null;\n    }\n  };\n};\nvar errorBoundary_default = errorBoundary;\n\n// src/utils/transpile/evalCode.ts\nvar evalCode = (code, scope) => {\n  const scopeKeys = Object.keys(scope);\n  const scopeValues = scopeKeys.map((key) => scope[key]);\n  return new Function(...scopeKeys, code)(...scopeValues);\n};\nvar evalCode_default = evalCode;\n\n// src/utils/transpile/compose.ts\nfunction compose(...functions) {\n  return functions.reduce(\n    (acc, currentFn) => (...args) => acc(currentFn(...args))\n  );\n}\n\n// src/utils/transpile/index.ts\nvar jsxConst = 'const _jsxFileName = \"\";';\nvar trimCode = (code) => code.trim().replace(/;$/, \"\");\nvar spliceJsxConst = (code) => code.replace(jsxConst, \"\").trim();\nvar addJsxConst = (code) => jsxConst + code;\nvar wrapReturn = (code) => `return (${code})`;\nvar generateElement = ({ code = \"\", scope = {}, enableTypeScript = true }, errorCallback) => {\n  const firstPassTransforms = [\"jsx\"];\n  enableTypeScript && firstPassTransforms.push(\"typescript\");\n  const transformed = compose(\n    addJsxConst,\n    transform({ transforms: [\"imports\"] }),\n    spliceJsxConst,\n    trimCode,\n    transform({ transforms: firstPassTransforms }),\n    wrapReturn,\n    trimCode\n  )(code);\n  return errorBoundary_default(\n    evalCode_default(transformed, __spreadValues({ React: react__WEBPACK_IMPORTED_MODULE_1__ }, scope)),\n    errorCallback\n  );\n};\nvar renderElementAsync = ({ code = \"\", scope = {}, enableTypeScript = true }, resultCallback, errorCallback) => {\n  const render = (element) => {\n    if (typeof element === \"undefined\") {\n      errorCallback(new SyntaxError(\"`render` must be called with valid JSX.\"));\n    } else {\n      resultCallback(errorBoundary_default(element, errorCallback));\n    }\n  };\n  if (!/render\\s*\\(/.test(code)) {\n    return errorCallback(\n      new SyntaxError(\"No-Inline evaluations must call `render`.\")\n    );\n  }\n  const transforms = [\"jsx\", \"imports\"];\n  enableTypeScript && transforms.splice(1, 0, \"typescript\");\n  evalCode_default(transform({ transforms })(code), __spreadProps(__spreadValues({ React: react__WEBPACK_IMPORTED_MODULE_1__ }, scope), { render }));\n};\n\n// src/components/Live/LiveProvider.tsx\n\nfunction LiveProvider({\n  children,\n  code = \"\",\n  language = \"tsx\",\n  theme,\n  enableTypeScript = true,\n  disabled = false,\n  scope,\n  transformCode,\n  noInline = false\n}) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    error: void 0,\n    element: void 0\n  });\n  function transpileAsync(newCode) {\n    return __async(this, null, function* () {\n      const errorCallback = (error) => {\n        setState((previousState) => __spreadProps(__spreadValues({}, previousState), {\n          error: error.toString(),\n          element: void 0\n        }));\n      };\n      try {\n        const transformResult = transformCode ? transformCode(newCode) : newCode;\n        try {\n          const transformedCode = yield Promise.resolve(transformResult);\n          const renderElement = (element) => setState({ error: void 0, element, newCode });\n          if (typeof transformedCode !== \"string\") {\n            throw new Error(\"Code failed to transform\");\n          }\n          const input = {\n            code: transformedCode,\n            scope,\n            enableTypeScript\n          };\n          if (noInline) {\n            setState((previousState) => __spreadProps(__spreadValues({}, previousState), {\n              error: void 0,\n              element: null\n            }));\n            renderElementAsync(input, renderElement, errorCallback);\n          } else {\n            renderElement(generateElement(input, errorCallback));\n          }\n        } catch (error) {\n          return errorCallback(error);\n        }\n      } catch (e) {\n        errorCallback(e);\n        return Promise.resolve();\n      }\n    });\n  }\n  const onError = (error) => setState({ error: error.toString() });\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    transpileAsync(code).catch(onError);\n  }, [code, scope, noInline, transformCode]);\n  const onChange = (newCode) => {\n    transpileAsync(newCode).catch(onError);\n  };\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    LiveContext_default.Provider,\n    {\n      value: __spreadProps(__spreadValues({}, state), {\n        code,\n        language,\n        theme,\n        disabled,\n        onError,\n        onChange\n      }),\n      children\n    }\n  );\n}\nvar LiveProvider_default = LiveProvider;\n\n// src/components/Live/LiveEditor.tsx\n\n\nfunction LiveEditor(props) {\n  const { code, language, theme, disabled, onChange } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LiveContext_default);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    Editor_default,\n    __spreadValues({\n      theme,\n      code,\n      language,\n      disabled,\n      onChange\n    }, props)\n  );\n}\n\n// src/components/Live/LiveError.tsx\n\n\nfunction LiveError(props) {\n  const { error } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LiveContext_default);\n  return error ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"pre\", __spreadProps(__spreadValues({}, props), { children: error })) : null;\n}\n\n// src/components/Live/LivePreview.tsx\n\n\n// src/components/Live/ErrorBoundary.tsx\n\nvar ErrorBoundary = class extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n  componentDidCatch(err) {\n    var _a, _b;\n    (_b = (_a = this.props).onError) == null ? void 0 : _b.call(_a, err);\n  }\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n    return this.props.children;\n  }\n};\n\n// src/components/Live/LivePreview.tsx\n\nfunction LivePreview(_a) {\n  var _b = _a, { Component: Component3 = \"div\" } = _b, rest = __objRest(_b, [\"Component\"]);\n  const { element: Element, onError, newCode } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LiveContext_default);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ErrorBoundary, { onError, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component3, __spreadProps(__spreadValues({}, rest), { children: Element ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Element, {}) : null })) }, newCode);\n}\nvar LivePreview_default = LivePreview;\n\n// src/hoc/withLive.tsx\n\nfunction withLive(WrappedComponent) {\n  const WithLive = (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(LiveContext_default.Consumer, { children: (live) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(WrappedComponent, __spreadValues({ live }, props)) });\n  WithLive.displayName = \"WithLive\";\n  return WithLive;\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-live/dist/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fxiaoqi%2Fworkspace%2Fui-library%2Fdocs%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);